#INCLUDE  "FIVEWIN.CH"
#include  "topconn.ch"
#include  "tbiconn.ch"

#Define _nD_AcmEntr       1
#Define _nD_AcmSaida      2
#Define _nD_Saldo         3
#Define _nD_AcmSld        4
#Define _nD_Acm_dDias     5
#Define _nD_Dias_AcmSld   6
#Define _nD_SaldoMedio    7
#Define _nD_Giro          8
#Define _nD_TamVetor      9
#Define _nD_ENTER         Chr(13)+Chr(10)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MESTC01   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gestao de Materiais Multi-Tek - PGMM (Planilha de Gestao    º±±
±±º          ³Materiais Multi-Tek)                                        º±±
±±º          ³                                                            º±±
±±º          ³Fechamento Mensal dos Historicos de Movimentacao e          º±±
±±º          ³reclassificacao Logistica da PGMM - Geracao (SZ9 e SZA)     º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
Documentacoes(Alteracoes)

Criado o parametro MV_LIBPGMM para controlar quando for incluida novas sku no cadastro de produtos.
O impacto da inclusao esta ligada a amarracao do SIMIL + EIS deste novo produto que podem refletir
distorcoes no calculo do consumo medio.
Como isto ocorre ? Imagine que hoje efetuamos o Fechamento de um dado simil + eis  e dentro desta simil+eis
tenho 3 produtos. Logo obtenho 20 como consumo medio para este simil+eis com base nestas 3 sku.
Este Consumo e gravado no SB1.
Daqui algum tempo altero o SIMIL+EIS e agora este simil e eis passa contemplar 4 produtos
na sequencia NAO RODO o fechamento logo o SB1 esta com vinte e faco a Geracao da PGMM neste momento
serao levadas em consideracao 4 sku para analise do consumo  em quando o fechamento somente levou em consideracao
3. Como o consumo no periodo e fetor importante para determinar as classificacoes podemos dizer que
quando ocorre este tipo de situacao todo o FECHAMENTO DA PLANILHA e INVALIDADO.
Como na Multitek a alteracao  de produtos e criacao de novos e quase que diaria fica como premissia
sempre que for efetuar uma GERACAO DA PLANILHA ser necessario efetuar um FECHAMENTO ANTES.

10/09/06
Estavam ocorrendo problemas no SHARE ou seja quando o share de todas as SKU ligada ao simil+eis e
igual a zero ou seja o usuario nao atualizou o share a quantidade a comprar fica zero. Z8_COMPRAR=0
Agora efetuamos a seguinte alteracao quando isto ocorre zero tambem o Z7_COMPRAS de desmarco o produto
na seguencia e gerado um logo desta situacao. Este processo ocorre durante a Geracao da PGMM
Segundo o Milton nem todos os produtos tem share ou seja nao devem ser comprados logo ficou como
sugestao controlar pelo lote manual onde menor que zero nao gera na planilha.

10/09/06
Revisao sobre o uso do parametro MV_LIBPGMM agora somente travando na Geracao da Pgmm e nao mais na
Manutencao da Pgmm.

11/09/06
Segundo informado pelo Sr. Jose estao sendo geradas Solicitacoes de Compras de Materiais que nao foram 
analisados ainda. Para tanto foi criado um relatorio que gera em XLS de todos os itens que iram gerar
compras antes de efetivar a geracao de SC.
Foi indicado como procedimento ao usuario  antes de liberar para o Sr. Milton a geracao de Sc. Gerar 
em Excel esta relacao pois possibilita conferencia e ao mesmo tempo pode estar guardando como Historico
caso necessite.
                  
11/09/06
Alteracao na Geracao de Sc. A Sc estava sendo gerado logo apos o usuario click no botao agora esta sendo
gerada uma mensagem para que o mesmo confirme a operacao.

*/
User Function MESTC01()

Local oDlg,nOpca:=0
Local cPeriodo1 := ""
Local cPeriodo2 := ""
Local oFntFecha,oFntFecha1,oFntFecha2,oFntFecha3,oFntFecha4,oFntFecha5
Local lReprocessa := .F.

Private nPgmPeri := GETMV("MV_PGMPERI") // Pediodo de Fechamento p/ Leitura dos Historicos.
Private nPgmGiro := GETMV("MV_PGMGIRO") // Pediodo de Fechamento p/ Leitura dos Historicos.
Private dIniMes  := Ctod("")            // Data inicial para processamento do Mes.
Private dIniGir  := Ctod("")            // Data Inicial para processamento do Giro do Estoque
Private dIniHis  := Ctod("")            // Data Inicial para processamento dos Historicos
Private dFimProc := Ctod("")            // Data final para processamento do Fechamento do Mes do Historio e do Giro
Private lGravaGiro := GetMv("MV_GRGIRO") // Libera a Gravacao do Giro
// Este paramentro foi criado em funcao da Multitek
// nao ter Historico anterior do giro.
// Logo o Giro permanecera o Mesmo para todos os
// meses ate a virada do parametro.
Private cGravaGiro := IIf(lGravaGiro,"Sim","Nao")

Private aDatFecha:= {}
Private _aLog    := {}
Private _aAud    := {}
Private _ChaveAud:= ""

//#IFDEF TOP               ??? Como isto funciona pode ser util
//	TCInternal(5,"*OFF")   // Desliga Refresh no Lock do Top
//#ENDIF


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o SX1 -                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX1()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ aDatFecha[1] Data valida para Final de todos os Processamentos³
//³              (Mes, Historico e Giro)                          ³
//³ aDatFecha[2] Data valida para Inicio do Mes                   ³
//³ aDatFecha[3] Data valida para Inicio do Historico             ³
//³ aDatFecha[4] Data valida para Inicio do Giro                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aDatFecha := U_DataFecha()


//Caso deseje travar o acesso
//If Substr(cAcesso,19,1) == " "
//	Help ( " ", 1, "SEMPERM" )
//	Return .F.
//EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao de Fontes para esta janela ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFINE FONT oFntFecha  NAME "TIMES NEW ROMAN" SIZE 19,34 BOLD   //Largura x Altura
DEFINE FONT oFntFecha1 NAME "TIMES NEW ROMAN" SIZE 6,10 BOLD
DEFINE FONT oFntFecha2 NAME "Ms Sans Serif"   SIZE 6,10 BOLD
DEFINE FONT oFntFecha3 NAME "Mono As"         SIZE 6,10 BOLD
DEFINE FONT oFntFecha4 NAME "TIMES NEW ROMAN" SIZE 6,15 BOLD
DEFINE FONT oFntFecha5 NAME "TIMES NEW ROMAN" SIZE 11.5,22 BOLD

DEFINE MSDIALOG oDlg FROM  96,4 TO 475+10,625 TITLE "FECHAMENTO MENSAL DOS HISTORICOS"  PIXEL

@ 018,  9 TO 178, 300 LABEL "" OF oDlg  PIXEL
@ 028, 15 Say " = > ESTE PROGRAMA TEM COMO OBJETIVO:                                                   " SIZE 275, 10 OF oDlg PIXEL FONT oFntFecha2
@ 038, 15 Say " Efetuar o FECHAMENTO MENSAL DOS HISTORICOS de movimentacao e RECLASSIFICACAO LOGISTICA     " SIZE 275, 10 OF oDlg PIXEL
@ 048, 15 Say " DA PGMM - Gerando  (SZ9 e SZA) que corresponde aos Historicos por Simil+EIS e SKU.         " SIZE 275, 10 OF oDlg PIXEL
@ 058, 15 Say "                                                                                             " SIZE 275, 10 OF oDlg PIXEL
@ 068, 15 Say " = > PARAMETROS ENVOLVIDOS:                                                                                 " SIZE 275, 10 OF oDlg PIXEL FONT oFntFecha2
@ 078, 15 Say " MV_PGMPERI - Periodo do parametro para analise do Historico e dos ultimos "+strzero(nPgmPeri,2)+" meses.      " SIZE 275, 10 OF oDlg PIXEL
@ 088, 15 Say " MV_PGMGIRO - Periodo do parametro para analise do Giro e dos ultimos "+strzero(nPgmGiro,2)+" meses.           " SIZE 275, 10 OF oDlg PIXEL
@ 098, 15 Say " MV_TMPREPR - Periodo para Reprocessamento: "+STR(GETMV("MV_TMPREPR"))+" dias."            SIZE 275, 10 OF oDlg PIXEL
@ 108, 15 Say " MV_ALMFECH - Almoxarifados Nao Considerados na PGMM: "+GetMV("MV_ALMFECH")                         SIZE 275, 20 OF oDlg PIXEL

@ 128, 15 Say " MV_GRGIRO  - Efetua Calculo do Giro  : "+cGravaGiro                                     SIZE 275, 10 OF oDlg PIXEL
@ 138, 15 Say "                                                                                            " SIZE 275, 10 OF oDlg PIXEL
@ 148, 15 Say " = > PERIODOS VALIDOS (COM BASE NO SZ9 ULTIMO PROCESSAMENTO):                               " SIZE 275, 10 OF oDlg PIXEL FONT oFntFecha2
@ 158, 15 Say strzero(month(aDatFecha[1,1]),2)+" / " + str(year(aDatFecha[1,1]),4)+" - Reprocessamento do ultimo Fechamento  " SIZE 275, 10 OF oDlg PIXEL
@ 168, 15 Say strzero(month(aDatFecha[2,1]),2)+" / " + str(year(aDatFecha[2,1]),4)+" - Fechar novo Perido.                   " SIZE 275, 10 OF oDlg PIXEL


DEFINE SBUTTON FROM 178,209 TYPE 5 ACTION Pergunte("PLANI1",.T.) ENABLE OF oDlg
DEFINE SBUTTON FROM 178,238 TYPE 1 ACTION (nOpca:=1,IIF(valper(aDatFecha),oDlg:End(),nOpca:=0)) ENABLE OF oDlg
DEFINE SBUTTON FROM 178,267 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg
ACTIVATE MSDIALOG oDlg CENTER


If nOpca == 1
	
	pergunte("PLANI1"+SPACE(4),.F.) // Sempre Le a ultima solicitacao com base no SX1
	
	If MV_PAR01 = 1        //  ( Fechamento )
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Fechamento do novo Mes                                          ³
		//³                                                                 ³
		//³ aDatFecha[2,1] Data valida para Final de todos os Processamentos³
		//³                (Mes, Historico e Giro)                          ³
		//³ aDatFecha[2,2] Data valida para Inicio do Mes                   ³
		//³ aDatFecha[2,3] Data valida para Inicio do Historico             ³
		//³ aDatFecha[2,4] Data valida para Inicio do Giro                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		// Data final para processamento do Fechamento do Mes do Historio e do Giro
		dFimProc :=         aDatFecha[2,1]
		// Data inicial para processamento do Mes.
		dIniMes  :=         aDatFecha[2,2]
		// Data Inicial para processamento dos Historicos
		dIniHis  :=         aDatFecha[2,3]
		// Data Inicial para processamento do Giro do Estoque
		dIniGir  :=         aDatFecha[2,4]
		
	Else                   //  ( Reprocessamento )
		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reprocessamento do Mes                                          ³
		//³                                                                 ³
		//³ aDatFecha[1,1] Data valida para Final de todos os Processamentos³
		//³                (Mes, Historico e Giro)                          ³
		//³ aDatFecha[1,2] Data valida para Inicio do Mes                   ³
		//³ aDatFecha[1,3] Data valida para Inicio do Historico             ³
		//³ aDatFecha[1,4] Data valida para Inicio do Giro                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		// Data final para processamento do Fechamento do Mes do Historio e do Giro
		dFimProc :=         aDatFecha[1,1]
		// Data inicial para processamento do Mes.
		dIniMes  :=         aDatFecha[1,2]
		// Data Inicial para processamento dos Historicos
		dIniHis  :=         aDatFecha[1,3]
		// Data Inicial para processamento do Giro do Estoque
		dIniGir  :=         aDatFecha[1,4]
		
		lReprocessa := .T.
		
	Endif
	
	
	_ChaveAud := ALLTRIM(MV_PAR02) + ALLTRIM(MV_PAR03)
	
	If  !EmptY(_ChaveAud)
		DbSelectArea("SB1")
		DbOrderNickname("B1SIMIL")         // Filial+Simil+Eis
		If  !DbSeek(xFilial("SB1")+_ChaveAud)
			
			Aviso("ATENCAO", "Nao foi encontrada nenhuma chave Simil+Eis no Cadastro de Produtos p/ processo de Analise."+;
			" Voce pode Informar uma chave correta ou deixar os"+;
			"dos campos em branco simil + eis para que nao seja efetuada nenhuma analise "+;
			"especifica",{"&Ok"})
			
			Return
		Endif
	Endif
	
	processa({|lend| U_MESTPROC(lReprocessa)},"Processamento da Planilha","Efetuando Processamento da Planilha",.F.)
	
EndIf

Return




Static Function Valper(aDatFecha)
Local lRet     := .T.
Local	dFimProc := aDatFecha[2,1]   
Local dMvUlmes := GetMv("MV_ULMES")
                                   
dFimProc := IIf ( MV_PAR01 = 1 , aDatFecha[2,1] , aDatFecha[1,1] ) // Fechamento , Reprocessamento

If dFimProc > dMvUlmes
	Aviso("ATENCAO", "Data de Fechamento da Planilha nao pode ser maior que a data de fechamento do estoque.",{"&Ok"})
   lRet :=.f. 
Endif     

Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MESTPROC  ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Processamento dos Arquivos da Planilha.                     º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function MESTPROC(lReprocessa)

Local   cMensagem  := ""
Private lFechament := If (Upper(Funname())= "#MESTC01",.T.,.F.) // Fechamento da Planilha

Default lReprocessa := .F.

if lFechament
	if lReprocessa
		cMensagem  := "Executando Reprocessamento do Fechamento"
	Else
		cMensagem  := "Executando o Fechamento do Mes"
	Endif
Else
	cMensagem  := "Efetuando Geracao da Planilha"
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Executa o Processo de Leitura/Apontamento       	  			   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_Proc2Bar( { || Proces(lReprocessa,lFechament) } , cMensagem , NIL , NIL , .T. )

Return



Static Function Proces(lReprocessa,lFechament)

Local aSKU      := {}  // Vetor 1 - Sku
Local aEIS      := {}  // Vetor 2 - Simil + Eis + Sku
Local aSimil    := {}  // Vetor 3 - Simil + Eis

Private nAcumCust := 0   // Acumulado dos Custos

If lFechament         //  Fechamento Mensal
	U_BarG2Set( 11 )   // 10 Indica o total de Etapas que envolvem o processo.
Else                  // Geracao da Planilha
	U_BarG2Set( 02 )   // 02 Indica o total de Etapas que envolvem o processo.
Endif


U_IncProG1( "Iniciando Processamento" )
U_IncProG2( "Iniciando Processamento" , .T. )



If lFechament

	
	// Etapa 01 - Processa todas as Saidas de Estoque com base no SD2
	//
	U_IncProG1( "Iniciando Processamento SD2 " )
	U_IncProG2( "ETAPA 01 - Processando SD2 - Arquivo de Saidas" , .T. )
	U_ProcSD2(@aSKU,@aEIS,@aSimil,lFechament)
	
	// Etapa 02 - Processa todas as Saidas de Estoque com base no SD3
	//
	U_IncProG1( "Iniciando Processamento SD3 " )
	U_IncProG2( "ETAPA 02 - Processando SD3 - Arquivo de Movimentos" , .T. )
	U_ProcSD3(@aSKU,@aEIS,@aSimil,lFechament)
	
	
	// Etapa 03 - Grava o SZA com base na matriz aSku.
	//
	U_IncProG1( "Iniciando Processamento SZA " )
	U_IncProG2( "ETAPA 03 - Gravando    SZA - Historico por Sku" , .T. )
	U_ProcSZA(aSKU,lFechament)
	
	// Etapa 04 - Grava o SZ9 com base na matriz aSimil.
	//
	U_IncProG1( "Iniciando Gravacao do SZ9 "  )
	U_IncProG2( "ETAPA 04 - Gravando    SZ9 - Historico por Simil + Eis" , .T. )
	U_ProcSZ9(aSimil,lFechament)


Endif


aSKU    := {}  // Vetor 1 - Sku
aEIS    := {}  // Vetor 2 - Simil + Eis + Sku
aSimil  := {}  // Vetor 3 - Simil + Eis

// Etapa 05 - Acumula saldos em Estoque dentro dos Vetores e retorna a variavel nAcumCust.
//
//U_IncProG1( "Iniciando Processamento do SB1 " )
U_IncProG2( "ETAPA 05 - Processando SB1 (Montando Vetor Simil e Vetor Sku com Saldos do Estoque )" , .T. )
U_ProcSB2(@aSimil,@aSKU,@nAcumCust,lFechament)


If lFechament
	
	
	// Etapa 06 - Funcao de Geracao do Giro de Estoque
	//-> Inclusao em 21.03.05 - Marcelo Vicente
	//-> Chamada da funcao U_fGiro para cada Simil + Eis e a mesma ira retornar 2 valores
	// que seram gravados no SZ9 MENSALMENTE
	//	SZ9->Z9_AC_S_D   := _nAcm_Dias    //-> Acumuladores Saldo x Dia
	//	SZ9->Z9_ACMDDIA  := _nDias        //-> Qtd de Dias no Mes
	U_IncProG1( "Iniciando Processamento do D1/D2/D3 - Geracao Giro Mensal." )
	U_IncProG2( "ETAPA 06 - Processando  D1/D2/D3 (Geracao do Giro Mensal)" , .T. )
	#IFDEF TOP  // Nao esta preparada para DBF.
		U__fGiroGrvZ9(aSimil,aSku,lFechament)
	#ENDIF
	

	// Etapa 07 - Processa o Historico e retorna a Variavel nAcumCust
	//
	U_IncProG1( "Iniciando Processamento do SZ9 " )
	U_IncProG2( "ETAPA 07 - Processando SZ9 - Historico por Simil + Eis" , .T. )
	U_CalcSZ9(@aSimil,@aSku,@nAcumCust,lFechament)
	
	
	
	// Etapa 08 - Processa o Historico SZA
	//
	U_IncProG1( "Iniciando Processamento do SZA " )
	U_IncProG2( "ETAPA 08 - Processando SZ9 - Historico por Simil + Eis" , .T. )
	U_CalcSZA(@aSimil,@aSku,@nAcumCust,lFechament)
	
	
	// Etapa 09 - Calculo o Giro do Estoque com base no Historico SZ9.
	//
	U_IncProG1( "Iniciando Processamento do Giro " )
	U_IncProG2( "ETAPA 09 - Calcula o Giro de Estoque" , .T. )
	#IFDEF TOP  // Nao esta preparada para DBF.
		U_GiroEst(@aSimil)
	#ENDIF
	
	
	// Etapa 10 - Processa Vetor para definir as Classificacoes
	//
	U_IncProG1( "Iniciando Processamento do Vetor " )
	U_IncProG2( "ETAPA 10 - Processando Matriz Resultante do SB1 , SB2 e SZ9" , .T. )
	U_ProcVetor(@aSimil,@nAcumCust,lFechament)
	
	
	// Etapa 11 - Grava novas classificacoes no SB1.
	//
	U_IncProG1( "Iniciando Atualizacao das Classificacoes " )
	U_IncProG2( "ETAPA 11 - Atualizando SB1 / SZA / SZ9 com novas classificacoes." , .T. )
	U_GravSB1(@aSimil,@aSKU,lFechament)
	
	
	// O parametro abaixo e tratado pelos programas:
	// a) REGRAVAEIS.PRW  - Trava  a Geracao da Planilha "MESTC02"
	//                      Devido altera o Eis ou adiciona um novo EIS        PutMv('MV_LIBPGMM',.T.)
	// b) MESTC01.PRW     - Libera a Geracao da Planilha "MESTC02"
	//                      Apos Reprocessamento ou Fechamento da Planilha     PutMv('MV_LIBPGMM',.F.)
	// c) MESTC02.PRW     - Analiza se esta permitido a Geracao da Planilha    GETMV('MV_LIBPGMM)
	//
	__cUserId // Variável Publica com o ID do Usuário Logado
	cNome := Alltrim(UsrRetName(__cUserId))

	PutMv('MV_LIBPGMM',"F-"+cNome)
	//  Libera o usuario caso o mesmo estaja bloqueado na rotina de Manutencao da Planilha
	//  o bloqueio automatico ocorre quando o algum usuario efetua alteracao de um dado EIS.
	
Else
	
	
	// Etapa 12 - Geracao da PGMM com a gravacao do SZ7 e SZ8
	//
	U_IncProG1( "Iniciando Gravacao do SZ7 e SZ8 " )
	U_IncProG2( "ETAPA 12 - Geracao de dados para a Manutencao." , .T. )
	U_GeraZ7eZ8(@aSimil,@aSKU,lFechament)
	
	
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a existencia de Log para Impressao.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_aLog) .or. !Empty(_aAud)
	_Imprime()
Endif



Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ProcSD2   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Processamento dos Arquivos da Planilha.                     º±±
±±º          ³Arquivos de Saidas                                          º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function ProcSD2(aSKU,aEIS,aSimil)
Local lQuery    := .T.
Local cAliasSD2 := ""
Local cAliasSB1 := ""

Local aStruSD2  := SD2->(dbStruct())
Local cQuery    := ""
Local cFilSD2   := ""
Local cIndex    := ""
Local cChave    := ""
Local nIndex    := 0
Local cCodiEis  := ""
Local cClassi   := ""
Local nCount    := 0
Local cTimeIni  := Time()
Local cAlmoxa    := U_RetString( GETMV("MV_ALMFECH")) // Relacao de Almoxarifados que podem entrar no processo.
// durante o processo de definicao do saldo da Malha.


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Observacao:")
	GeraAud("Qtde da Saida       =  Qtde por Sku")
	GeraAud("Qtde p/ SZA         =  Acumulador Saidas")
	GeraAud("Apanhe p/ SZA       =  Apanhes Acumulados por Sku")
	GeraAud("Qtde p/ SZ9         =  Saidas Acumuladas por Eis")
	GeraAud("Apanhe p/ SZ9       =  Apanhe Acumulado por Eis")
	GeraAud("Cst x Qtde p/ SZ9   =  Cst x Qtde p/ EIS")
	GeraAud("D2 - ITENS NF                         D3 - MOVIMENTOS INTERNOS")
	GeraAud("ZA - AGRUPAMENTO SKU                  Z9 - AGRUPAMENTO SIMIL + EIS")
	GeraAud("")
	GeraAud("")
	GeraAud("Etapa 1, Etapa 2, Levantamento do SD2 e SD3 ")
	GeraAud("")
	GeraAud("Etapa 1, Etapa 2 - Inicio do Processamento "+time())
	GeraAud("")
	GeraAud("origem - "+;
	"Simil - "+;
	"Eis - "+SPACE(8)+;
	"Cod. Sku - "+;
	"Auxiliar SZH - "+;
	"Metodo - "+;
	"Qtde da Saida - "+;
	"Custo (SB1) - "+;
	"Qtde p/ SZA - "+;
	"Apanhe p/ SZA -  "+;
	"Qtde p/ SZ9 - "+;
	"Apanhe p/ SZ9 - "+;
	"Cst x Qtde p/ SZ9")
	
Endif

#IFDEF TOP
	If ( TcSrvType()!="AS/400" )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Totaliza registros de digitacao de inventario                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lQuery:=.T.
		cAliasSD2 := "SD2SQL"
		cAliasSB1 := "SD2SQL"
		aStruSD2  := SD2->(dbStruct())
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Query do Contador                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		//		cQuery += " SD2.D2_LOCAL IN ("+cAlmoxa+") AND"
		cQuery := ""
		cQuery := "SELECT COUNT(*) nCount "
		cQuery += " FROM "
		cQuery += RetSqlName("SD2")+" SD2 ,"
		cQuery += RetSqlName("SB1")+" SB1 ,"
		cQuery += RetSqlName("SF4")+" SF4  "
		cQuery += " WHERE "
		cQuery += " SD2.D2_FILIAL<>'  ' AND"
		cQuery += " SB1.B1_FILIAL='  ' AND"
		cQuery += " SF4.F4_FILIAL='  ' AND"
		cQuery += " SD2.D2_EMISSAO>='"+DTOS(dIniMes)+"' AND"
		cQuery += " SD2.D2_EMISSAO<='"+DTOS(dFimProc)+"' AND"
		//cQuery += " SD2.D2_LOCAL NOT IN ( "+cAlmoxa+" ) AND" // Nao levar em consideracao pois o mesmo tambem nao e levado em consideracao p/ calculo do giro.
		cQuery += " SD2.D2_TIPO = 'N' AND"                     // somente usar cAlmoxa para definir o saldo
		cQuery += " SD2.D2_COD = SB1.B1_COD AND"
		cQuery += " SD2.D2_TES = SF4.F4_CODIGO AND"
		cQuery += " SF4.F4_X_APANH = 'S' AND"
		//cQuery += " SF4.F4_DUPLIC  = 'S' AND"  // Conf. Mauricio somente validar apanhe
		cQuery += " SD2.D_E_L_E_T_<>'*' AND"
		cQuery += " SB1.D_E_L_E_T_<>'*' AND"
		cQuery += " SF4.D_E_L_E_T_<>'*' "
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2,.T.,.T.)
		nCount := (cAliasSD2)->nCount
		(cAliasSD2)->(DbcloseArea())
		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Query de Trabalho                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cQuery := ""
		cQuery := " SELECT SD2.D2_COD,SD2.D2_QUANT, "
		cQuery += " SB1.B1_X_CTSTD,SB1.B1_X_SIMIL,SB1.B1_X_EIS01,SB1.B1_X_EIS02,SB1.B1_X_EIS03,SB1.B1_X_EIS04,SB1.B1_X_EIS05,"
		cQuery += " SB1.B1_X_EIS06,SB1.B1_X_EIS07,SB1.B1_X_EIS08,SB1.B1_X_EIS09,SB1.B1_X_EIS10, "
		cQuery += " SB1.B1_X_PQR,SB1.B1_X_NEOIL,SB1.B1_X_XYZ,SB1.B1_X_123,SB1.B1_X_ABC,SB1.B1_X_LMN "
		cQuery += " FROM "
		cQuery += RetSqlName("SD2")+" SD2 ,"
		cQuery += RetSqlName("SB1")+" SB1 ,"
		cQuery += RetSqlName("SF4")+" SF4  "
		cQuery += " WHERE "
		cQuery += " SD2.D2_FILIAL<>'  ' AND"
		cQuery += " SB1.B1_FILIAL='  ' AND"
		cQuery += " SF4.F4_FILIAL='  ' AND"
		//cQuery += " SD2.D2_LOCAL NOT IN ( "+cAlmoxa+" ) AND"
		cQuery += " SD2.D2_EMISSAO>='"+DTOS(dIniMes)+"' AND"
		cQuery += " SD2.D2_EMISSAO<='"+DTOS(dFimProc)+"' AND"
		cQuery += " SD2.D2_TIPO = 'N' AND"
		cQuery += " SD2.D2_COD = SB1.B1_COD AND"
		cQuery += " SD2.D2_TES = SF4.F4_CODIGO AND"
		cQuery += " SF4.F4_X_APANH = 'S' AND"
		//cQuery += " SF4.F4_DUPLIC  = 'S' AND"  // Conf. Mauricio somente validar apanhe
		cQuery += " SD2.D_E_L_E_T_<>'*' AND"
		cQuery += " SB1.D_E_L_E_T_<>'*' AND"
		cQuery += " SF4.D_E_L_E_T_<>'*' "
		
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2,.F.,.T.)
		For nX := 1 To Len(aStruSD2)
			If aStruSD2[nX][2]<>"C" .And. alltrim(aStruSD2[nX][1])$cQuery
				TcSetField(cAliasSD2,aStruSD2[nX][1],aStruSD2[nX][2],aStruSD2[nX][3],aStruSD2[nX][4])
			EndIf
		Next nX
		
		If !Empty(_ChaveAud)
			GeraAud("")
			GeraAud("Caso necessario o  script utilizado para filtrar o SD2 foi gerado no arquivo")
			GeraAud("SD2.SQL gravado dentro do diretorio SIGAADV.")
			GeraAud("")
			MemoWrit("SD2.Sql",cQuery)   //   Apenas utilizado para validar a query.
		Endif
		
	Else
		
		DbSelectArea("SD2")
		cFilSD2 := 'DTOS(D2_EMISSAO)>="'+dtos(dIniMes)+'".And.'
		cFilSD2 += 'DTOS(D2_EMISSAO)<="'+dtos(dFimProc)+'"'
		MsFilter(cFilSD2)
		nCount := SD2->(RECCOUNT())
		dbSetOrder(1)
		dbSeek(xFilial()+dtos(dIniMes))
	EndIf
	
#ELSE
	
	lQuery   := .F.
	cAliasSD2:="SD2"
	cAliasSB1:="SB1"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Filtra o arquivo por data de Emissao                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SD2")
	dbSetOrder(1)
	cIndex  := CriaTrab(nil,.f.)
	cChave  := "D2_EMISSAO"
	cFilSD2 := 'DTOS(D2_EMISSAO)>="'+dtos(dIniMes)+'".And.'
	cFilSD2 += 'DTOS(D2_EMISSAO)<="'+dtos(dFimProc)+'"'
	
	IndRegua("SD2",cIndex,cChave,,cFilSD2,"Selecionando Registros...")
	nIndex := RetIndex("SD2")
	dbSelectArea("SD2")
	#IFNDEF TOP
		dbSetIndex( cIndex +OrdBagExt())
	#ENDIF
	nCount := SD2->(RECCOUNT())
	dbSelectArea("SD2")
	dbSetOrder(nIndex+1)
	dbGoTop()
	
#ENDIF


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )


DbSelectArea(cAliasSD2)

While !(cAliasSD2)->(EOF())
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Processando SD2 " , nCount , cTimeIni , .T. , NIL , 05 )
	
	If !lQuery
		
		If  (cAliasSD2)->D2_TIPO # 'N'
			(cAliasSD2)->(dbSkip())
			Loop
		Endif
		
		DbSelectArea("SB1")
		DbSetOrder(1)
		if !DbSeek(xFilial("SB1")+(cAliasSD2)->D2_COD)
			(cAliasSD2)->(dbSkip())
			Loop
		EndIf
		
		DbSelectArea("SF4")
		DbSetOrder(1)
		If !DbSeek(xFilial("SF4")+(cAliasSD2)->D2_TES)
			(cAliasSD2)->(dbSkip())
			Loop
		EndIf
		
		If  SF4->F4_X_APANH # "S"
			(cAliasSD2)->(dbSkip())
			Loop
		EndIf
		
	Endif
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Dados para processamento das Matrizes aSku,aEis,aSimil                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cCodiSku := (cAliasSD2)->D2_COD
	nQuantid := (cAliasSD2)->D2_QUANT
	nCustStd := (cAliasSB1)->B1_X_CTSTD
	cCdSimil := (cAliasSB1)->B1_X_SIMIL
	cCodiEis := (cAliasSB1)->(B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+;
	B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
	cClassi  := (cAliasSB1)->(B1_X_PQR+B1_X_NEOIL+B1_X_XYZ+B1_X_123+B1_X_ABC+B1_X_LMN)
	
	PrVetor(cCodiSku,nQuantid,nCustStd,cCdSimil,cCodiEis,@aSKU,@aEIS,@aSimil,cClassi,"SD2")
	
	(cAliasSD2)->(DbSkip())
	
Enddo

(cAliasSD2)->(DbcloseArea())


Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ProcSD3   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Processamento dos Arquivos da Planilha.                     º±±
±±º          ³SD3 - Arquivo de Movimentos Internos                        º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function ProcSD3(aSKU,aEIS,aSimil)

Local lQuery    := .T.
Local cAliasSD3 := ""
Local cAliasSB1 := ""
Local nCount    := 0
Local aStruSD3  := SD3->(dbStruct())
Local cQuery    := ""
Local cFilSD3   := ""
Local cIndex    := ""
Local cChave    := ""
Local nIndex    := 0
Local cClassi   := ""
Local cAlmoxa   := U_RetString( GETMV("MV_ALMFECH"))  // Relacao de Almoxarifados que podem entrar no processo.
// durante o processo de definicao do saldo da Malha.
Local cTimeIni  := Time()

#IFDEF TOP
	If ( TcSrvType()!="AS/400" )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Totaliza registros de digitacao de inventario                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lQuery:=.T.
		cAliasSD3 := "SD3SQL"
		cAliasSB1 := "SD3SQL"
		aStruSD3  := SD3->(dbStruct())
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Query do Contador                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cQuery := ""
		cQuery := "SELECT COUNT(*)  nCount "
		cQuery += " FROM "
		cQuery += RetSqlName("SD3")+" SD3 ,"
		cQuery += RetSqlName("SB1")+" SB1 ,"
		cQuery += RetSqlName("SF5")+" SF5  "
		cQuery += " WHERE "
		cQuery += " SD3.D3_FILIAL<>'  ' AND"
		cQuery += " SB1.B1_FILIAL='  ' AND"
		cQuery += " SF5.F5_FILIAL='  ' AND"
		cQuery += " SD3.D3_EMISSAO>='"+DTOS(dIniMes)+"' AND"
		cQuery += " SD3.D3_EMISSAO<='"+DTOS(dFimProc)+"' AND"
		cQuery += " SD3.D3_TM > '500' AND"
		//cQuery += " SD3.D3_LOCAL NOT IN ( "+cAlmoxa+" ) AND"
		cQuery += " SD3.D3_COD = SB1.B1_COD AND"
		cQuery += " SD3.D3_TM = SF5.F5_CODIGO AND"
		cQuery += " SF5.F5_X_APANH = 'S' AND"
		cQuery += " SD3.D_E_L_E_T_<>'*' AND"
		cQuery += " SB1.D_E_L_E_T_<>'*' AND"
		cQuery += " SF5.D_E_L_E_T_<>'*' "
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD3,.T.,.T.)
		nCount := (cAliasSD3)->nCount
		(cAliasSD3)->(DbcloseArea())
		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Query de Trabalho                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cQuery := ""
		cQuery := " SELECT SD3.D3_COD,SD3.D3_QUANT, "
		cQuery += " SB1.B1_X_CTSTD,SB1.B1_X_SIMIL,SB1.B1_X_EIS01,SB1.B1_X_EIS02,SB1.B1_X_EIS03,SB1.B1_X_EIS04,SB1.B1_X_EIS05,"
		cQuery += " SB1.B1_X_EIS06,SB1.B1_X_EIS07,SB1.B1_X_EIS08,SB1.B1_X_EIS09,SB1.B1_X_EIS10, "
		cQuery += " SB1.B1_X_PQR,SB1.B1_X_NEOIL,SB1.B1_X_XYZ,SB1.B1_X_123,SB1.B1_X_ABC,SB1.B1_X_LMN "
		cQuery += " FROM "
		cQuery += RetSqlName("SD3")+" SD3 ,"
		cQuery += RetSqlName("SB1")+" SB1 ,"
		cQuery += RetSqlName("SF5")+" SF5  "
		cQuery += " WHERE "
		cQuery += " SD3.D3_FILIAL<>'  ' AND"
		cQuery += " SB1.B1_FILIAL='  ' AND"
		cQuery += " SF5.F5_FILIAL='  ' AND"
		cQuery += " SD3.D3_EMISSAO>='"+DTOS(dIniMes)+"' AND"
		cQuery += " SD3.D3_EMISSAO<='"+DTOS(dFimProc)+"' AND"
		cQuery += " SD3.D3_TM > '500' AND"
		//cQuery += " SD3.D3_LOCAL NOT IN ( "+cAlmoxa+" ) AND"
		cQuery += " SD3.D3_COD = SB1.B1_COD AND"
		cQuery += " SD3.D3_TM = SF5.F5_CODIGO AND"
		cQuery += " SF5.F5_X_APANH = 'S' AND"
		
		//     Ainda devemos avaliar uma forma de diferenciar
		//     producao de transferencia dentro do SF5.
		//     pois os movimentos que nos interessam sao apenas
		//     os de Montagem (op) e Desmontagem (op).
		//     Falta avaliar os codigos do tipo da movimentacao
		//     RE1,RE2 (ou seja lancamentos do padrao)
		// Resp. Segundo o Sr. Mauricio isto seria controlado pelo Apanhe
		
		//     No SD3 e obritaroio o uso da filial pois
		//     nao podemos considerar as movimentacoes efetuadas
		//     nas filiais referente a transferencia.
		// Resp. Segundo o Sr. Mauricio isto seria controlado pelo Apanhe
		
		cQuery += " SD3.D_E_L_E_T_<>'*' AND"
		cQuery += " SB1.D_E_L_E_T_<>'*' AND"
		cQuery += " SF5.D_E_L_E_T_<>'*'"
		
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD3,.F.,.T.)
		For nX := 1 To Len(aStruSD3)
			If aStruSD3[nX][2]<>"C" .And. alltrim(aStruSD3[nX][1])$cQuery
				TcSetField(cAliasSD3,aStruSD3[nX][1],aStruSD3[nX][2],aStruSD3[nX][3],aStruSD3[nX][4])
			EndIf
		Next nX
		
		If !Empty(_ChaveAud)
			GeraAud("")
			GeraAud("Caso necessario o  script utilizado para filtrar o SD3 foi gerado no arquivo")
			GeraAud("SD3.SQL gravado dentro do diretorio SIGAADV.")
			GeraAud("")
			MemoWrit("SD3.Sql",cQuery)   //   Apenas utilizado para validar a query.
		Endif
		
	Else
		
		DbSelectArea("SD3")
		cFilSD3 := 'DTOS(D3_EMISSAO)>="'+dtos(dIniMes)+'".And.'
		cFilSD3 += 'DTOS(D3_EMISSAO)<="'+dtos(dFimProc)+'"'
		MsFilter(cFilSD3)
		dbSetOrder(1)
		dbSeek(xFilial()+dtos(dIniMes))
	EndIf
	
#ELSE
	
	lQuery   := .F.
	cAliasSD3:="SD3"
	cAliasSB1:="SB1"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Filtra o arquivo por data de Emissao                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SD3")
	dbSetOrder(1)
	cIndex  := CriaTrab(nil,.f.)
	cChave  := "D3_EMISSAO"
	cFilSD3 := 'DTOS(D3_EMISSAO)>="'+dtos(dIniMes)+'".And.'
	cFilSD3 += 'DTOS(D3_EMISSAO)<="'+dtos(dFimProc)+'"'
	
	IndRegua("SD3",cIndex,cChave,,cFilSD3,"Selecionando Registros...")
	nIndex := RetIndex("SD3")
	dbSelectArea("SD3")
	nCount := SD3->(RECCOUNT())
	#IFNDEF TOP
		dbSetIndex( cIndex +OrdBagExt())
	#ENDIF
	dbSelectArea("SD3")
	dbSetOrder(nIndex+1)
	dbGoTop()
	
#ENDIF



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )

DbSelectArea(cAliasSD3)

While !(cAliasSD3)->(EOF())
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Processando SD3 " , nCount , cTimeIni , .T. , NIL , 05 )
	
	If !lQuery
		
		DbSelectArea("SB1")
		DbSetOrder(1)
		if !DbSeek(xFilial("SB1")+(cAliasSD3)->D3_COD)
			(cAliasSD3)->(DbSkip())
			Loop
		EndIf
		
		DbSelectArea("SF5")
		DbSetOrder(1)
		If !DbSeek(xFilial("SF5")+(cAliasSD3)->D3_TM)
			(cAliasSD3)->(DbSkip())
			Loop
		EndIf
		
		If SF5->F5_X_APANH # "S" .OR. VAL(SF5->F5_CODIGO) <= 500
			(cAliasSD3)->(DbSkip())
			Loop
		EndIf
		
	Endif
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Dados para processamento das Matrizes aSku,aEis,aSimil                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cCodiSku := (cAliasSD3)->D3_COD
	nQuantid := (cAliasSD3)->D3_QUANT
	nCustStd := (cAliasSB1)->B1_X_CTSTD
	cCdSimil := (cAliasSB1)->B1_X_SIMIL
	cCodiEis := (cAliasSB1)->(B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+;
	B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
	cClassi  := (cAliasSD3)->(B1_X_PQR+B1_X_NEOIL+B1_X_XYZ+B1_X_123+B1_X_ABC+B1_X_LMN)
	
	
	PrVetor(cCodiSku,nQuantid,nCustStd,cCdSimil,cCodiEis,@aSKU,@aEIS,@aSimil,cClassi,"SD3")
	
	(cAliasSD3)->(DbSkip())
	
Enddo

(cAliasSD3)->(DbcloseArea())


If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Etapa 1, Etapa 2 - Finalizacao "+time())
	GeraAud("")
	
Endif


Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³PrVetor   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Esta rotina visa executar o processamento dos  3 arrayss    º±±
±±º          ³do Fechamento.                                              º±±
±±º          ³aSK     // Vetor Sku                                        º±±
±±º          ³[1]     // Codigo da Sku        [*] index                   º±±
±±º          ³[2]     // Quantidade vendida   [S]                         º±±
±±º          ³[3]     // Quantidade de Apanhes[S+1]                       º±±
±±º          ³[4]     // Custo Padrao                                    º±±
±±º          ³[5]     // Codigo Simil                                     º±±
±±º          ³[6]     // Codigo Eis                                       º±±
±±º          ³[7]     // Metodo: 1. Ponto de Pedido                       º±±
±±º          ³                   2. Estoque Maximo                        º±±
±±º          ³                   3. Estoque Minimo                        º±±
±±º          ³[8]     // Fator de Seguranca                               º±±
±±º          ³[9]     // Sistema de Tratamento                            º±±
±±º          ³                                                            º±±
±±º          ³aEIS    // Vetor Simil + Eis + Sku                          º±±
±±º          ³[1]     // Codigo Simil         [*] index                   º±±
±±º          ³[2]     // Codigo da Sku        [*]                         º±±
±±º          ³[3]     // Codigo do Eis        [*]                         º±±
±±º          ³                                                            º±±
±±º          ³aSimil  // Vetor Simil + Eis                                º±±
±±º          ³[1]     // Codigo do Simil      [*] index                   º±±
±±º          ³[2]     // Codigo do Eis        [*]                         º±±
±±º          ³[3]     // Quantidade Vendida   [S]                         º±±
±±º          ³[4]     // Quantidade de Apanhes[S]                         º±±
±±º          ³[5]     // Custo Padrao        [S]                         º±±
±±º          ³[6]     // Sku Envolvidas       [S com base na aEis]        º±±
±±º          ³[7]     // Metodo: 1. Ponto de Pedido                       º±±
±±º          ³                   2. Estoque Maximo                        º±±
±±º          ³                   3. Estoque Minimo                        º±±
±±º          ³[8]     // Fator de Seguranca                               º±±
±±º          ³[9]     // Sistema de Tratamento                            º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static  Function PrVetor(cCodiSku,nQuantid,nCustStd,cCdSimil,cCodiEis,aSKU,aEIS,aSimil,cClassi,cOrigem)
Local nPosSku   := 0
Local nPosEis   := 0
Local nPosSimil := 0
Local nSkuEnvol := 0
Local cMetodo   := ""
Local nFatEstS  := 0
Local cSistema  := ""


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Prerrogativas para continuar                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ A query ja garante que o produto esteja cadastrado no SB1 apenas       ³
//³ posiciono o SB1 correto com o resultado da Query.                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

DbSelectArea("SB1")
DbSetOrder(1)
DbSeek(xFilial("SB1")+cCodiSku)



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso o Eis nao esteja cadastrado na Tabela Manutencao de Eis           ³
//³ o mesmo sera limpo para ser novamente amarrado.                        ³
//³ Seria interessante gerar Log com o Atual antes de limpar.              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("Z10")
DbSetOrder(1)
If  !DbSeek(xFilial("Z10")+cCodiEis)
	DbSelectArea("SB1")
	Reclock("SB1",.F.)
	SB1->B1_X_EIS01:=Space(2)
	SB1->B1_X_EIS02:=Space(2)
	SB1->B1_X_EIS03:=Space(2)
	SB1->B1_X_EIS04:=Space(2)
	SB1->B1_X_EIS05:=Space(2)
	SB1->B1_X_EIS06:=Space(2)
	SB1->B1_X_EIS07:=Space(2)
	SB1->B1_X_EIS08:=Space(2)
	SB1->B1_X_EIS09:=Space(2)
	SB1->B1_X_EIS10:=Space(2)
	MsUnlock()
	
	GeraLog("O Produto "+cCodiSku+" nao possui amarracao de Eis.")
	
	Return
	
Endif


If EmptY(SB1->B1_X_XYZ) .or. EmptY(SB1->B1_X_123)
	
	GeraLog("O Produto "+cCodiSku+" nao foi classificado XYZ,123 durante  cadastro inicial")
	
	Return
	
Endif



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Simil nao presente no grupo de Similaridade.                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SZ2")
DbSetorder(1)
If !dbSeek(xFilial("SZ2")+cCdSimil)
	
	GeraLog("Codigo Sku "+cCodiSku+" utiliza Grupo de Similaridade "+cCdSimil+" que nao se encontra cadastrado.")
	
	Return
	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona no SZH , SZQ , SZG                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Neste momento e analizado se o metodo informado existe para continuar  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*
nFatEstS := 0
DbSelectArea("SZH")                   // Arvore de Encaminhamento
DbSetOrder(2)                         // Filial + ZH_AUXILIA
If DbSeek(xFilial("SZH")+cClassi)
cMetodo := SZH->ZH_CODMET        //Classificacao: 1. Ponto de Pedido
//		                                           2. Estoque Minimo
// 	                                               3. Estoque Maximo
//                            	                   4. Por encomenta (NAO SERA UTILIZADO P/ MULTITEK)
DbSelectArea("SZG")              // Metodo
DbSetOrder(1)                    // Filial + ZG_CODMET
If DbSeek(xFilial("SZG")+SZH->ZH_CODMET)

cSistema := SZG->ZG_SISTEMA

DbSelectArea("SZQ")           // Distribuicao Normal
DbSetOrder(1)                 // Filial + ZQ_CODIGO
If DbSeek(xFilial("SZQ")+SZG->ZG_CNORM)
nFatEstS := SZQ->ZQ_FATSEG
Endif

Endif


Else

GeraLog("Codigo Sku "+cCodiSku+" possui classificacao "+cClassi+" nao presente na Arvore de Dimencionamento.")

Return

Endif
*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Adicionando itens a Matriz 1 -  Nome aSku   - Busca   aScan[Sku]          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPosSku  := aScan( aSKU , {|x| x[1] == cCodiSku })

if nPosSku = 0
	AADD(aSKU ,;
	{ cCodiSku,;          // Codigo Sku
	nQuantid  ,;          // Quantidade Vendida
	1 ,;                  // Quantidade de Apanhes
	nCustStd ,;           // Custo Padrao
	cCdSimil ,;           // Codigo Simil
	cCodiEis ,;           // Codigo Eis
	cMetodo ,;            // Classificacao: 1. Ponto de Pedido/2. Estoque Maximo/3. Estoque Minimo
	nFatEstS,;            // Fator de Seguranca
	cSistema })           // Sistema de Tratamento
Else
	aSku[nPosSku][2] += nQuantid
	aSku[nPosSku][3] += 1
Endif



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Adicionando itens a Matriz 3 -  Nome aSimil -  Busca  aScan[Simil+Eis]    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPosSimil := aScan( aSimil , {|x| x[1]+x[2] == cCdSimil + cCodiEis })

if nPosSimil = 0
	AADD(aSimil ,;
	{ cCdSimil ,;        // Codigo Simil
	cCodiEis ,;          // Codigo Eis
	nQuantid ,;          // Quantidade Vendida
	1 ,;                 // Quantidade de Apanhes
	nCustStd * nQuantid ,;          // Custo Padrao
	nSkuEnvol,;          // NAO ESTA SENDO UTILIZADA - Sku Envolvidas
	cMetodo ,;           // Classificacao: 1. Ponto de Pedido/2. Estoque Maximo/3. Estoque Minimo
	nFatEstS,;           // Fator de Seguranca
	cSistema })          // Sistema de Tratamento
Else
	aSimil[nPosSimil][3] += nQuantid
	aSimil[nPosSimil][4] += 1
	aSimil[nPosSimil][5] += nCustStd * nQuantid // VICENTE AQUI MUDOU
	//	aSimil[nPosSimil][6] += nSkuEnvol
Endif

nPosSimil := aScan( aSimil , {|x| x[1]+x[2] == cCdSimil + cCodiEis })
nPosSku   := aScan( aSKU , {|x| x[1] == cCodiSku })

if	_ChaveAud = (cCdSimil +cCodiEis)
	
	GeraAud(cOrigem+" "+;
	cCdSimil+" "+;
	cCodiEis+" "+;
	cCodiSku+" "+;
	cClassi+" "+space(5)+;
	cMetodo+" "+space(5)+;
	STR(nQuantid            ,10)+" "+;    // Quantidade da Sku
	STR(nCustStd            ,10,2)+" "+SPACE(6)+;  // Custo(SB1)
	STR(aSku[nPosSku][2]    ,10)+" "+;    // Qtde p/ SZA
	STR(aSku[nPosSku][3]    ,10)+" "+;    // Apanhe p/ SZA
	STR(aSimil[nPosSimil][3],15)+" "+;    // Qtde p/ SZ9
	STR(aSimil[nPosSimil][4],15)+" "+;    // Apanhe p/ SZ9
	STR(aSimil[nPosSimil][5],15,2))       // Cst x Qtde p/ SZ9
	
Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ProcSZA   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Com base na MATRIZ aSku iremos efetuar a gravacao do SZA    º±±
±±º          ³                                                            º±±
±±º          ³aSK     // Vetor Sku                                        º±±
±±º          ³[1]     // Codigo da Sku        [*] index                   º±±
±±º          ³[2]     // Quantidade vendida   [S]                         º±±
±±º          ³[3]     // Quantidade de Apanhes[S+1]                       º±±
±±º          ³[4]     // Custo Padrao                                    º±±
±±º          ³[5]     // Codigo Simil                                     º±±
±±º          ³[6]     // Codigo Eis                                       º±±
±±º          ³[7]     // Metodo: 1. Ponto de Pedido                       º±±
±±º          ³                   2. Estoque Maximo                        º±±
±±º          ³                   3. Estoque Minimo                        º±±
±±º          ³[8]     // Fator de Seguranca                               º±±
±±º          ³[9]     // Sistema de Tratamento                            º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function ProcSZA(aSKU)
Local cAno         := str(Year(dFimProc),4)
Local cMes         := strzero(month(dFimProc),2)
Local nPosSku      := 0
Local cChave       := ""
Local lAppend      := .T.
Local cTimeIni  := Time()
Local nCount    := len(aSku)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 3 - Grava o Resultado do Processamento no SZA")
	GeraAud("")
	GeraAud("Etapa 3 - Inicio do Processamento "+time())
	GeraAud("")
	GeraAud("ANO - "+;
	"MES - "+;
	"SKU - "+space(6)+;
	"SIMIL -  "+;
	"EIS - "+space(12)+;
	"COD.REF - "+;
	"SUFIXO - "+;
	"MARCA - "+space(6)+;
	"CODMET - "+space(1)+;
	"LEAD - "+;
	"QTD VENDIDA - "+;
	"QTD APANHE(MES) - "+;
	"CST PADRAO DA SKU")
	
	GeraAud("")
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )


For nPosSku := 1 to Len(aSKU)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Gravando  SZA " , nCount , cTimeIni , .T. , NIL , 05 )
	
	cChave := aSku[nPosSku][1]
	
	DbSelectArea("SB1")
	DbSetOrder(1)                        // Filial+Sku
	if DbSeek(xFilial("SB1")+cChave)
		
		
		DbSelectArea("SZA")
		DbSetOrder(2)                   // Filial+Ano+Mes+Sku
		If DbSeek( xFilial("SZA") + cAno + cMes + cChave)
			lAppend := .F.              // Reprocessamento
		Else
			lAppend := .T.              // Fechamento
		Endif
		
		RecLock("SZA",lAppend)
		
		
		SZA->ZA_FILIAL   := xFilial("SZA")
		SZA->ZA_ANO      := STR(YEAR(dFimProc),4)
		SZA->ZA_MES      := STRZERO(MONTH(dFimProc),2)
		SZA->ZA_SKU      := aSku[nPosSku][1]                // Codigo da Sku
		SZA->ZA_SIMIL    := aSku[nPosSku][5]                 // Codigo Simil
		SZA->ZA_EIS01    := Substr(aSku[nPosSku][6],01,2)   // Codigo Eis
		SZA->ZA_EIS02    := Substr(aSku[nPosSku][6],03,2)
		SZA->ZA_EIS03    := Substr(aSku[nPosSku][6],05,2)
		SZA->ZA_EIS04    := Substr(aSku[nPosSku][6],07,2)
		SZA->ZA_EIS05    := Substr(aSku[nPosSku][6],09,2)
		SZA->ZA_EIS06    := Substr(aSku[nPosSku][6],11,2)
		SZA->ZA_EIS07    := Substr(aSku[nPosSku][6],13,2)
		SZA->ZA_EIS08    := Substr(aSku[nPosSku][6],15,2)
		SZA->ZA_EIS09    := Substr(aSku[nPosSku][6],17,2)
		SZA->ZA_EIS10    := Substr(aSku[nPosSku][6],19,2)
		SZA->ZA_LEAD     := SB1->B1_X_LT
		SZA->ZA_CODREF   := SB1->B1_X_REFER
		SZA->ZA_SUFIXO   := SB1->B1_X_SUFIX
		SZA->ZA_MARCA    := SB1->B1_X_MARCA
		
		//NO FINAL DO FECHAMENTO REGRAVAR ESTAS INFORMACOES.
		//SZA->ZA_GIROQ    := SB1->B1_X_GIROQ
		//SZA->ZA_ABC      := SB1->B1_X_ABC
		//SZA->ZA_PQR      := SB1->B1_X_PQR
		//SZA->ZA_NEOIL    := SB1->B1_X_NEOIL
		//SZA->ZA_123      := SB1->B1_X_123                //  nao e necesario na regracacao
		//SZA->ZA_XYZ      := SB1->B1_X_XYZ                //
		//SZA->ZA_LMN      := SB1->B1_X_LMN  //Giro class  //
		//SZA->ZA_TMEA     := SB1->B1_X_TMEA
		//SZA->ZA_DESVP    := SB1->B1_X_DESVP
		//SZA->ZA_CODMET   :=                                // SZH - Metodo
		
		SZA->ZA_QTDSAI   := aSku[nPosSku][2]                // Qtd. Vendida
		SZA->ZA_QTDAPA   := aSku[nPosSku][3]                // Qtd. de Apanhes  MES
		SZA->ZA_VLRCM    := aSku[nPosSku][4]                // Custo Padrao da SKU
		SZA->ZA_CODMET   := aSku[nPosSku][7]                // Metodo
		
		// Segundo o Sr. mauricio nao ha necessidade de armazenar esta informacao
		// ha mesma pode ser recolhida no momento da Geracao da Planilha se necessario.
		// SZA->ZA_ORIGEM   := SB1->B1_X_NC_IM
		// SZA->ZA_SIST_TR  := aSku[nPosSku][9]                // Sistema de Tratamento
		
		MsUnlock()
		
		
		
		if	_ChaveAud = SZA->(ZA_SIMIL+ZA_EIS01+ZA_EIS02+ZA_EIS03+ZA_EIS04+ZA_EIS05+;
			ZA_EIS06+ZA_EIS07+ZA_EIS08+ZA_EIS09+ZA_EIS10)
			
			
			GeraAud(ZA_ANO+" "+;
			SZA->ZA_MES+" "+;
			SZA->ZA_SKU+" "+;
			SZA->ZA_SIMIL+" "+;
			SZA->ZA_EIS01+;
			SZA->ZA_EIS02+;
			SZA->ZA_EIS03+;
			SZA->ZA_EIS04+;
			SZA->ZA_EIS05+;
			SZA->ZA_EIS06+;
			SZA->ZA_EIS07+;
			SZA->ZA_EIS08+;
			SZA->ZA_EIS09+;
			SZA->ZA_EIS10+" "+;
			SZA->ZA_CODREF+" "+;
			SZA->ZA_SUFIXO+" "+;
			SZA->ZA_MARCA+" "+;
			SZA->ZA_CODMET+" "+;
			STR(SZA->ZA_LEAD,10)+" "+;
			str(SZA->ZA_QTDSAI,10)+" "+;     // Qtd. Vendida
			str(SZA->ZA_QTDAPA,20)+" "+;     // Qtd. de Apanhes  MES
			str(SZA->ZA_VLRCM,17,2))         // Custo Padrao da SKU
			
		Endif
		
	Endif
	
Next


If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Etapa 3 - Finalizacao "+time())
	GeraAud("")
	
Endif


Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ProcSZ9   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Com base na MATRIZ aSimil iremos efetuar a gravacao do SZ9  º±±
±±º          ³                                                            º±±
±±º          ³aSimil  // Vetor Simil + Eis                                º±±
±±º          ³[1]     // Codigo do Simil       [*] index                  º±±
±±º          ³[2]     // Codigo do Eis         [*]                        º±±
±±º          ³[3]     // Quantidade Vendida                               º±±
±±º          ³[4]     // Quantidade de Apanhes                            º±±
±±º          ³[5]     // Custo Padrao                                    º±±
±±º          ³[6]     // Sku Envolvidas                                   º±±
±±º          ³[7]     // Metodo: 1. Ponto de Pedido                       º±±
±±º          ³                   2. Estoque Maximo                        º±±
±±º          ³                   3. Estoque Minimo                        º±±
±±º          ³[8]     // Fator de Seguranca                               º±±
±±º          ³[9]     // Sistema de Tratamento                            º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function ProcSZ9(aSimil)
Local cAno      := str(Year(dFimProc),4)
Local cMes      := strzero(month(dFimProc),2)
Local nPosSimil := 0
Local cClassi := ""
Local cMetodo := ""
Local nFatEstS:= ""
Local cSistema:= ""
Local cChave  := ""
Local lAppend      := .T.
Local cTimeIni  := Time()
Local nCount  := len(aSimil)


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 4 - Grava o Resultado do Processamento no SZ9")
	GeraAud("")
	GeraAud("Etapa 4 -  Inicio do Processamento "+time())
	GeraAud("")
	
	GeraAud("ANO - "+;
	"MES - "+;
	"SIMIL - "+;
	"EIS - "+space(21)+;
	"LEAD - "+;
	"QTD VENDIDA - "+;
	"QTD APANHE(MES/EIS) - "+;
	"Cst x Qtde p. SZ9 - "+;
	"Cst x Qtde p. SZ9 / Qtde p. SZ9" )
	GeraAud("")
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )


For nPosSimil := 1 to Len(aSimil)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Gravando SZ9 " , nCount , cTimeIni , .T. , NIL , 05 )
	
	cChave  := aSimil[nPosSimil][1]+aSimil[nPosSimil][2] // Simil + Eis
	
	DbSelectArea("SB1")
	DbOrderNickname("B1SIMIL")         // Filial+Simil+Eis
	If  DbSeek(xFilial("SB1")+cChave )
		
		DbSelectArea("SZ9")
		DbSetOrder(2)                   // Filial+Ano+Mes+Simil+Eis
		If DbSeek( xFilial("SZ9") + cAno + cMes + cChave)
			lAppend := .F.              // Reprocessamento
		Else
			lAppend := .T.              // Fechamento
		Endif
		
		RecLock("SZ9",lAppend)
		
		SZ9->Z9_FILIAL   := xFilial("SZ9")
		SZ9->Z9_ANO      := STR(YEAR(dFimProc),4)
		SZ9->Z9_MES      := STRZERO(MONTH(dFimProc),2)
		SZ9->Z9_SIMIL    := aSimil[nPosSimil][1]                   // Codigo Simil
		SZ9->Z9_EIS01    := Substr(aSimil[nPosSimil][2],01,2)     // Codigo Eis
		SZ9->Z9_EIS02    := Substr(aSimil[nPosSimil][2],03,2)
		SZ9->Z9_EIS03    := Substr(aSimil[nPosSimil][2],05,2)
		SZ9->Z9_EIS04    := Substr(aSimil[nPosSimil][2],07,2)
		SZ9->Z9_EIS05    := Substr(aSimil[nPosSimil][2],09,2)
		SZ9->Z9_EIS06    := Substr(aSimil[nPosSimil][2],11,2)
		SZ9->Z9_EIS07    := Substr(aSimil[nPosSimil][2],13,2)
		SZ9->Z9_EIS08    := Substr(aSimil[nPosSimil][2],15,2)
		SZ9->Z9_EIS09    := Substr(aSimil[nPosSimil][2],17,2)
		SZ9->Z9_EIS10    := Substr(aSimil[nPosSimil][2],19,2)
		SZ9->Z9_LEAD     := SB1->B1_X_LT
		
		
		//NO FINAL DO FECHAMENTO REGRAVAR ESTAS INFORMACOES.
		//SZ9->Z9_ABC      := SB1->B1_X_ABC
		//SZ9->Z9_PQR      := SB1->B1_X_PQR
		//SZ9->Z9_NEOIL    := SB1->B1_X_NEOIL
		//SZ9->Z9_123      := SB1->B1_X_123
		//SZ9->Z9_XYZ      := SB1->B1_X_XYZ
		//SZ9->Z9_LMN      := SB1->B1_X_LMN                  //Giro class
		//SZ9->Z9_GIROQ    := SB1->B1_X_GIROQ
		//SZ9->Z9_TMEA     := SB1->B1_X_TMEA
		//SZ9->Z9_DESVP    := SB1->B1_X_DESVP
		//SZ9->Z9_CODMET   :=                                // SZH - Metodo
		
		// Observacao / Observacao / Observacao / Observacao / Observacao
		// A informacao abaixo e apenas para mostrar como chegamos ao
		// conteudo do campo SZ9->Z9_VLRCM (Custo Medio)
		// aSimil[nPosSimil][3] += Qtde de Saidas (SD2 + SD3)
		// aSimil[nPosSimil][5] += aSimil[nPosSimil][3] * B1_X_CTSTD
		//    Calculo do Custo Medio por Eis na Gravacao do Z9_VLRCM
		//Saidas   Custo
		//sku1  20  *  10      =  200
		//sku2  30     20      =  600
		//sku3  40     30      = 1200
		//	-----            ----
		//	90               2000
		//Custo Eis = 2000 / 90 = ~ 20.2
		
		SZ9->Z9_VLRCM    := aSimil[nPosSimil][5] / aSimil[nPosSimil][3]
		SZ9->Z9_QTDSAI   := aSimil[nPosSimil][3]                  // Qtd Vendida
		SZ9->Z9_QTDAPA   := aSimil[nPosSimil][4]                  // Qtd de Apanhes
		
		
		// Segundo o Sr. mauricio nao ha necessidade de armazenar esta informacao
		// ha mesma pode ser recolhida no momento da Geracao da Planilha se necessario.
		//SZ9->Z9_ORIGEM   := SB1->B1_X_NC_IM
		//SZ9->Z9_SIST_TR  := aSimil[nPosSimil][9]                  // SZG - Sistema de Tratamento
		
		MsUnlock()
		
		
		if	_ChaveAud = cChave
			GeraAud(SZ9->Z9_ANO+" "+space(2)+;
			SZ9->Z9_MES+" "+;
			SZ9->Z9_SIMIL+" "+space(3)+;
			SZ9->Z9_EIS01+;
			SZ9->Z9_EIS02+;
			SZ9->Z9_EIS03+;
			SZ9->Z9_EIS04+;
			SZ9->Z9_EIS05+;
			SZ9->Z9_EIS06+;
			SZ9->Z9_EIS07+;
			SZ9->Z9_EIS08+;
			SZ9->Z9_EIS09+;
			SZ9->Z9_EIS10+" "+;
			STR(SZ9->Z9_LEAD,10)+" "+;         // Lead Time
			STR(SZ9->Z9_QTDSAI,10)+" "+;       // Qtd. Vendida
			STR(SZ9->Z9_QTDAPA,16)+" "+;       // Qtd de Apanhes
			STR(aSimil[nPosSimil][5],22,2)+" "+; // Cst x Qtde p. SZ9
			STR(SZ9->Z9_VLRCM,20,2))           // Cst x Qtde p. SZ9 / Qtde p. SZ9
			
		Endif
		
	Endif
	
Next

If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Etapa 4 - Finalizacao "+time())
	GeraAud("")
	
Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ProcSB2   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Saldos em Estoque                                           º±±
±±º          ³                                                            º±±
±±º          ³Daqui por diante tudo ocorre por Simil + Eis                º±±
±±º          ³                                                            º±±
±±º          ³aSKU     // Vetor Sku                                       º±±
±±º          ³[01]     // Codigo da Sku       [*] index                   º±±
±±º          ³[02]     // Malha - Saldo Dispon + PC (Item Nao Compra)     º±±
±±º          ³[03]     // Malha - Saldo Dispon + PC (Item Compra)         º±±
±±º          ³[04]     // Malha - Saldo Empenhado                         º±±
±±º          ³[05]     // Malha - Saldo Disponivel                        º±±
±±º          ³[06]     // Matriz (Disp + PC)                              º±±
±±º          ³[07]     // Filial (Disp + PC)                              º±±
±±º          ³[08]     // Malha  (Em Poder de 3)                          º±±
±±º          ³[09]     // Malha  (3 EM Nosso Poder)                       º±±
±±º          ³[10]     // Malha  (Quantidade reservad                     º±±
±±º          ³[11]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[12]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[13]     // Malha - Saldo em Transito                       º±±
±±º          ³[14]     // Malha - Disponivel  - Item de Compra            º±±
±±º          ³[15]     // Malha - a Classificar                           º±±
±±º          ³[16]     // Consumo no Periodo por Sku                      º±±
±±º          ³[17]     // Saldo Fisico do Fechamento base SB9             º±±
±±º          ³aSimil   // Vetor Simil + Eis                               º±±
±±º          ³[01]     // Simil               [*] index                   º±±
±±º          ³[02]     // Eis                 [*] index                   º±±
±±º          ³[03]     // Qtde Vendida                                    º±±
±±º          ³[04]     // Tamanho do Lote                                 º±±
±±º          ³[05]     // Custo Total                                     º±±
±±º          ³[06]     // Qtde Media por Saida                            º±±
±±º          ³[07]     // Ocorrencias                                     º±±
±±º          ³[08]     // Perc.Class                                      º±±
±±º          ³[09]     // ABC                                             º±±
±±º          ³[10]     // Qtde de Apanhes                                 º±±
±±º          ³[11]     // PQR                                             º±±
±±º          ³[12]     // Neoil                                           º±±
±±º          ³[13]     // Tmea                                            º±±
±±º          ³[14]     // SomaSaidasPer2                                  º±±
±±º          ³[15]     // Desvio Padrao                                   º±±
±±º          ³[16]     // Class 123                                       º±±
±±º          ³[17]     // Class XYZ                                       º±±
±±º          ³[18]     // Nacimp                                          º±±
±±º          ³[19]     // LT                                              º±±
±±º          ³[20]     // LoteAut                                         º±±
±±º          ³[21]     // Ponto de Pedido                                 º±±
±±º          ³[22]     // EstSeg                                          º±±
±±º          ³[23]     // Metodo utilizado                                º±±
±±º          ³[24]     // Acum. Sai                                       º±±
±±º          ³[25]     // Saldo                                           º±±
±±º          ³[26]     // Acum.Dif.Dias                                   º±±
±±º          ³[27]     // Acum.Saldo.Dias                                 º±±
±±º          ³[28]     // Acum.Saldo.Quad                                 º±±
±±º          ³[29]     // Giro                                            º±±
±±º          ³[30]     // ClassGiro                                       º±±
±±º          ³[31]     // Quantidade Lote Praticado                       º±±
±±º          ³[32]     // Malha - Disp + PC (Item de Compra)              º±±
±±º          ³[33]     // MALHA       (CONSIDERA CONSIGNACAO)             º±±
±±º          ³[34]     // Malha - Empenhado                               º±±
±±º          ³[35]     // Malha - Disponivel (Item de Compra)             º±±
±±º          ³[36]     // FISICO  (ITEM NAO COMPRA MALHA)                 º±±
±±º          ³[37]     // FISICO  (ITEM DE COMPRA MALHA)                  º±±
±±º          ³[38]     // MALHA DISP (ITEM DE COMPRA) + CONSIGNADO        º±±
±±º          ³[39]     // MALHA DISP   (CONSIDERA CONSIGNACAO)            º±±
±±º          ³[40]     // Malha  (Quantidade reservad                     º±±
±±º          ³[41]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[42]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[43]     // Malha   Saldo em Transito                       º±±
±±º          ³[44]     // Malha   Disponivel (Item Nao Compra)            º±±
±±º          ³[45]     // Matriz (Disponivel - somente itens de compra)   º±±
±±º          ³[46]     // Malha   a Faturar  (Item de Compra)             º±±
±±º          ³[47]     // Matriz  Disponivel (Item Nao Compra)            º±±
±±º          ³[48]     // Matriz  Empenhado  (Item Nao Compra)            º±±
±±º          ³[49]     // Malha   a Faturar  (Item Nao Compra)            º±±
±±º          ³[50]     // Reservado ao Giro - AcmEntr                     º±±
±±º          ³[51]     // Reservado ao Giro - AcmSaida                    º±±
±±º          ³[52]     // Reservado ao Giro - Saldo                       º±±
±±º          ³[53]     // Reservado ao Giro - AcmSld                      º±±
±±º          ³[54]     // Reservado ao Giro - Acm_dDias                   º±±
±±º          ³[55]     // Reservado ao Giro - Dias AcmSld                 º±±
±±º          ³[56]     // Reservado ao Giro - SaldoMedio                  º±±
±±º          ³[57]     // Reservado ao Giro - Giro                        º±±
±±º          ³[58]     // Saldo Fisico do Fechamento base SB9             º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function ProcSB2(aSimil,aSKU,nAcumCust,lFechament)

Local nPosSimil  :=  0
Local aSaldoFech :=  {}
Local aSaldoEst  :=  {}
Local cCodSku    :=  ""
Local cCdSimil   :=  ""  // Simil
Local cCodiEis   :=  ""  // Eis
Local nQuantid   :=  0   // Qtde Vendida
Local nCstdMed   :=  0   // Custo Padrao Medio
Local nCstdTot   :=  0   // Custo Total
Local nQtdMedia  :=  0  // Qtde Media por Saida
Local nOcorren   :=  0   // Ocorrencias
Local nPerClas   :=  0   // Perc.Class
Local cABC       :=  ""  // ABC
Local cPQR       :=  ""  // PQR
Local cNEOIL     :=  ""  // Neoil
Local nTMEA      :=  0   // Tmea
Local nSaidPe2   :=  0   // SomaSaidasPer2
Local nDesPadr   :=  0   // Desvio Padrao
Local c123       :=  ""  // Class 123
Local cXYZ       :=  ""  // Class XYZ
Local cNacimp    :=  ""  // Nacimp
Local nLT        :=  0   // LT
Local nLoteAut   :=  0   // LoteAut
Local nPonto     :=  0   // Ponto de Pedido
Local nEstSegu   :=  0   // EstSeg
Local cMetodo    :=  ""  // Metodo
Local nAcumSai   :=  0   // Acum. Sai
Local nSaldo     :=  0   // Saldo
Local nAcumDif   :=  0   // Acum.Dif.Dias
Local nAcumDias  :=  0   // Acum.Saldo.Dias
Local nAcumQuad  :=  0   // Acum.Saldo.Quad
Local nGiro      :=  0   // Giro
Local cClasGiro  :=  ""  // ClassGiro
Local nPedCom    :=  0    // Qtde Lote Praticado
Local nApanhe    :=  0
Local nSldEmpen  := 0


Local nSldMatriz := 0  //  Matriz (Disp + PC)
Local nSldFilial := 0  //  Filial (Disp + PC)

Local nSldDispo  := 0  //  Malha  (Saldo Disponivel)
Local nSldReserv := 0  //  Malha  (Quantidade reservada)
Local nSldSalPed := 0  //  Malha  (Prevista entrar no estoque via Compras ou Op)
Local nSldQpedVe := 0  //  Malha  (Quant.de Pedidos de Venda nao Lib.p/Faturar
Local nSldTransi := 0  //  Malha  (Saldo em Transito)
Local cTimeIni   := Time()

Local cItemComp  := ""
Local nPosSku    := 0
Local cAlmoxa    := GetMV("MV_ALMFECH")  // Relacao de Almoxarifados que podem entrar no processo.
// durante o processo de definicao do saldo da Malha.
Local nCount     := SB1->(RECCOUNT())

Local nSldClass  := 0
// Itens de Compra ou Nao Compra
Local nICSldDispo:= 0
Local nICSldMalh := 0
Local nICMatDis  := 0
Local nICEmpen   := 0
Local nICpedVe   := 0
Local nICDispM  := 0  //  Malha  (Fisico)
Local nICFisico := 0

Local nNCSldDispo:= 0
Local nNCSldMalh := 0
Local nNCMatDis  := 0
Local nNCEmpen   := 0
Local nNCpedVe   := 0
Local nNCDispM  := 0  //  Malha  (Fisico)
Local nNCFisico  := 0


aSimil  := {}          // Apenas por seguranca. Ja Liberada Anteriormente
aSKU    := {}


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 5 - Busca o Saldo da Malha por Simil + Eis")
	GeraAud("")
	GeraAud("Etapa 5 - Inicio do Processamento "+time())
	GeraAud("")
	
	GeraAud("Para Este Calculo nao serao desconsiderado  os Almoxarifados constantes no parametro MV_ALMFECH")
	GeraAud("Que no caso sao : "+cAlmoxa+"  e somente os itens que sao de compra")
	GeraAud("")
	GeraAud("Simil - "+;
	"Eis - "+space(15)+;
	"Produto - "+;
	"Saldo por Sku (Disponivel+pc)-     "+;
	"Saldo por Simil+Eis (Disponivel+pc)")
	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )


DbSelectArea("SB1")
DbSetorder(1)
DbGotop()


// APENAS PARA TESTE // I M P O R T A N T E UTILIZANDO ESTE METODO E POSSIVEL FILTRAR SOMENTE O EIS PRETENDIDO
// DbSelectArea("SB1")
// DbOrderNickname("B1SIMIL") // Filial+Simil+Eis
// DbSeek (xFilial("SB1") + "00053701010110010201040100" )
///While !SB1->(EOF()).and. SB1->(B1_X_SIMIL+B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)=;
//   	"00053701010110010201040100"
//
//

While !SB1->(EOF()) ///.and. xFilial("SB1") = SB1->B1_FILIAL  SB1 e compartilhado.
	
	
	/*
	if _ChaveAud = SB1->(B1_X_SIMIL+B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
	GeraAud("passou no ponto etapa 0")
	Endif
	*/
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Processando SB1 " , nCount , cTimeIni , .T. , NIL , 05 )
	
	
	//if _ChaveAud = SB1->(B1_X_SIMIL+B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
	//	GeraAud("passou no ponto etapa 1")
	//Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso seja encontrado algum protudo novo que nao tenha recebido a       ³
	//³ devida classificacao o mesmo sera alterado. Este procedimento visa     ³
	//³ alimentar os produtos que ainda nao possuem classificacao quanto a     ³
	//³ giro. Desta forma todos os produtos passam a ter o giro gravado.       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SB1")
	
	IF EMPTY(SB1->B1_X_LMN)
		Reclock("SB1",.F.)
		SB1->B1_X_GIROQ:= 0                         //[29] Qtde de Giro no Ano
		SB1->B1_X_LMN  := "L"                       //[30] ClassGiro
		SB1->(MsUnlock())
	ENDIF
	
	//if _ChaveAud = SB1->(B1_X_SIMIL+B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
	//	GeraAud("passou no ponto etapa 2")
	//Endif
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Dados para processamento das Matrizes aSku,aEis,aSimil                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cCodSku  :=  SB1->B1_COD
	cCdSimil :=  SB1->B1_X_SIMIL
	cCodiEis :=  SB1->(B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+;
	B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
	cABC     :=  SB1->B1_X_ABC
	cPQR     :=  SB1->B1_X_PQR
	cNEOIL   :=  SB1->B1_X_Neoil
	c123     :=  SB1->B1_X_123
	cXYZ     :=  SB1->B1_X_XYZ
	cNacimp  :=  SB1->B1_X_NC_IM
	nLT      :=  SB1->B1_X_LT
	cItemComp:=  SB1->B1_X_ITCPR
	
	
	// Observacao / Observacao / Observacao / Observacao / Observacao
	// Apos conversa com Mauricio definimos que iriamos apagar o cod.
	// Eis dos produtos que apresentem este tipo de problema mostrando
	// mensagem de alerta para o usuario no termino do processamento.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Prerrogativas para continuar                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("Z10")
	DbSetOrder(1)
	If  !DbSeek(xFilial("Z10")+cCodiEis)
		DbSelectArea("SB1")
		Reclock("SB1",.F.)
		SB1->B1_X_EIS01:=Space(2)
		SB1->B1_X_EIS02:=Space(2)
		SB1->B1_X_EIS03:=Space(2)
		SB1->B1_X_EIS04:=Space(2)
		SB1->B1_X_EIS05:=Space(2)
		SB1->B1_X_EIS06:=Space(2)
		SB1->B1_X_EIS07:=Space(2)
		SB1->B1_X_EIS08:=Space(2)
		SB1->B1_X_EIS09:=Space(2)
		SB1->B1_X_EIS10:=Space(2)
		MsUnlock()
		DbSelectArea("SB1")
		SB1->(DbSkip())
		Loop
	Endif
	
	//
	// Analisa se o produto foi Classificado XYZ,123
	//
	If EmptY(SB1->B1_X_XYZ) .or. EmptY(SB1->B1_X_123)
		
		DbSelectArea("SB1")
		SB1->(DbSkip())
		Loop
		
	Endif
	
	// As Variavies abaixo sao alimentadas durante a Geracao da Planilha
	// Logo de posse dessas informacoes nao sera necessario a Leitura dos Historicos.
	// nesta Etapa somente sera alimentadas na Etapa 7
	If lFechament
		nApanhe  :=  0                   //Apanhe
		nQuantid :=  0                   //Quantidade de Saidas
		nVlrCusto:=  0                   //Valor do Custo
	Else
		nApanhe  :=  SB1->B1_X_APN_A     //Apanhe
		nQuantid :=  SB1->B1_X_QTDSA     //Quantidade de Saidas
		nVlrCusto:=  SB1->B1_X_VLRCM     //Valor do Custo
	Endif
	
	
	cMetodo  :=  SB1->B1_X_METOD
	nPonto   :=  SB1->B1_X_PTAUT     //[21] Ponto de Pedido
	nGiro    :=  SB1->B1_X_GIROQ
	cClasGiro:=  SB1->B1_X_LMN
	nLoteAut :=  SB1->B1_X_LTAUT
	
	
	
	//
	// Define Saldos em estoque
	//
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Parametros : Codigo do Produto                                                                  ³
	//³                                                                                                ³
	//³Retorna:                                                                                        ³
	//³                                                                                                |
	//³[01]     MALHA                                                                                  ³
	//³[01][01] SaldoSb2()                       // DISPONIVEL                                         ³
	//³[01][02] B2_QNPT                          //     Controla Estoque  - Nossa em Poder de Terceiros³
	//³[01][03] B2_QTNP                          //     Controla Estoque  - Terceiros em Nosso Poder   ³
	//³[01][04] B2_QTER                          //     Nao Controla Est. - Saldo em Poder de Terceiros³
	//³[01][05] B2_RESERVA                       // RESERVADO                                          ³
	//³[01][06] B2_QEMP                          // EMPENHADO                                          ³
	//³[01][07] B2_SALPEDI                       // TRANSITO (SC+PC+OP)                                |
	//³[01][08] B2_QPEDVEN                       // A FATURAR                                          ³
	//³[01][09] B2_QCLASS                        // A CLASSIFICAR                                      ³
	//³[01][10] SB2->B2_QATU                     // FISICO                                             ³
	//³[01][11] SB2->B2_QATU + SB2->B2_SALPEDI   // FISICO + TRANSITO         (Saldo Malha)            ³
	//³[01][12]	nSaldoSB2    -  SB2->B2_QPEDVEN  // FISICO - R - E - FATURAR  (Saldo Malha Disp)       ³
	//³                                                                                                |
	//³[02]     MATRIZ                                                                                 ³
	//³[02][01] SaldoSb2()                       // DISPONIVEL                                         ³
	//³[02][02] B2_QNPT                          //     Controla Estoque  - Nossa em Poder de Terceiros³
	//³[02][03] B2_QTNP                          //     Controla Estoque  - Terceiros em Nosso Poder   ³
	//³[02][04] B2_QTER                          //     Nao Controla Est. - Saldo em Poder de Terceiros³
	//³[02][05] B2_RESERVA                       // RESERVADO                                          ³
	//³[02][06] B2_QEMP                          // EMPENHADO                                          ³
	//³[02][07] B2_SALPEDI                       // TRANSITO (SC+PC+OP)                                |
	//³[02][08] B2_QPEDVEN                       // A FATURAR                                          ³
	//³[02][09] B2_QCLASS                        // A CLASSIFICAR                                      ³
	//³[02][10] SB2->B2_QATU                     // FISICO                                             ³
	//³[02][11] SB2->B2_QATU + SB2->B2_SALPEDI   // FISICO + TRANSITO         (Saldo Malha)            ³
	//³[02][12]	nSaldoSB2    -  SB2->B2_QPEDVEN  // FISICO - R - E - FATURAR  (Saldo Malha Disp)       ³
	//³                                                                                                |
	//³[03]     FILIAL                                                                                 ³
	//³[03][01] SaldoSb2()                       // DISPONIVEL                                         ³
	//³[03][02] B2_QNPT                          //     Controla Estoque  - Nossa em Poder de Terceiros³
	//³[03][03] B2_QTNP                          //     Controla Estoque  - Terceiros em Nosso Poder   ³
	//³[03][04] B2_QTER                          //     Nao Controla Est. - Saldo em Poder de Terceiros³
	//³[03][05] B2_RESERVA                       // RESERVADO                                          ³
	//³[03][06] B2_QEMP                          // EMPENHADO                                          ³
	//³[03][07] B2_SALPEDI                       // TRANSITO (SC+PC+OP)                                |
	//³[03][08] B2_QPEDVEN                       // A FATURAR                                          ³
	//³[03][09] B2_QCLASS                        // A CLASSIFICAR                                      ³
	//³[03][10] SB2->B2_QATU                     // FISICO                                             ³
	//³[03][11] SB2->B2_QATU + SB2->B2_SALPEDI   // FISICO + TRANSITO         (Saldo Malha)            ³
	//³[03][12]	nSaldoSB2    -  SB2->B2_QPEDVEN  // FISICO - R - E - FATURAR  (Saldo Malha Disp)       ³
	//³                                                                                                |
	//³[04]     CONSIGNADO                                                                             ³
	//³[04][01] SaldoSb2()                       // DISPONIVEL                                         ³
	//³[04][02] B2_QNPT                          //     Controla Estoque  - Nossa em Poder de Terceiros³
	//³[04][03] B2_QTNP                          //     Controla Estoque  - Terceiros em Nosso Poder   ³
	//³[04][04] B2_QTER                          //     Nao Controla Est. - Saldo em Poder de Terceiros³
	//³[04][05] B2_RESERVA                       // RESERVADO                                          ³
	//³[04][06] B2_QEMP                          // EMPENHADO                                          ³
	//³[04][07] B2_SALPEDI                       // TRANSITO (SC+PC+OP)                                |
	//³[04][08] B2_QPEDVEN                       // A FATURAR                                          ³
	//³[04][09] B2_QCLASS                        // A CLASSIFICAR                                      ³
	//³[04][10] SB2->B2_QATU                     // FISICO                                             ³
	//³[04][11] SB2->B2_QATU + SB2->B2_SALPEDI   // FISICO + TRANSITO         (Saldo Malha)            ³
	//³[04][12]	nSaldoSB2    -  SB2->B2_QPEDVEN  // FISICO - R - E - FATURAR  (Saldo Malha Disp)       ³
	//³                                                                                                |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	aSaldoEst  := U_SaldoSb2(SB1->B1_COD,cAlmoxa)  // Saldo com base no SB2

	//17.10.2006 - considerar todos almoxarirfados aSaldoFech := U_SaldoSb9(SB1->B1_COD,cAlmoxa)  // Saldo com base no SB9  Ultimo Fechamento
	aSaldoFech := U_SaldoSb9(SB1->B1_COD)           // Saldo com base no SB9  Ultimo Fechamento

	
	nSldMatriz := aSaldoEst[02][10]        //  Matriz (Fisico + PC)
	nSldFilial := aSaldoEst[03][10]        //  Filial (Fisico + PC)
	nSldDispo  := aSaldoEst[01][01]        //  Malha  (Saldo Disponivel)
	nSldEmpen  := aSaldoEst[01][06]        //  Malha  (Quantidade Empenhada)
	nSldReserv := aSaldoEst[01][05]        //  Malha  (Quantidade reservada)
	nSldSalPed := aSaldoEst[01][07]        //  Malha  (Prevista entrar no estoque via Compras ou Op)
	nSldQpedVe := aSaldoEst[01][08]        //  Malha  (Quant.de Pedidos de Venda nao Lib.p/Faturar
	nSldTransi := aSaldoEst[01][07]        //  saldo em transito  definir origem para alterar funcao acima
	nSldClass  := aSaldoEst[01][09]        //  a Classificar
	
	nICSldDispo:= 0
	nICSldMalh := 0
	nICMatDis  := 0
	nICEmpen   := 0
	nICpedVe   := 0
	nICDispM  := 0
	
	nNCSldDispo:= 0
	nNCSldMalh := 0
	nNCMatDis  := 0
	nNCEmpen   := 0
	nNCpedVe   := 0
	nNCDispM   := 0
	nICFisico  := 0                         //  Malha  (FISICO)
	nNCFisico  := 0                         //  Malha  (FISICO)
	
	
	
	if  cItemComp = "S"
		//[xx][12] Fisico - R - E   +    [xx][07] SC + PC + OP  -  [xx][08] A Faturar
		nICSldMalh   := aSaldoEst[01][12]  + aSaldoEst[01][07] - aSaldoEst[01][08]
		nICDispM     := aSaldoEst[01][12]
		nICSldDispo  := aSaldoEst[01][01]   // Disponivel
		nICMatDis    := aSaldoEst[02][01]   //  Matriz (Disp)
		nICEmpen     := aSaldoEst[01][06]   //  Malha  (Quantidade Empenhada)
		nICpedVe     := aSaldoEst[01][08]   //  Malha  (Quant.de Pedidos de Venda nao Lib.p/Faturar
		nICFisico    := aSaldoEst[01][10]   //  Malha  (FISICO)
	Else
		//[xx][12] Fisico - R - E   +    [xx][07] SC + PC + OP  -  [xx][08] A Faturar
		nNCSldMalh   := aSaldoEst[01][12]  + aSaldoEst[01][07] - aSaldoEst[01][08]
		nNCDispM     := aSaldoEst[01][12]
		nNCSldDispo  := aSaldoEst[01][01]   //  Malha  (Saldo Disponivel)
		nNCMatDis    := aSaldoEst[02][01]   //  Matriz (Disp)
		nNCEmpen     := aSaldoEst[01][06]   //  Malha  (Quantidade Empenhada)
		nNCpedVe     := aSaldoEst[01][08]   //  Malha  (Quant.de Pedidos de Venda nao Lib.p/Faturar
		nNCFisico    := aSaldoEst[01][10]   //  Malha  (FISICO)
	Endif
	
	
	//if _ChaveAud = SB1->(B1_X_SIMIL+B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
	//	GeraAud("passou no ponto etapa 3 - GRAVACAO")
	//Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Adicionando itens a Matriz 1 por Sku dos Saldo em estoque                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPosSku  := aScan( aSKU , {|x| x[1] == cCodSku })
	
	if nPosSku = 0
		AADD(aSKU ,;
		{ cCodSku,;                  // [01]Codigo Sku
		nIcSldMalh ,;                // [02] Item de  Compra
		nNcSldMalh ,;                // [03] Item nao Compra
		nICEmpen + nNCEmpen,;        // [04] Empenhado
		aSaldoEst[01][10],;         // [05]Malha  (Fisico)
		aSaldoEst[01][12]  + aSaldoEst[01][07]  - aSaldoEst[01][08],;    // [06]Matriz (Fisico + PC)
		nSldFilial,;     			  // [07]Filial (Disp + PC)
		nICDispM,;    			      // [08]Malha  (Fisico)    - Item de Compra
		nNCDispM,;     			      // [09]Malha  (Fisico)    - Item nao Compra
		nSldReserv,;       			  // [10]Malha  (Quantidade reservada)                      (SZ8) RESERVA     [10]
		nSldTransi,;       			  // [11]Malha  (SC+PC+OP) TRANSITO                         (SZ8) TRANSITO    [11]
		nICpedVe + nNCpedVe,;        // [12]Malha   A FATURAR                                  (SZ8) A FATURAR   [12]
		nSldTransi,;       			  // [13]Malha  (Prevista entrar no estoque via Compras ou Op)
		nICMatDis,;      	    		  // [14]Matriz (Disp)      - Item de Compra
		nSldClass,;                  // [15]Malha  ( a Classificar )                           (SZ8) A CLASSIFICAR[16]
		0,;                          // [16]Total de Saidas por Sku sera preenchido na Etapa 7 - CalcSZ9este campo sera preechido na Etapa 7A
		aSaldoFech[1][1]})       	  // [17]Saldo Fisico no Fechamento     

	Else
		
		// SALDO MALHA
		aSKU[nPosSku][06] += aSaldoEst[01][12]  + aSaldoEst[01][07]  - aSaldoEst[01][08]
		// Sld Malha (Item de Compra)
		aSKU[nPosSku][02] += nIcSldMalh
		// Sld Malha (Item nao Compra)
		aSKU[nPosSku][03] += nNcSldMalh
		// Malha  (DISPONIVEL)
		aSKU[nPosSku][05] += aSaldoEst[01][10]
		// Malha  (TRANSITO)
		aSKU[nPosSku][11] += nSldTransi
		// Malha  (RESERVA)
		aSKU[nPosSku][10] += nSldReserv
		// Malha  (A FATURAR)
		aSKU[nPosSku][12] += nICpedVe + nNCpedVe
		// Malha  (EMPENHADO)
		aSKU[nPosSku][04] += nICEmpen + nNCEmpen
		// Malha  ( a Classificar )                           (SZ8) A CLASSIFICAR[16]
		aSKU[nPosSku][15] += nSldClass
		// Malha  ( a Classificar )                           (SZ8) A CLASSIFICAR[16]
		aSKU[nPosSku][17] += aSaldoFech[1][1]               // Saldo Fisico no Fechamento
		
		/* Nao estao sendo Utilizados
		// Filial (Disp + PC  )
		aSKU[nPosSku][07] += nSldFilial
		// Malha  (Fisico Item Compra)
		aSKU[nPosSku][08] += nICDispM
		// Malha  (Fisico Item Nao Compra)
		aSKU[nPosSku][09] += nNCDispM
		// Malha  (Prevista entrar no estoque via Compras ou Op)
		aSKU[nPosSku][13] += nSldTransi
		// Matriz  (Disponivel) (Fisico - Reserva - Empenho)
		aSKU[nPosSku][14] += nICMatDis
		*/
		
		
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Adicionando itens a Matriz 3 -  Nome aSimil -  Busca  aScan[Simil+Eis]    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPosSimil := aScan( aSimil , {|x| x[1]+x[2] == cCdSimil + cCodiEis })
	
	if nPosSimil = 0
		AADD(aSimil ,;
		{ cCdSimil,;      // [01]Codigo Simil     (B1_X_SIMIL)
		cCodiEis,;        // [02]Codigo Eis       (B1_X_EIS01..B1_X_EIS10)
		nQuantid,;        // [03]Qtde Vendida     (SZ9->Z9_QTDSAI)
		nCstdMed,;        // [04]Custo Padrao Medio(Custo Total (Somatoria dos Custos da Sku)
		nCstdTot,;        // [05]Custo Total      (Z9_QTDSAI * Z9_VLRCM)
		nQtdMedia,;       // [06]Qtde Media por Saida (Qtde Vendida / Numero de Ocorrencias)
		nOcorren,;        // [07]Ocorrencias      (+1 total de Meses Processados no SZ9)
		nPerClas,;        // [08]Perc.Class       ProcVetor ()
		cABC    ,;        // [09]ABC              ProcVetor ()
		nApanhe ,;        // [10]Qtde de Apanhes  (Z9_QTDAPA)
		cPQR    ,;        // [11]PQR              ProcVetor ()
		cNEOIL  ,;        // [12]Neoil            ProcVetor ()
		nTMEA   ,;        // [13]Tmea             ProcVetor ()
		nSaidPe2,;        // [14]SomaSaidasPer2   (Z9_QTDSAI * Z9_QTDSAI)
		nDesPadr,;        // [15]Desvio Padrao    ProcVetor ()
		c123    ,;        // [16]Class 123        (B1_X_123)
		cXYZ    ,;        // [17]Class XYZ        (B1_X_XYZ)
		cNacimp ,;        // [18]Nacimp           (B1_X_NC_IM)
		nLT     ,;        // [19]LT               (B1_X_LT)
		nLoteAut,;        // [20]LoteAut           ProcVetor ()
		nPonto  ,;        // [21]Ponto de Pedido Aut ProcVetor ()
		nEstSegu,;        // [22]EstSeg            ProcVetor ()
		cMetodo,;         // [23]Metodo            ProcVetor ()
		nAcumSai,;        // [24]Acum. Sai         ??? Posicoes Vazias
		nSaldo  ,;        // [25]Saldo             ??? Posicoes Vazias
		nAcumDif,;        // [26]Acum.Dif.Dias     ??? Posicoes Vazias
		nAcumDias,;       // [27]Acum.Saldo.Dias   ??? Posicoes Vazias
		nAcumQuad,;       // [28]Acum.Saldo.Quad   ??? Posicoes Vazias
		nGiro    ,;       // [29]Giro
		cClasGiro,;       // [30]ClassGiro
		nPedCom ,;        // [31]Quantidade Lote Praticado
		nIcSldMalh ,;     // [32]Saldo Malha (Fisico + PC)
		nNcSldMalh,;      // [33]Saldo Malha (Fisico + Pc)
		nICEmpen,;        // [34]Malha  (Empenhado)
		nIcSldDispo,;     // [35]Malha  (Disp)
		nNCFisico,;       // [36]Matriz (FISICO NAO COMPRA)
		nICFisico,;       // [37]Malha  (FISICO COMPRA)
		nICDispM,;        // [38]Malha  (Fisico)
		nNCDispM,;        // [39]Malha  (Fisico)
		nSldReserv,;      // [40]Malha  (Quantidade reservada)
		nSldSalPed,;      // [41]Malha  (Prevista entrar no estoque via Compras ou Op)
		aSaldoEst[01][10],;  // [42] Saldo Fisico
		nSldTransi,;      // [43]
		nNCSldDispo,;     // [44]Malha  (Disponivel Item Nao Compra)
		nICMatDis,;       // [45]Matriz (Disponivel somente dos itens de compra)
		nICpedVe,;   	  // [46]Malha (a Faturar)
		nNCMatDis,;       // [47]Matriz(Disponivel)
		nNCEmpen ,;       // [48]Matriz(Empenhado)
		nNCpedVe ,;       // [49]Malha (a Faturar)
		0 ,;              // [50]Reservado ao Giro - AcmEntr
		0 ,;              // [51]Reservado ao Giro - AcmSaida
		0 ,;              // [52]Reservado ao Giro - Saldo
		0 ,;              // [53]Reservado ao Giro - AcmSld
		0 ,;              // [54]Reservado ao Giro - Acm_dDias
		0 ,;              // [55]Reservado ao Giro - Dias AcmSld
		0 ,;              // [56]Reservado ao Giro - SaldoMedio
		0 ,;              // [57]Reservado ao Giro - Giro
		aSaldoFech[1][1] }) // [58]Saldo Fisico do Fechamento           
		
		
		//if _ChaveAud = SB1->(B1_X_SIMIL+B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
		//	GeraAud("passou no ponto etapa 4 - GRAVACAO")
		//Endif
		
	Else
		
		/* Nao estao sendo Utilizadas
		// Malha  (Prevista entrar no estoque via Compras ou Op) (*)
		aSimil[nPosSimil][41] += nSldSalPed
		// Malha  (Quant.de Pedidos de Venda nao Lib.p/Faturar   (*)
		aSimil[nPosSimil][42] += nSldQpedVe
		*/
		
		aSimil[nPosSimil][42] += aSaldoEst[01][10]   // Fisico  ( COMPRA + NAO COMPRA)
		aSimil[nPosSimil][40] += nSldReserv  // aSaldoEst[01][05]                   RESERVA
		aSimil[nPosSimil][43] += nSldTransi  // aSaldoEst[01][07]                   TRANSITO
		// Item de Compra
		aSimil[nPosSimil][32] += nICSldMalh  // aSaldoEst[01][11]+aSaldoEst[04][11] - aSaldoEst[01][08] MALHA
		aSimil[nPosSimil][38] += nICDispM    // aSaldoEst[01][12]+aSaldoEst[04][12] MALHA DISP
		aSimil[nPosSimil][35] += nICSldDispo // aSaldoEst[01][01]                   DISPONIVEL
		aSimil[nPosSimil][34] += nICEmpen    // aSaldoEst[01][06]                   EMPENHADO
		aSimil[nPosSimil][46] += nICpedVe	  // aSaldoEst[01][08]                   A FATURAR
		aSimil[nPosSimil][37] += nICFisico   // aSaldoEst[01][10]                   Fisico
		// Item nao Compra
		aSimil[nPosSimil][33] += nNCSldMalh  // aSaldoEst[01][11]+aSaldoEst[04][11] - aSaldoEst[01][08] MALHA
		aSimil[nPosSimil][39] += nNCDispM    // aSaldoEst[01][12]+aSaldoEst[04][12] MALHA DISP
		aSimil[nPosSimil][44] += nNCSldDispo // aSaldoEst[01][01]                   DISPONIVEL
		aSimil[nPosSimil][48] += nNCEmpen    // aSaldoEst[01][06]                   EMPENHADO
		aSimil[nPosSimil][49] += nNCpedVe    // aSaldoEst[01][08]                   A FATURAR
		aSimil[nPosSimil][36] += nNCFisico   //aSaldoEst[01][10]                    FISICO
		aSimil[nPosSimil][58] += aSaldoFech[1][1] //Saldo Fisico do Fechamento 
		
	Endif
	
	
	DbSelectArea("SB1")
	SB1->(DbSkip())
	
Enddo


// Busco o Vetor que esta sendo auditado para demostracao
nPosSimil := aScan( aSimil , {|x| x[1]+x[2] ==  _ChaveAud })

//If  !lFechament .and. nPosSimil <> 0
If  nPosSimil <> 0
	
	GeraAud("")
	GeraAud(" Saldo por Eis a ser considerado = ( Fisico - Reserva - Empenho - a Faturar + Transito ) + (SC+PC+OP) ")
	GeraAud(" Saldo por Eis a ser considerado = "+str(aSimil[nPosSimil][32]))
	GeraAud("")
	
Endif

If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Etapa 5 - Finalizacao "+time()+"Total de Simil+Eis gerados na Matiz :"+str(len(asimil)))
	GeraAud("")
	
Endif


Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CalcSZ9   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Processa historico conforme meses informados na             º±±
±±º          ³parametrizacao.                                             º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±º          ³aSimil   // Vetor Simil + Eis                               º±±
±±º          ³[01]     // Simil               [*] index                   º±±
±±º          ³[02]     // Eis                 [*] index                   º±±
±±º          ³[03]     // Qtde Vendida                                    º±±
±±º          ³[04]     // Tamanho do Lote                                 º±±
±±º          ³[05]     // Custo Total                                     º±±
±±º          ³[06]     // Qtde Media por Saida                            º±±
±±º          ³[07]     // Ocorrencias                                     º±±
±±º          ³[08]     // Perc.Class                                      º±±
±±º          ³[09]     // ABC                                             º±±
±±º          ³[10]     // Qtde de Apanhes                                 º±±
±±º          ³[11]     // PQR                                             º±±
±±º          ³[12]     // Neoil                                           º±±
±±º          ³[13]     // Tmea                                            º±±
±±º          ³[14]     // SomaSaidasPer2                                  º±±
±±º          ³[15]     // Desvio Padrao                                   º±±
±±º          ³[16]     // Class 123                                       º±±
±±º          ³[17]     // Class XYZ                                       º±±
±±º          ³[18]     // Nacimp                                          º±±
±±º          ³[19]     // LT                                              º±±
±±º          ³[20]     // LoteAut                                         º±±
±±º          ³[21]     // Ponto de Pedido                                 º±±
±±º          ³[22]     // EstSeg                                          º±±
±±º          ³[23]     // Metodo utilizado                                º±±
±±º          ³[24]     // Acum. Sai                                       º±±
±±º          ³[25]     // Saldo                                           º±±
±±º          ³[26]     // Acum.Dif.Dias                                   º±±
±±º          ³[27]     // Acum.Saldo.Dias                                 º±±
±±º          ³[28]     // Acum.Saldo.Quad                                 º±±
±±º          ³[29]     // Giro                                            º±±
±±º          ³[30]     // ClassGiro                                       º±±
±±º          ³[31]     // Quantidade Lote Praticado                       º±±
±±º          ³[32]     // Malha - Disp + PC (Item de Compra)              º±±
±±º          ³[33]     // Malha - Dipo + PC (Item nao Compra)             º±±
±±º          ³[34]     // Malha - Empenhado                               º±±
±±º          ³[35]     // Malha - Disponivel (Item de Compra)             º±±
±±º          ³[36]     // Matriz (Disp + PC)                              º±±
±±º          ³[37]     // Filial (Disp + PC)                              º±±
±±º          ³[38]     // Malha  (Em Poder de 3)                          º±±
±±º          ³[39]     // Malha  (3 EM Nosso Poder)                       º±±
±±º          ³[40]     // Malha  (Quantidade reservad                     º±±
±±º          ³[41]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[42]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[43]     // Malha - Saldo em Transito                       º±±
±±º          ³[44]     // Malha - Disponivel (Item Nao Compra)            º±±
±±º          ³[45]     // Matriz- (Disponivel - somente itens de compra)  º±±
±±º          ³[46]     // Malha   a Faturar  (Item de Compra)             º±±
±±º          ³[47]     // Matriz  Disponivel (Item Nao Compra)            º±±
±±º          ³[48]     // Matriz  Empenhado  (Item Nao Compra)            º±±
±±º          ³[49]     // Malha   a Faturar  (Item Nao Compra)            º±±
±±º          ³[50]     // Reservado ao Giro - AcmEntr                     º±±
±±º          ³[51]     // Reservado ao Giro - AcmSaida                    º±±
±±º          ³[52]     // Reservado ao Giro - Saldo                       º±±
±±º          ³[53]     // Reservado ao Giro - AcmSld                      º±±
±±º          ³[54]     // Reservado ao Giro - Acm_dDias                   º±±
±±º          ³[55]     // Reservado ao Giro - Dias AcmSld                 º±±
±±º          ³[56]     // Reservado ao Giro - SaldoMedio                  º±±
±±º          ³[57]     // Reservado ao Giro - Giro                        º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function CalcSZ9(aSimil,aSku,nAcumCust,lFechament) // Processa o Historico conforme meses informados na Parametricacao

Local cAno      := str(Year(dIniHis),4)
Local cMes      := strzero(month(dIniHis),2)
Local nPosSimil := 0
Local cCdSimil  := ""
Local cCodiEis  := ""
Local nApanhe   := 0    //Apanhe
Local nQtdSai   := 0    //Quantidade de Saidas
Local nVlrCusto := 0    //Valor do Custo
Local nCount    := 0
Local nRecno1   := 0
Local nRecno2   := 0
Local cTimeIni  := Time()

nAcumCust = 0

DbSelectArea("SZ9")
DbSetOrder(2)                // Filial+Mes+Ano+Simil+Eis
nRecno2:=SZ9->(Recno())
SET SOFTSEEK ON
DbSeek( xFilial("SZ9") + cAno + cMes ,.T.)
SET SOFTSEEK OFF
nRecno1:=SZ9->(Recno())

nCount:= nRecno2 - nRecno1 // Numero de Registros aproximados para o indregua


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 7 - Levantamento do Historico do Simil + Eis")
	GeraAud("")
	GeraAud("Etapa 7 - Inicio do Processamento "+time())
	GeraAud("")
	GeraAud("Ano -"+;
	"Mes - "+;
	"Simil - "+;
	"Eis - "+space(11)+;
	"Apanhe(Mes) - "+;
	"Saidas(Mes) - "+;
	"Somat.Apanhe - "+;
	"Somat.Saidas - "+;
	"Cst Medio(Mes) - "+;
	"Saidas(Mes) * Cst Medio(Mes) - "+;
	"N.Ocorre - "+;
	"Qtde Saidas /N.Ocorre. - "+;
	"Qtde Saidas ao Quadrado" )
	GeraAud("")
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )


While !SZ9->(Eof()) .and. xFilial("SZ9") == SZ9->Z9_FILIAL
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Processando SZ9 " , nCount , cTimeIni , .T. , NIL , 05 )
	
	cCdSimil  :=  SZ9->Z9_SIMIL
	cCodiEis  :=  SZ9->(Z9_EIS01+Z9_EIS02+Z9_EIS03+Z9_EIS04+Z9_EIS05+;
	Z9_EIS06+Z9_EIS07+Z9_EIS08+Z9_EIS09+Z9_EIS10)
	nApanhe   :=  SZ9->Z9_QTDAPA   //Apanhe
	nQtdSai   :=  SZ9->Z9_QTDSAI   //Quantidade de Saidas
	nVlrCusto :=  SZ9->Z9_VLRCM    //Valor do Custo
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Adicionando itens a Matriz 3 -  Nome aSimil -  Busca  aScan[Simil+Eis]    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPosSimil := aScan( aSimil , {|x| x[1]+x[2] == cCdSimil + cCodiEis })
	
	If nPosSimil <> 0
		
		PrecheSimil(@aSimil,@nAcumCust,nPosSimil,cCdSimil,cCodiEis,nApanhe,nQtdSai,nVlrCusto,SZ9->Z9_ANO,SZ9->Z9_MES)
		
	Endif
	
	SZ9->(DbSkip())
	
Enddo


If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Durante esta operacao o surgiu a variavel Custo Total Acumulado ")
	GeraAud("de todos os Eis que ira auxiliar no Calculo do ABC :"+str(nAcumCust,30,2))       // Variavel Custo Total
	GeraAud("")
	GeraAud("Etapa 7 - Finalizacao "+time())
	GeraAud("")
	
Endif

Return







/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CalcSZA   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Processa historico conforme meses informados na             º±±
±±º          ³parametrizacao.                                             º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±º          ³aSKU     // Vetor Sku                                       º±±
±±º          ³[01]     // Codigo da Sku       [*] index                   º±±
±±º          ³[02]     // Malha - Saldo Dispon + PC (Item Nao Compra)     º±±
±±º          ³[03]     // Malha - Saldo Dispon + PC (Item Compra)         º±±
±±º          ³[04]     // Malha - Saldo Empenhado                         º±±
±±º          ³[05]     // Malha - Saldo Disponivel                        º±±
±±º          ³[06]     // Matriz (Disp + PC)                              º±±
±±º          ³[07]     // Filial (Disp + PC)                              º±±
±±º          ³[08]     // Malha  (Em Poder de 3)                          º±±
±±º          ³[09]     // Malha  (3 EM Nosso Poder)                       º±±
±±º          ³[10]     // Malha  (Quantidade reservad                     º±±
±±º          ³[11]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[12]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[13]     // Malha - Saldo em Transito                       º±±
±±º          ³[14]     // Malha - Disponivel  - Item de Compra            º±±
±±º          ³[15]     // Malha - a Classificar                           º±±
±±º          ³[16]     // Consumo no Periodo por Sku                      º±±
±±º          ³[17]     // Saldo Fisico do Fechamento base SB9             º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function CalcSZA(aSimil,aSku,nAcumCust,lFechament) // Processa o Historico conforme meses informados na Parametricacao

Local cAno      := str(Year(dIniHis),4)
Local cMes      := strzero(month(dIniHis),2)
Local nPosSku   := 0
Local cCdSimil  := ""
Local cCodiEis  := ""
Local nApanhe   := 0    //Apanhe
Local nQtdSai   := 0    //Quantidade de Saidas
Local nVlrCusto := 0    //Valor do Custo
Local nCount    := 0
Local nRecno1   := 0
Local nRecno2   := 0
Local cTimeIni  := Time()
Local cCdSku    := 0

DbSelectArea("SZA")
DbSetOrder(2)                // Filial+Mes+Ano+Simil+Eis
SZA->(Recno())
nRecno2:=SZA->(Recno())
SET SOFTSEEK ON
DbSeek( xFilial("SZA") + cAno + cMes ,.T.)
SET SOFTSEEK OFF
nRecno1:=SZA->(Recno())

nCount:= nRecno2 - nRecno1 // Numero de Registros aproximados para o indregua


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 8 - Levantamento do Historico da Sku")
	GeraAud("")
	GeraAud("Etapa 8 - Inicio do Processamento "+time())
	GeraAud("")
	GeraAud("Ano -"+;
	"Mes - "+;
	"sku - "+;
	"Simil - "+;
	"Eis - "+space(11)+;
	"Apanhe(Mes) - "+;
	"Saidas(Mes) - "+;
	"Somat.Apanhe - "+;
	"Somat.Saidas - "+;
	"Cst Medio(Mes) - "+;
	"Saidas(Mes) * Cst Medio(Mes) - "+;
	"N.Ocorre - "+;
	"Qtde Saidas /N.Ocorre. - "+;
	"Qtde Saidas ao Quadrado" )
	GeraAud("")
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )


While !SZA->(Eof()) .and. xFilial("SZA") == SZA->ZA_FILIAL
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Processando SZA " , nCount , cTimeIni , .T. , NIL , 05 )
	
	cCdSku    :=  SZA->ZA_SKU
	cCdSimil  :=  SZA->ZA_SIMIL
	cCodiEis  :=  SZA->(ZA_EIS01+ZA_EIS02+ZA_EIS03+ZA_EIS04+ZA_EIS05+;
	ZA_EIS06+ZA_EIS07+ZA_EIS08+ZA_EIS09+ZA_EIS10)
	nApanhe   :=  SZA->ZA_QTDAPA   //Apanhe
	nQtdSai   :=  SZA->ZA_QTDSAI   //Quantidade de Saidas
	nVlrCusto :=  SZA->ZA_VLRCM    //Valor do Custo
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Adicionando itens a Matriz 3 -  Nome aSimil -  Busca  aScan[Simil+Eis]    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPosSku := aScan( aSku , {|x| x[1] == cCdSku })
	
	// Apenas por Seguranca.
	if nPosSku <> 0
		aSku[nPosSku][16] += nQtdSai
	Endif
	
	SZA->(DbSkip())
	
Enddo

Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³PrecheSimilºAutor ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Grava as informacoes do HISTORICO no Vetor as informacoes   º±±
±±º          ³do Historico podem vir do SZ9 durante o fechamento da       º±±
±±º          ³Planilha e do SB1 durante a Geracao da PGMM tendo como      º±±
±±º          ³objetivo diminuir o tempo de processamento.                 º±±
±±º          ³                                                            º±±
±±º          ³As Variaveis @aSimil e nAcumCust sao as responsaveis em    º±±
±±º          ³guardar as informacoes.                                     º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PrecheSimil(aSimil,nAcumCust,nPosSimil,cCdSimil,cCodiEis,nApanhe,nQtdSai,nVlrCusto,_cAno,_cMes)


// Quantidade de Apanhes      (Quantidade de Apanhes)(Z9_APANHE)
aSimil[nPosSimil][10] += nApanhe
// Quantidade Vendida         (Quantidade de Saidas) (Z9_QTDSAI)
aSimil[nPosSimil][03] += nQtdSai
// Custo Total                (Quantidade de Saidas * Valor Custo)(Z9_QTDSAI * Z9_VLRCM)
aSimil[nPosSimil][05] += nQtdSai * nVlrCusto
// Numero de Ocorrencias
aSimil[nPosSimil][07] += 1
// Consumo Medio Dif de Zero =  (Quantidade Saidas / Qtde de Ocorrencias)
aSimil[nPosSimil][06] = aSimil[nPosSimil][03] / aSimil[nPosSimil][07]
// Quantidade ao Quadrado     (Quantidade de Saidas elevado ao Quadrado)
aSimil[nPosSimil][14] += nQtdSai ^ 2
// Variavel Custo Total
nAcumCust += nQtdSai * nVlrCusto


if	_ChaveAud = (cCdSimil +cCodiEis)
	
	
	GeraAud(_cAno+" "+;
	_cMes+" "+;
	cCdSimil+" "+;
	cCodiEis+" "+;
	str(nApanhe              ,09,2) +" "+; // Apanhe(Mes)
	str(nQtdSai              ,10,3) +" "+; // Saidas(Mes)
	str(aSimil[nPosSimil][10],14)   +" "+; // Somat.Apanhe
	str(aSimil[nPosSimil][03],16,3) +" "+; // Somat.Qtde Saidas
	str(nVlrCusto             ,15,2) +" "+; // VlrCusto
	str(aSimil[nPosSimil][05],27,2) +" "+; // Qtde * VlrCusto
	str(aSimil[nPosSimil][07])   +" "+; // num Ocorrencias
	str(aSimil[nPosSimil][06],15,5)   +" "+; // Consumo Medio Dif 0 = Qtde Saidas / num Ocorencias (Qtde Media)
	str(aSimil[nPosSimil][14],23,5))       // Qtde Saidas ao Quadrado
	
	
Endif


Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ProcVetor ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Processa Matriz resultado da Busca no SB1 e SZ9             º±±
±±º          ³parametrizacao.                                             º±±
±±º          ³                                                            º±±
±±º          ³aSimil   // Vetor Simil + Eis                               º±±
±±º          ³[01]     // Simil               [*] index                   º±±
±±º          ³[02]     // Eis                 [*] index                   º±±
±±º          ³[03]     // Qtde Vendida                                    º±±
±±º          ³[04]     // Tamanho do Lote                                 º±±
±±º          ³[05]     // Custo Total                                     º±±
±±º          ³[06]     // Qtde Media por Saida                            º±±
±±º          ³[07]     // Ocorrencias                                     º±±
±±º          ³[08]     // Perc.Class                                      º±±
±±º          ³[09]     // ABC                                             º±±
±±º          ³[10]     // Qtde de Apanhes                                 º±±
±±º          ³[11]     // PQR                                             º±±
±±º          ³[12]     // Neoil                                           º±±
±±º          ³[13]     // Tmea                                            º±±
±±º          ³[14]     // SomaSaidasPer2                                  º±±
±±º          ³[15]     // Desvio Padrao                                   º±±
±±º          ³[16]     // Class 123                                       º±±
±±º          ³[17]     // Class XYZ                                       º±±
±±º          ³[18]     // Nacimp                                          º±±
±±º          ³[19]     // LT                                              º±±
±±º          ³[20]     // LoteAut                                         º±±
±±º          ³[21]     // Ponto de Pedido                                 º±±
±±º          ³[22]     // EstSeg                                          º±±
±±º          ³[23]     // Metodo utilizado                                º±±
±±º          ³[24]     // Acum. Sai                                       º±±
±±º          ³[25]     // Saldo                                           º±±
±±º          ³[26]     // Acum.Dif.Dias                                   º±±
±±º          ³[27]     // Acum.Saldo.Dias                                 º±±
±±º          ³[28]     // Acum.Saldo.Quad                                 º±±
±±º          ³[29]     // Giro                                            º±±
±±º          ³[30]     // ClassGiro                                       º±±
±±º          ³[31]     // Quantidade Lote Praticado                       º±±
±±º          ³[32]     // Malha - Disp + PC (Item de Compra)              º±±
±±º          ³[33]     // Malha - Dipo + PC (Item nao Compra)             º±±
±±º          ³[34]     // Malha - Empenhado                               º±±
±±º          ³[35]     // Malha - Disponivel (Item de Compra)             º±±
±±º          ³[36]     // Matriz (Disp + PC)                              º±±
±±º          ³[37]     // Filial (Disp + PC)                              º±±
±±º          ³[38]     // Malha  (Em Poder de 3)                          º±±
±±º          ³[39]     // Malha  (3 EM Nosso Poder)                       º±±
±±º          ³[40]     // Malha  (Quantidade reservad                     º±±
±±º          ³[41]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[42]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[43]     // Malha - Saldo em Transito                       º±±
±±º          ³[44]     // Malha - Disponivel (Item Nao Compra)            º±±
±±º          ³[45]     // Matriz- (Disponivel - somente itens de compra)  º±±
±±º          ³[46]     // Malha   a Faturar  (Item de Compra)             º±±
±±º          ³[47]     // Matriz  Disponivel (Item Nao Compra)            º±±
±±º          ³[48]     // Matriz  Empenhado  (Item Nao Compra)            º±±
±±º          ³[49]     // Malha   a Faturar  (Item Nao Compra)            º±±
±±º          ³[50]     // Reservado ao Giro - AcmEntr                     º±±
±±º          ³[51]     // Reservado ao Giro - AcmSaida                    º±±
±±º          ³[52]     // Reservado ao Giro - Saldo                       º±±
±±º          ³[53]     // Reservado ao Giro - AcmSld                      º±±
±±º          ³[54]     // Reservado ao Giro - Acm_dDias                   º±±
±±º          ³[55]     // Reservado ao Giro - Dias AcmSld                 º±±
±±º          ³[56]     // Reservado ao Giro - SaldoMedio                  º±±
±±º          ³[57]     // Reservado ao Giro - Giro                        º±±
±±º          ³[58]     // Saldo Fisico do Fechamento base SB9             º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function ProcVetor(aSimil,nAcumCust,lFechament)
Local nX        := 0
Local nAcumAbc  := 0
Local nClassi   := 0
Local cClassi   := ""
Local aSZR      := {}
Local aSZS      := {}
Local aSZ1      := {}
Local nPosSimil := 0

Local nFatEstS  := 0
Local nTRepro   := 0
Local nLT       := 0
Local nFreqPrat := 0
Local nEstMin   := 0
Local cMetodo   := ""
Local cSistema  := ""
Local nConsMDif0:= 0
Local nConsMedio:= 0
Local nEstMinD  := 0
Local nTmea     := 0
Local nTempRepro:= GetMV("MV_TMPREPR")
Local cTimeIni  := Time()
Local nCount    := Len(aSimil)
Local cClassGiro:= ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 10 - Classificacao do Vetor")
	GeraAud("")
	GeraAud("Etapa 10 - Inicio do Processamento "+time())
	GeraAud("")
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faixas para Classificacao Giro do Estoque          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SZ1")
DbGotop()
While !SZ1->(EOF()) .AND. xFilial("SZ1") == SZ1->Z1_FILIAL
	aadd(aSZ1, { SZ1->Z1_CODIGO, SZ1->Z1_F_X_INI , SZ1->Z1_F_X_FIM })
	SZ1->(DbSkip())
Enddo
aSZ1 := Asort(aSZ1,,,{|x,y| x[2] < y[2]})

If len(aSZ1) = 0
	
	GeraLog("Tabela SZ1 esta vazia - Classificacao de Giro no Estoque.")
	
	Return
	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faixas para Classificacao ABC                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SZR")
DbGotop()
While !SZR->(EOF()) .AND. xFilial("SZR") == SZR->ZR_FILIAL
	aadd(aSZR, { SZR->ZR_CODIGO, SZR->ZR_FXINI , SZR->ZR_FXFIM })
	SZR->(DbSkip())
Enddo
aSZR := Asort(aSZR,,,{|x,y| x[2] < y[2]})

If len(aSZR) = 0
	
	GeraLog("Tabela SZR esta vazia - Classificacao ABC.")
	
	Return
	
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faixas para Classificacao PQR, NEOIL               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SZS")       //  ??? SZS->COD1 = Classificacao PQR
DbGotop()                 //  ??? SZS->COD2 = Classificacao Neoil
While !SZS->(EOF()) .AND. xFilial("SZS") == SZS->ZS_FILIAL
	aadd(aSZS, { SZS->ZS_COD1, SZS->ZS_COD2, SZS->ZS_FXINI , SZS->ZS_FXFIM })
	SZS->(DbSkip())
Enddo
aSZS := Asort(aSZS,,,{|x,y| x[3] < y[3]})

If len(aSZS) = 0
	
	GeraLog("Tabela SZS esta vazia - Classificacao PQR,NEOIL.")
	
	Return
	
Endif




//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Coloca o Vetor aSimil em Ordem Decrescente com base³
//³na coluna Custo Total [5]                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aSimil := Asort(aSimil,,,{|x,y| x[5] > y[5]})

If !Empty(_ChaveAud)
	
	GeraAud("Primeiro colocamos o Vetor Simil + Eis em ordem Decrescente ")
	GeraAud("Baseado na Coluna Qtde * VlrCusto. Desta forma os itens de maior ")
	GeraAud("valor dicaram em primeiro lugar")
	
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )


For nPosSimil := 1 to Len(aSimil)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Processando Vetores " , nCount , cTimeIni , .T. , NIL , 05 )
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Classificacao ABC                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	// Somatoria da Coluna Custo Total
	nAcumAbc += aSimil[nPosSimil][05]
	// Faixa a ser Classificada na Tabela SZR
	nClassi  := (nAcumAbc / nAcumCust) * 100
	cClassi  := ""
	For nX := 1 to Len(aSZR)
		If nClassi >= aSZR[nX][2] .and. nClassi <= aSZR[nX][3]
			cClassi := aSZR[nX][1]
			Exit
		Endif
	Next
	
	
	If 	cClassi  = ""
		If  nClassi <=0
			cClassi := aSZR[1][1]
		Else
			cClassi := aSZR[len(aSZR)][1]
		Endif
	Endif
	
	
	
	// Classificacao ABC Percentual
	aSimil[nPosSimil][08]:= nClassi
	// Classificacao ABC obtida no SZR com base no Percentual
	aSimil[nPosSimil][09]:= cClassi
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Classificacao PQR , Neoil com base no Qtd Apanhe  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//     Segunda a planilha v4 o PQR e resultado no numero de ocorrencias e nao do
	//     numero de apanhes como abaixo descrito
	//     aSimil[nPosSimil][10] == Numero de Apanhes
	//     aSimil[nPosSimil][07] == Numero de Ocorrencias
	//     Como funciona o Arquivo SZS para demanda.
	
	cClassi := ""
	cClsNeo := ""
	For nX := 1 to Len(aSZS)
		If aSimil[nPosSimil][10] >= aSZS[nX][3] .and. aSimil[nPosSimil][10] <= aSZS[nX][4]
			cClassi := aSZS[nX][1]
			cClsNeo := aSZS[nX][2]
			Exit
		Endif
	Next
	
	If 	cClassi  = ""
		If  nClassi <=0
			cClassi := aSZS[1][1]
			cClsNeo := aSZS[1][2]
		Else
			cClassi := aSZS[len(aSZS)][1]
			cClsNeo := aSZS[len(aSZS)][2]
		Endif
	Endif
	
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³CLASSIFICACAO PQR - INDICA POPULARIDAE E             |
	//³OCORRE DE ACORDO COM O NUM.DE APANHES    			|                                                        ³
	//³	Classe 	Popularidade	Correspondência	            ³
	//³	P	> 12	% de itens com CV até  800%	            ³
	//³	Q	4 > e < 11	% de ietns na faixa intermediária	³
	//³	R	< 3	75% dos itens menos populares	            ³
	//³				                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aSimil[nPosSimil][11]:= cClassi
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³TIPO DE DEMANDA (Neoil) DEPENDE DA  QTDE DE APANHES	 ³
	//³NO  ANO			Tipo de demanda		                 ³
	//³		0	0	N	Nula 	                             ³
	//³	0	a	0,5	E	Extraordinária	                     ³
	//³	1	a	3	O	Ocasional	                         ³
	//³	4	a	11	I	Irregular	                         ³
	//³	12	ou	mais	L	Probabilística 	                 ³
	//³						                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aSimil[nPosSimil][12]:= cClsNeo
	
	
	// Quando falo de Tmea utilizo o nPgmPeri (Periodo de Processamento) ou
	// do ano no caso fixo 12 ?
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Tmea - Tempo Medio entre Apanhes                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	// Esta informacao e sempre gerado em dias.
	// Mas durante a gravacao:
	// Cadastro de Produtos (periodo da Planilha ou Ano)
	// Planilha             (periodo da planilha ou Ano)
	// Historicos           (mensal)
	//( Periodo da Planilha * 30 ) / Coluna Quantidade de Apanhes
	aSimil[nPosSimil][13]:= ( nPgmPeri * 30 ) / aSimil[nPosSimil][10]
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desvio Padrao                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	// Variavel A := Coluna SomaSaidaPer2 - ( Coluna Qtde Vendida * Coluna Qtde Vendida ) /
	//                                       Periodo da Planilha
	// Variavel A := Variavel A / Periodo da Planilha
	// DesvioPdrao := Raiz Quadrada da Variavel A
	nClassi := 0
	nClassi := aSimil[nPosSimil][14] - ;
	(aSimil[nPosSimil][03] * aSimil[nPosSimil][03]) / nPgmPeri
	nClassi := nClassi / nPgmPeri
	aSimil[nPosSimil][15]:= SQRT(nClassi)
	
	
	
	//
	// Define qual a classificacao do giro sera utilizadaca
	//
	
	cClassGiro:= aSimil[nPosSimil][30]  //Classificacao Giro
	
	if !lGravaGiro
		DbSelectArea("SB1")
		DbOrderNickname("B1SIMIL") // Filial+Simil+Eis
		If DbSeek (xFilial("SB1") + aSimil[nPosSimil][01] + aSimil[nPosSimil][02] )
			cClassGiro:= SB1->B1_X_LMN    //Classificacao Giro
		Endif
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Alimenta as Variaveis nas Tabelas :               ³
	//³                                                   ³
	//³ SZQ - Distribuicao Normal                         ³
	//³ SZH - Arvore de Encaminhamento                    ³
	//³ SZT - Frequencia Pratica                          ³
	//³                                                   ³
	//³ Para Definir :                                    ³
	//³                                                   ³
	//³ A. Estoque de Seguranca                           ³
	//³ B. Ponto de Pedido Automatico                     ³
	//³ C. Lote Automatico                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nFatEstS := 0             // Fator de Seguranca  - Origem SZQ
	nFreqPrat:= 0             // Frequencia Pratica  - Origem SZT
	cMetodo  := ""            // Metodo que Sera Utilizado - Origem SZH
	cSistema := ""            // Sistema
	cClassi  :=	aSimil[nPosSimil][11]+;  //Classificacao PQR    - Origem SZS
	aSimil[nPosSimil][12]+;  //Classificacao NEOIL  - Origem SZS
	aSimil[nPosSimil][17]+;  //Classificacao XYZ    - Origem SB1 - Nao Houve Reclassificao - Pois segundo o Marcelo sao Manuais
	aSimil[nPosSimil][16]+;  //Classificacao 123    - Origem SB1 - Nao Houve Reclassificao - Pois segundo o Marcelo sao Manuais
	aSimil[nPosSimil][09]+;  //Classificacao ABC    - Origem SZR
	cClassGiro                //aSimil[nPosSimil][30]  //Classificacao Giro
	
	
	nFatEstS := 0
	DbSelectArea("SZH")
	DbSetOrder(2)                       // Filial + ZH_AUXILIA
	If DbSeek(xFilial("SZH")+cClassi)
		cMetodo := SZH->ZH_CODMET      //Classificacao: 1. Ponto de Pedido
		//                2. Estoque Maximo
		//                3. Estoque Minimo
		// 4. Por encomenta (NAO SERA UTILIZADO P/ MULTITEK)
		
		DbSelectArea("SZG")              // Metodo
		DbSetOrder(1)                    // Filial + ZG_CODMET
		If DbSeek(xFilial("SZG")+SZH->ZH_CODMET)
			
			cSistema := SZG->ZG_SISTEMA
			
			DbSelectArea("SZQ")           // Distribuicao Normal
			DbSetOrder(1)                 // Filial + ZQ_CODIGO
			If DbSeek(xFilial("SZQ")+SZG->ZG_CNORM)
				
				nFatEstS := SZQ->ZQ_FATSEG
				
			Else
				
				GeraLog("Nao foi Encontrado o Codigo da Distribuicao Normal : " + SZG->ZG_CNORM +" na Tabela SZQ Tabela De Distribuicao Normal o Codigo tem como origem o SZG")
				
			Endif
			
			
		Else
			
			GeraLog("Nao foi Encontrado o Metodo : " + SZH->ZH_CODMET +" na Tabela SZG Medodos")
			
		Endif
		
	Else
		
		GeraLog("Nao foi Encontrado o Codigo Auxliar "+cClassi+"  na Tabela SZH Arvore de Dimencionamento")
		
	Endif
	
	
	
	cClassi := aSimil[nPosSimil][09]+;  //Classificacao ABC    - Origem SZR
	aSimil[nPosSimil][18]     //"N/I" Nacionalidade   - Origem SB1
	
	DbSelectArea("SZT")
	DbSetOrder(2)                         // Filial + ZT_CODAUX
	If DbSeek(xFilial("SZT")+cClassi)
		nFreqPrat := SZT->ZT_FRQPRA
	Endif
	
	// nTRepro   := nPgmPeri * 30    // Alteracao do Conceito tempo de Reprocessamento.
	nTRepro   := nTempRepro         // Tempo de Reprocessamento e o numero de dias informado no Parametro.
	nLT       := aSimil[nPosSimil][19]
	nConsMDif0:= aSimil[nPosSimil][06] // Consumo Medio Diferente de zero
	// qtde total de saidas / numero de ocorrencias
	nConsMedio:= aSimil[nPosSimil][03] / nPgmPeri // Consumo Medio
	nDias     := IIf( nLT > nTRepro , nLT , nTRepro )
	// nEstMinD  := ( nConsMDif0 * nDias ) / 30
	nTmea     := aSimil[nPosSimil][13]
	// Tamanho do Lote            (Quantidade de Saidas / Apanhes)
	aSimil[nPosSimil][04] := aSimil[nPosSimil][03] / aSimil[nPosSimil][10]
	
	
	aSimil[nPosSimil][23] := cMetodo  // Metodo que sera Utilizado
	
	
	Do Case
		
		
		Case cSistema = "01"                  // 1. Ponto de Pedido
			
			// Estoque de Seguranca =  ( Fator de Seguranca * Desvio Padrao )
			aSimil[nPosSimil][22] := nFatEstS * aSimil[nPosSimil][15]
			
			if aSimil[nPosSimil][18] = "N" // Nacionais
				
				// Ponto de Pedido  = Estoque de Seguranca + (nDias / 30 * Consumo Media)
				aSimil[nPosSimil][21] := aSimil[nPosSimil][22] + ( nDias / 30 * nConsMedio)
				
			ElseIF aSimil[nPosSimil][18] = "I" // Importados
				
				// Ponto de Pedido  = Est. Seg + ( Lt / 30 * Consumo Medio ) + Desvio Padrao
				aSimil[nPosSimil][21] := ( aSimil[nPosSimil][22] + ( nLT / 30 * nConsMedio ) + aSimil[nPosSimil][15] )
				
			Endif
			
			// Lote Automatico     =   Consumo Medio * (Frequencia Pratica / 30)
			aSimil[nPosSimil][20] := nConsMedio * ( nFreqPrat / 30 )
			
			
		Case cSistema = "02"               // 2. Ponto de Minimo
			
			
			// Estoque de Seguranca =  ( Fator de Seguranca * Desvio Padrao )
			aSimil[nPosSimil][22] := nFatEstS * aSimil[nPosSimil][15]
			
			
			If aSimil[nPosSimil][18] = "N" // Nacionais
				
				// Ponto de Pedido  = nConsMedioDif0 * ndias / 30
				aSimil[nPosSimil][21] := (nConsMDif0 * nDias ) / 30
				
			ElseIF aSimil[nPosSimil][18] = "I" // Importados
				
				// Ponto de Pedido  = nConsMedioDif0 * (( nLt /30 + 1 ) / (Tmea * 30))
				aSimil[nPosSimil][21] := nConsMDif0 * (( nLT / 30 + 1 ) / (nTmea / 30))// Corrigido nTmea / 30 ???
				
			Endif
			
			// Lote Automatico     :=  Consumo Medio * ( nFreqPrat / 30 )
			aSimil[nPosSimil][20] := nConsMedio * ( nFreqPrat / 30 )
			
			
		Case cSistema = "03"               // 3. Ponto de Estoque Maximo
			
			
			if aSimil[nPosSimil][18] = "N" // Nacionais
				
				/// VariavelA        :=  (nConsMedioDif0 * ndias) / 30   (Ponto Minimo para Nacionais)
				// Ponto de Pedido   :=  VariavelA +  (( nConsMedio * nFreqPrat )/ 30)
				nEstMinD2  := (nConsMDif0 * nDias ) / 30
				aSimil[nPosSimil][21] := nEstMinD2 + (( nConsMedio * nFreqPrat )/ 30)
				
			ElseIF aSimil[nPosSimil][18] = "I" // Importados
				
				
				// VariavelA        := nConsMedioDif0 * (( nLt /30 + 1 ) / (Tmea / 30))
				// Ponto de Pedido  := VariavelA + (( ConsumoMedio * Frequencia Pratica) /30 )
				//
				nEstMinD2   :=  nConsMDif0 * (( nLT / 30 + 1 ) / (nTmea / 30))  // Corrigido nTmea / 30 ???
				aSimil[nPosSimil][21] := nEstMinD2 + (( nConsMedio * nFreqPrat )/ 30)
				
			Endif
	

			
			//-> Saldo ativado na Etapa 5 por causa do Giro (Etapa 6)
			//aSimil:=CalcSaldo(@aSimil,nPosSimil,.F.)
			
			if	_ChaveAud = aSimil[nPosSimil][1]+aSimil[nPosSimil][2] // Simil + Eis
				GeraAud(" ")
				GeraAud("Saldo da Malha (Somente dos Itens de Compra do Simil)")
				GeraAud("                 - Malha  (      Disponivel                +     PC   ) ")
				GeraAud("                 -        (Fisico-Empenho-Reserva-a Faturar) + (SC+PC+OP) ")
				GeraAud(" ")
				GeraAud("Saldo  da Malha do Eis = "+str(aSimil[nPosSimil][32]) ) //-aSimil[nPosSimil][46]))
				GeraAud(" ")
			Endif
			
			
			// Lote Automatico     =  Ponto de Pedido   - Saldo da Malha (Somente dos Itens de Compra do Simil)
			//                                           - Malha  (      Disponivel        +     PC     - a Faturar)
			//                                           -        (Fisico-Empenho-Reserva) + (SC+PC+OP) - a Faturar)
			aSimil[nPosSimil][20] := aSimil[nPosSimil][21] - aSimil[nPosSimil][32] //-aSimil[nPosSimil][46])
			
			
			// --- Alterado dia 28/12/2005 - Sol. Sr. Milton (Se o sando da Malha for maior que o ponto de Pedido nao calcular.
			if aSimil[nPosSimil][32] >= aSimil[nPosSimil][21]
				
				aSimil[nPosSimil][20] := 0
				
			Endif
			// --- Fim da Alteracao

	// alterado por burin      25/04/2012
	      
	Case cSistema = "04"               // 4. Estoque Zero
			aSimil[nPosSimil][20] := 0 
			aSimil[nPosSimil][21] := 0
			
	Endcase
	
	
	// Arredonda Lote Automatico , Ponto de Pedido e Estoque de Seguranca
	aSimil[nPosSimil][20] := Round(aSimil[nPosSimil][20],0)
	aSimil[nPosSimil][21] := Round(aSimil[nPosSimil][21],0)
	aSimil[nPosSimil][22] := Round(aSimil[nPosSimil][22],0)
	
	if	_ChaveAud = aSimil[nPosSimil][1]+aSimil[nPosSimil][2] // Simil + Eis
		
		GeraAud("")
		GeraAud("C l a s s i f i c a c a o   ABC")
		GeraAud("")
		GeraAud("Durante este processo o sistema  cria uma variavel para somar a cada passagem o Custo Total por Eis.")
		GeraAud("Agora com esta variavel iremos dividir seu resultado pelo Custo Total Acumulado durante a Etapa 7 a qual o valor e:  ")
		GeraAud(str(nAcumCust))
		GeraAud("Logo Temos a Seguinte Classificao := ("+str(nAcumAbc)+" / "+str(nAcumCust)+") * 100 ) = "+str(aSimil[nPosSimil][08]))
		GeraAud("Agora buscando dentro da Tabela SZR (ABC) que possui as seguintes faixas")
		For nX := 1 to len(aSZR)
			GeraAud(aSZR[nX][1]+" e de "+str(aSZR[nX][2])+" ate "+str(aSZR[nX][3]))
		Next
		GeraAud("Buscando a Classificao dentro da Tabela o Sistema Assumiu: "+ aSimil[nPosSimil][09])
		
		GeraAud("")
		GeraAud("C l a s s i f i c a c a o   NEOIL / PQR")
		GeraAud("")
		GeraAud("Para esta classificacao pegamos o numero de Apanhes encontrado durante a Leitura dos Historicos que neste caso e : ")
		GeraAud(str(aSimil[nPosSimil][10]))
		GeraAud("Agora buscando dentro da Tabela SZS (NEOIL) que possui as seguintes faixas")
		For nX := 1 to len(aSZS)
			GeraAud(aSZS[nX][1]+" e "+aSZS[nX][2]+" dentro da faixa de " + str(aSZS[nX][3],10)+" ate "+str(aSZS[nX][4],10))
		Next
		GeraAud("Buscando a Classificao dentro da Tabela o Sistema Assumiu: "+aSimil[nPosSimil][11]+" e "+aSimil[nPosSimil][12])
		
		GeraAud("")
		GeraAud("C l a s s i f i c a c a o   TMEA")
		GeraAud("")
		GeraAud("Para o TMEA utilizamos a seguinte formula (Periodo para calculo da Planilha x 30 ) / por apanhes")
		GeraAud("Logo Temos := ("+ str(nPgmPeri) +" x 30 ) / "+ str(aSimil[nPosSimil][10]) + " = "+str(aSimil[nPosSimil][13]))
		
		GeraAud("")
		GeraAud("C l a s s i f i c a c a o   DESVIO PADRAO")
		GeraAud("")
		
		GeraAud("Variavel A := Coluna SomaSaidaPer2 - ( Coluna Qtde Vendida * Coluna Qtde Vendida ) / Periodo da Planilha")
		GeraAud("Variavel A := "+str(aSimil[nPosSimil][14])+" - ( "+str(aSimil[nPosSimil][03])+" x "+str(aSimil[nPosSimil][03])+") / "+STR(nPgmPeri))
		GeraAud("Variavel A := Variavel A / Periodo da Planilha ")
		nClassi := aSimil[nPosSimil][14] - 	(aSimil[nPosSimil][03] * aSimil[nPosSimil][03]) / nPgmPeri
		GeraAud("Variavel A := "+str(nClassi)+" / "+STR(nPgmPeri)+" := "+STR(nClassi / nPgmPeri))
		GeraAud("Logo Desvio Padrao e igual a Raiz Quadrada da Variavel A := "+str(aSimil[nPosSimil][15]))
		GeraAud("")
		GeraAud("Definicao de Variaveis")
		GeraAud("")
		GeraAud("a.Metodo (SZH)")
		GeraAud("")
		cClassi  :=	aSimil[nPosSimil][11]+;  //Classificacao PQR    - Origem SZS
		aSimil[nPosSimil][12]+;  //Classificacao NEOIL  - Origem SZS
		aSimil[nPosSimil][17]+;  //Classificacao XYZ    - Origem SB1 - Nao Houve Reclassificao - Pois segundo o Marcelo sao Manuais
		aSimil[nPosSimil][16]+;  //Classificacao 123    - Origem SB1 - Nao Houve Reclassificao - Pois segundo o Marcelo sao Manuais
		aSimil[nPosSimil][09]+;  //Classificacao ABC    - Origem SZR
		cClassGiro    //aSimil[nPosSimil][30]     //Classificacao Giro
		GeraAud("  Irei buscar no SZH o seguinte Chave Auxiliar : ")
		GeraAud(" "+aSimil[nPosSimil][11]+"  Classificao PQR   / Origem SZS")
		GeraAud(" "+aSimil[nPosSimil][12]+"  Classificao NEOIL / Origem SZS")
		GeraAud(" "+aSimil[nPosSimil][17]+"  Classificao XYZ   / Origem SB1")
		GeraAud(" "+aSimil[nPosSimil][16]+"  Classificao 123   / Origem SB1")
		GeraAud(" "+aSimil[nPosSimil][09]+"  Classificao ABC   / Origem SZR")
		GeraAud(" "+cClassGiro            +"  Classificao Giro  / Origem SZ1") //aSimil[nPosSimil][30]
		GeraAud(" "+"Logo o Metodo sera :"+aSimil[nPosSimil][23])
		GeraAud("")
		GeraAud("b.Sistema (SZG)")
		GeraAud("")
		GeraAud(" "+"Agora com o Metodo encontro o Sistema  e o Codigo de Normalizacao na Tabela SZG")
		GeraAud("")
		GeraAud(" "+"Metodo    Descricao Metodo                              Sistema       Codigo de Normalizacao")
		DbSelectArea("SZG")
		DbSetorder(1)
		DbGotop()
		While SZG->(!eof())
			GeraAud(" "+ZG_CODIGO+"      "+ZG_DESCMET+" "+ZG_SISTEMA+"                   "+SZG->ZG_CNORM)
			SZG->(DbSkip())
		Enddo
		GeraAud(" "+"Logo o Sistema sera :"+cSistema)
		GeraAud("")
		GeraAud("c.Fator de Seguranca Tabela de Distribuicao Normal SZQ")
		GeraAud("")
		GeraAud(" "+"Agora com o Codigo de Normalizacao encontro o Fator de Seguranca na Tabela SZQ" )
		GeraAud("  "+"Codigo    Nivel de Servico     Fator de Seguranca")
		DbSelectArea("SZQ")
		DbSetorder(1)
		DbGotop()
		While SZQ->(!eof())
			GeraAud("   "+ZQ_CODIGO+"  "+STR(ZQ_NIVSER,10,2)+"  "+STR(ZQ_FATSEG,10,2))
			SZQ->(DbSkip())
		Enddo
		GeraAud(" "+"Logo o Fator de Seguranca sera :"+str(nFatEstS))
		GeraAud("")
		GeraAud(" "+"Agora com o Sistema definido Encontro vou para tabela de Distribuicao Normal para encontrar o Fator de Seguranca")
		GeraAud(" "+"Este Fator e utilizado somente pelo Metodo 1")
		GeraAud("")
		GeraAud("d.Frequencia Pratica")
		GeraAud("")
		GeraAud(" "+"Para encontrar a Frequencia pratica necessito da Classificacao ABC+Origem do Produto(SB1)")
		GeraAud(" "+"Codigo   Origem    Frequencia Pratica   Descricao")
		DbSelectArea("SZT")
		DbSetorder(1)
		DbGotop()
		While !SZT->(eof())
			GeraAud(" "+ZT_CODIGO+" "+ZT_ORIG+" "+STR(ZT_FRQPRA)+" "+ZT_DESCR)
			SZT->(DbSkip())
		Enddo
		GeraAud("")
		cClassi := aSimil[nPosSimil][09]+;  //Classificacao ABC    - Origem SZR
		aSimil[nPosSimil][18]     //"N/I" Nacionalidade   - Origem SB1
		DbSelectArea("SZT")
		DbSetOrder(2)                         // Filial + ZT_CODAUX
		If DbSeek(xFilial("SZT")+cClassi)
			nFreqPrat := SZT->ZT_FRQPRA
		Endif
		GeraAud(" "+"Logo devo buscar por :"+cClassi+"  na Tabela SZT")
		GeraAud("")
		GeraAud(" "+"O resultado da Busca foi :"+STR(nFreqPrat))
		GeraAud("")
		GeraAud("e.Tempo de Reprocessamento")
		GeraAud("")
		GeraAud(" "+"O resultado da Busca foi :"+STR(nTRepro)+" Parametro MV_TMPREPR")
		GeraAud("")
		GeraAud("f.LT")
		GeraAud("")
		GeraAud(" "+"O resultado da Busca foi :"+STR(aSimil[nPosSimil][19])+" SB1")
		GeraAud("")
		GeraAud("g.Consumo Medio Diferente de Zero (Este valor foi levantado durante Leitura do Historco Etapa 7")
		GeraAud("")
		GeraAud(" "+"O resultado da Busca foi :"+STR(aSimil[nPosSimil][06])+"")
		GeraAud("")
		GeraAud("h.Consumo Medio (Quantidade Total de Saidas / Periodo")
		GeraAud("")
		GeraAud(" "+STR(aSimil[nPosSimil][03])+"/"+str(nPgmPeri))
		GeraAud(" "+"O resultado da Busca foi :"+STR(aSimil[nPosSimil][03] / nPgmPeri))
		GeraAud("")
		GeraAud("i.Numero de Dias")
		GeraAud("")
		GeraAud(" "+"Onde Se ( nLT > nTRepro , nLT , nTRepro )")
		GeraAud(" "+"Lt     :="+str(nLT))
		GeraAud(" "+"nTRepro:="+str(nTRepro))
		GeraAud(" "+"O resultado da Busca foi :"+STR(nDias))
		GeraAud("")
		GeraAud("j.Tempo Medio Entre Apanhes (Ja Calculado no Inicio)")
		GeraAud("")
		GeraAud(" Tmea e igual a := "+STR(aSimil[nPosSimil][13]))
		GeraAud("")
		GeraAud("l.Tamanho do Lote)")
		GeraAud("")
		GeraAud(" Tamanho do Lote e igual a := (Quantidade de Saidas / Numero de Apanhes)")
		GeraAud(" Tamanho do Lote e igual a := ("+str(aSimil[nPosSimil][03])+" / "+str(aSimil[nPosSimil][10])+")")
		GeraAud(" Tamanho do Lote e igual a := "+str(aSimil[nPosSimil][04]))
		GeraAud("")
		GeraAud("-------------------------------------------------------------------------------------------------------------------------------")
		GeraAud("")
		
		
		If cSistema = "01"                  // 1. Ponto de Pedido
			
			GeraAud("")
			GeraAud("Sistema  01  sera o utilizado para o Calculo")
			GeraAud("")
			GeraAud("Estoque de Seguranca =  ( Fator de Seguranca * Desvio Padrao )")
			GeraAud("Estoque de Seguranca =  ("+STR(nFatEstS)+" X "+STR(aSimil[nPosSimil][15])+")")
			GeraAud(" "+"O resultado foi :"+STR(aSimil[nPosSimil][22]))
			GeraAud("")
			if aSimil[nPosSimil][18] = "N" // Nacionais
				GeraAud(" "+"Produtos Nacional")
				GeraAud("Ponto de Pedido  = Estoque de Seguranca + (nDias / 30 * Consumo Media)")
				GeraAud("Ponto de Pedido  = "+STR(aSimil[nPosSimil][22]) +" + ( "+STR(nDias)+" / 30 x "+str(nConsMedio)+")")
				GeraAud(" "+"O resultado foi :"	+str(aSimil[nPosSimil][21]))
			ElseIF aSimil[nPosSimil][18] = "I" // Importados
				GeraAud(" "+"Produtos Importado")
				GeraAud("Ponto de Pedido  = Est. Seg + ( Lt / 30 * Consumo Medio ) + Desvio Padrao ")
				GeraAud("Ponto de Pedido  = "+str(aSimil[nPosSimil][22])+" + ("+str(nLT)+" / 30 x "+str(nConsMedio)+" ) + "+str(aSimil[nPosSimil][15]))
				GeraAud(" "+"O resultado foi :"	+str(aSimil[nPosSimil][21]))
			Endif
			GeraAud("")
			GeraAud("Lote Automatico     =   Consumo Medio * (Frequencia Pratica / 30)")
			GeraAud("Lote Automatico     = 	"+str(nConsMedio) +" x ( "+str(nFreqPrat)+" / 30 ) ")
			GeraAud(" "+"O resultado foi :"	+str(aSimil[nPosSimil][20]))
			
		ElseIF cSistema = "02"               // 2. Ponto de Minimo
			
			GeraAud("")
			GeraAud("Sistema  02  sera o utilizado para o Calculo")
			GeraAud("")
			GeraAud("")
			GeraAud("Estoque de Seguranca =  ( Nao TEM PARA ESTE METODO )")
			If aSimil[nPosSimil][18] = "N" // Nacionais
				GeraAud(" "+"Produtos Nacional")
				GeraAud("Ponto de Pedido  = nConsMedioDif0 * ndias / 30")
				GeraAud("Ponto de Pedido  = ("+STR(nConsMDif0)+" X "+STR(nDias)+" ) / 30")
				GeraAud(" "+"O resultado foi :"+STR(aSimil[nPosSimil][21]))
			ElseIF aSimil[nPosSimil][18] = "I" // Importados
				GeraAud(" "+"Produtos Importado")
				GeraAud("Ponto de Pedido  = nConsMedioDif0 * (( nLt /30 + 1 ) / (Tmea / 30))")
				GeraAud("Ponto de Pedido  = "+STR(nConsMDif0)+" X (( "+STR(nLT)+" / 30 + 1 ) / ("+STR(nTmea)+" / 30)")
				GeraAud(" "+"O resultado foi :"	+str(aSimil[nPosSimil][21]))
			Endif
			GeraAud("")
			GeraAud("Lote Automatico     =   Consumo Medio * (Frequencia Pratica / 30)")
			GeraAud("Lote Automatico     = " +STR(nConsMedio) + " X ( "+STR(nFreqPrat)+" / 30 )")
			GeraAud(" "+"O resultado foi :"	+str(aSimil[nPosSimil][20]))
			
		ElseIf cSistema = "03"               // 3. Ponto de Estoque Maximo
			
			GeraAud("")
			GeraAud("Sistema 03 sera o utilizado para o Calculo ")
			GeraAud("")
			GeraAud("")
			GeraAud("Estoque de Seguranca =  ( Nao TEM PARA ESTE METODO )")
			If aSimil[nPosSimil][18] = "N" // Nacionais
				GeraAud(" "+"Produtos Nacional")
				GeraAud(" VariavelA        :=  (nConsMedioDif0 * ndias) / 30   (Ponto Minimo para Nacionais)")
				GeraAud(" VariavelA        := (" + str(nConsMDif0) +" x "+str(ndias)+") / 30")
				nEstMinD2  := (nConsMDif0 * nDias ) / 30
				GeraAud(" VariavelA        := "+ str(nEstMinD2))
				GeraAud(" Ponto de Pedido   :=  VariavelA +  (( nConsMedio * nFreqPrat )/ 30)")
				GeraAud(" Ponto de Pedido   :="+ str(nEstMinD2) + " (( "+str(nConsMedio)+" x "+str(nFreqPrat)+" )/ 30)")
				GeraAud(" O resultado foi :"+STR(aSimil[nPosSimil][21]))
			ElseIF aSimil[nPosSimil][18] = "I" // Importados
				GeraAud(" "+"Produtos Importado")
				GeraAud(" VariavelA        := nConsMedioDif0 * (( nLt /30 + 1 ) / (Tmea / 30))")
				GeraAud(" VariavelA        := "+str(nConsMDif0)+" x "+" (( "+str(nLT)+" / 30 + 1 ) / ("+str(nTmea)+" / 30))")
				nEstMinD2   :=  nConsMDif0 * (( nLT / 30 + 1 ) / (nTmea / 30))
				GeraAud(" VariavelA        := "+str(nEstMinD2))
				GeraAud(" Ponto de Pedido  := VariavelA + (( ConsumoMedio * Frequencia Pratica) /30 )")
				GeraAud(" Ponto de Pedido  := "+str(nEstMinD2)+" + (("+str(nConsMedio)+" x "+ str(nFreqPrat) +") /30 )")
				GeraAud(" "+"O resultado foi :"	+str(aSimil[nPosSimil][21]))
			Endif
			GeraAud("")
			GeraAud("Lote Automatico     =  Ponto de Pedido   - Saldo da Malha (Somente dos Itens de Compra do Simil")
			GeraAud("                                         - Malha  (      Disponivel                 +  SC+PC+OP   ")
			GeraAud("                                         -        (Fisico-Empenho-Reserva-a Faturar + (SC+PC+OP)  ")
			GeraAud(" ")
			GeraAud("Lote Automatico     =  "+str(aSimil[nPosSimil][21])+"  -  ("+str(aSimil[nPosSimil][32])+")")
			GeraAud("Lote Automatico     =  "+str(aSimil[nPosSimil][20]))
			
		Endif
		
		GeraAud("")
		GeraAud("-------------------------------------------------------------------------------------------------------------------------------")
		GeraAud("")
		
	Endif
	
Next


If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Etapa 9 - Finalizacao "+time())
	GeraAud("")
	
Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GiroEst   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Encaminhando/Dimensionando os Estoques (Ponto de Pedido e   º±±
±±º          ³Lote Automatico)                                            º±±
±±º          ³                                                            º±±
±±º          ³aSimil   // Vetor Simil + Eis                               º±±
±±º          ³[01]     // Simil               [*] index                   º±±
±±º          ³[02]     // Eis                 [*] index                   º±±
±±º          ³[03]     // Qtde Vendida                                    º±±
±±º          ³[04]     // Tamanho do Lote                                 º±±
±±º          ³[05]     // Custo Total                                     º±±
±±º          ³[06]     // Qtde Media por Saida                            º±±
±±º          ³[07]     // Ocorrencias                                     º±±
±±º          ³[08]     // Perc.Class                                      º±±
±±º          ³[09]     // ABC                                             º±±
±±º          ³[10]     // Qtde de Apanhes                                 º±±
±±º          ³[11]     // PQR                                             º±±
±±º          ³[12]     // Neoil                                           º±±
±±º          ³[13]     // Tmea                                            º±±
±±º          ³[14]     // SomaSaidasPer2                                  º±±
±±º          ³[15]     // Desvio Padrao                                   º±±
±±º          ³[16]     // Class 123                                       º±±
±±º          ³[17]     // Class XYZ                                       º±±
±±º          ³[18]     // Nacimp                                          º±±
±±º          ³[19]     // LT                                              º±±
±±º          ³[20]     // LoteAut                                         º±±
±±º          ³[21]     // Ponto de Pedido                                 º±±
±±º          ³[22]     // EstSeg                                          º±±
±±º          ³[23]     // Metodo utilizado                                º±±
±±º          ³[24]     // Acum. Sai                                       º±±
±±º          ³[25]     // Saldo                                           º±±
±±º          ³[26]     // Acum.Dif.Dias                                   º±±
±±º          ³[27]     // Acum.Saldo.Dias                                 º±±
±±º          ³[28]     // Acum.Saldo.Quad                                 º±±
±±º          ³[29]     // Giro                                            º±±
±±º          ³[30]     // ClassGiro                                       º±±
±±º          ³[31]     // Quantidade Lote Praticado                       º±±
±±º          ³[32]     // Malha - Disp + PC (Item de Compra)              º±±
±±º          ³[33]     // Malha - Dipo + PC (Item nao Compra)             º±±
±±º          ³[34]     // Malha - Empenhado                               º±±
±±º          ³[35]     // Malha - Disponivel (Item de Compra)             º±±
±±º          ³[36]     // Matriz (Disp + PC)                              º±±
±±º          ³[37]     // Filial (Disp + PC)                              º±±
±±º          ³[38]     // Malha  (Em Poder de 3)                          º±±
±±º          ³[39]     // Malha  (3 EM Nosso Poder)                       º±±
±±º          ³[40]     // Malha  (Quantidade reservad                     º±±
±±º          ³[41]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[42]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[43]     // Malha - Saldo em Transito                       º±±
±±º          ³[44]     // Malha - Disponivel (Item Nao Compra)            º±±
±±º          ³[45]     // Matriz- (Disponivel - somente itens de compra)  º±±
±±º          ³[46]     // Malha   a Faturar  (Item de Compra)             º±±
±±º          ³[47]     // Matriz  Disponivel (Item Nao Compra)            º±±
±±º          ³[48]     // Matriz  Empenhado  (Item Nao Compra)            º±±
±±º          ³[49]     // Malha   a Faturar  (Item Nao Compra)            º±±
±±º          ³[50]     // Reservado ao Giro - AcmEntr                     º±±
±±º          ³[51]     // Reservado ao Giro - AcmSaida                    º±±
±±º          ³[52]     // Reservado ao Giro - Saldo                       º±±
±±º          ³[53]     // Reservado ao Giro - AcmSld                      º±±
±±º          ³[54]     // Reservado ao Giro - Acm_dDias                   º±±
±±º          ³[55]     // Reservado ao Giro - Dias AcmSld                 º±±
±±º          ³[56]     // Reservado ao Giro - SaldoMedio                  º±±
±±º          ³[57]     // Reservado ao Giro - Giro                        º±±
±±º          ³[58]     // Saldo Fisico do Fechamento base SB9             º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function GiroEst(aSimil)

Local nX       := 0
Local cClassi  :=  ""
Local nClassi  := 0
Local cTimeIni  := Time()
Local nCount   := Len(aSimil)
Local _nSaldo  := 0
Local _cClassi := ""
Local aSZ1     := {}
Local nPosSimil:= 0

/*Locais do Vicente*/
Local _aPeriodo    := {}
Local _cAtuAnoMes  := ""
Local _dGDataIni   := dIniGir
Local _dGDataFim   := dFimProc
Local _dData       := _dGDataIni

// Somente quando for Fechamento e o Parametro estiver alterado para efetuar calculo
// do Giro.
// O Giro ja esta vindo gravado do SB1 logo caso nao entre na rotina abaixo
// ficara valento a classificacao encontrada no SB1.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 9 - Giro ano e Classificacao do Giro")
	GeraAud("")
	GeraAud("Etapa 9 - Inicio do Processamento "+time())
	GeraAud("")
	//If !lGravaGiro
	//	GeraAud("Giro nao sera processado pois parametro MV_GRGIRO esta como .F.")
	//	GeraAud("Sera utilizado o giro gravado no SB1")
	//	GeraAud("")
	//Endif
Endif


_cAtuAnoMes  := PadL(Year(_dGDataIni),4,"0")+PadL(Month(_dGDataIni),2,"0")

While  _dData != _dGDataFim
	_dData := _dData + 1
	
	_cAtuAnoMes  := PadL(Year(_dData),4,"0")+PadL(Month(_dData),2,"0")
	
	_nPos := AScan(_aPeriodo,_cAtuAnoMes)
	If _nPos == 0
		Aadd(_aPeriodo,_cAtuAnoMes)
	EndIf
	
Enddo



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faixas para Classificacao Giro do Estoque          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SZ1")
DbGotop()
While !SZ1->(EOF()) .AND. xFilial("SZ1") == SZ1->Z1_FILIAL
	aadd(aSZ1, { SZ1->Z1_CODIGO, SZ1->Z1_F_X_INI , SZ1->Z1_F_X_FIM })
	SZ1->(DbSkip())
Enddo
aSZ1 := Asort(aSZ1,,,{|x,y| x[2] < y[2]})

If len(aSZ1) = 0
	
	GeraLog("Tabela SZ1 esta vazia - Classificacao do Giro no Estoque.")
	
	Return
	
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )


For nPosSimil := 1 to Len(aSimil)
	
	
	U_IncPG1T( "Calcula o Giro de Estoque " , nCount , cTimeIni , .T. , NIL , 05 )
	
	
	// ??? - Criar uma funcao nova que calcule o Giro com base nos Acumulados...
	nClassi:= U__fGiroAcm(aSimil[nPosSimil][01], aSimil[nPosSimil][02], _aPeriodo,.f.)
	
	_cClassi  := ""
	For nX := 1 to Len(aSZ1)
		If nClassi >= aSZ1[nX][2] .and. nClassi <= aSZ1[nX][3]
			_cClassi := aSZ1[nX][1]
			Exit
		Endif
	Next
	
	If 	_cClassi  =  ""
		If  nClassi <=0
			_cClassi := aSZ1[1][1]
		Else
			_cClassi := aSZ1[len(aSZ1)][1]
		Endif
	Endif
	
	aSimil[nPosSimil][29] := nClassi        // Qtde de Giro no Ano
	aSimil[nPosSimil][30] := _cClassi       // ClassGiro
	
	
	If !Empty(_ChaveAud) .and. _ChaveAud = aSimil[nPosSimil][01]+aSimil[nPosSimil][02]
		GeraAud("")
		GeraAud("C l a s s i f i c a c a o   G i r o")
		GeraAud("")
		GeraAud("Agora buscando dentro da Tabela SZ1 (GIRO) que possui as seguintes faixas")
		For nX := 1 to len(aSZ1)
			GeraAud(aSZ1[nX][1]+" e de "+str(aSZ1[nX][2])+" ate "+str(aSZ1[nX][3]))
		Next
		GeraAud("Buscando a Classificao dentro da Tabela o Sistema Assumiu: "+ aSimil[nPosSimil][30])
	Endif
	
Next



//	If !Empty(_ChaveAud)
//		GeraAud("")
//		GeraAud("Etapa 08 - Nao efetua o calculo do giro em funcao de parametro MV_GRGIRO")
//		GeraAud("")
//	Endif


If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Etapa 8 - Finalizacao "+time())
	GeraAud("")
	
Endif

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GravSB1   ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Finalizando o Fechamento da PGMM                            º±±
±±º          ³                                                            º±±
±±º          ³Neste momento o Cadastro de Sku(SB1) serao atualizados      º±±
±±º          ³com base na Matriz, com base na chave Simil + Eis           º±±
±±º          ³                                                            º±±
±±º          ³aSimil   // Vetor Simil + Eis                               º±±
±±º          ³[01]     // Simil               [*] index                   º±±
±±º          ³[02]     // Eis                 [*] index                   º±±
±±º          ³[03]     // Qtde Vendida                                    º±±
±±º          ³[04]     // Tamanho do Lote                                 º±±
±±º          ³[05]     // Custo Total                                     º±±
±±º          ³[06]     // Qtde Media por Saida                            º±±
±±º          ³[07]     // Ocorrencias                                     º±±
±±º          ³[08]     // Perc.Class                                      º±±
±±º          ³[09]     // ABC                                             º±±
±±º          ³[10]     // Qtde de Apanhes                                 º±±
±±º          ³[11]     // PQR                                             º±±
±±º          ³[12]     // Neoil                                           º±±
±±º          ³[13]     // Tmea                                            º±±
±±º          ³[14]     // SomaSaidasPer2                                  º±±
±±º          ³[15]     // Desvio Padrao                                   º±±
±±º          ³[16]     // Class 123                                       º±±
±±º          ³[17]     // Class XYZ                                       º±±
±±º          ³[18]     // Nacimp                                          º±±
±±º          ³[19]     // LT                                              º±±
±±º          ³[20]     // LoteAut                                         º±±
±±º          ³[21]     // Ponto de Pedido                                 º±±
±±º          ³[22]     // EstSeg                                          º±±
±±º          ³[23]     // Metodo utilizado                                º±±
±±º          ³[24]     // Acum. Sai                                       º±±
±±º          ³[25]     // Saldo                                           º±±
±±º          ³[26]     // Acum.Dif.Dias                                   º±±
±±º          ³[27]     // Acum.Saldo.Dias                                 º±±
±±º          ³[28]     // Acum.Saldo.Quad                                 º±±
±±º          ³[29]     // Giro                                            º±±
±±º          ³[30]     // ClassGiro                                       º±±
±±º          ³[31]     // Quantidade Lote Praticado                       º±±
±±º          ³[32]     // Malha - Disp + PC (Item de Compra)              º±±
±±º          ³[33]     // Malha - Dipo + PC (Item nao Compra)             º±±
±±º          ³[34]     // Malha - Empenhado                               º±±
±±º          ³[35]     // Malha - Disponivel (Item de Compra)             º±±
±±º          ³[36]     // Matriz (Disp + PC)                              º±±
±±º          ³[37]     // Filial (Disp + PC)                              º±±
±±º          ³[38]     // Malha  (Em Poder de 3)                          º±±
±±º          ³[39]     // Malha  (3 EM Nosso Poder)                       º±±
±±º          ³[40]     // Malha  (Quantidade reservad                     º±±
±±º          ³[41]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[42]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[43]     // Malha - Saldo em Transito                       º±±
±±º          ³[44]     // Malha - Disponivel (Item Nao Compra)            º±±
±±º          ³[45]     // Matriz- (Disponivel - somente itens de compra)  º±±
±±º          ³[46]     // Malha   a Faturar  (Item de Compra)             º±±
±±º          ³[47]     // Matriz  Disponivel (Item Nao Compra)            º±±
±±º          ³[48]     // Matriz  Empenhado  (Item Nao Compra)            º±±
±±º          ³[49]     // Malha   a Faturar  (Item Nao Compra)            º±±
±±º          ³[50]     // Reservado ao Giro - AcmEntr                     º±±
±±º          ³[51]     // Reservado ao Giro - AcmSaida                    º±±
±±º          ³[52]     // Reservado ao Giro - Saldo                       º±±
±±º          ³[53]     // Reservado ao Giro - AcmSld                      º±±
±±º          ³[54]     // Reservado ao Giro - Acm_dDias                   º±±
±±º          ³[55]     // Reservado ao Giro - Dias AcmSld                 º±±
±±º          ³[56]     // Reservado ao Giro - SaldoMedio                  º±±
±±º          ³[57]     // Reservado ao Giro - Giro                        º±±
±±º          ³[58]     // Saldo Fisico do Fechamento base SB9             º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function GravSB1(aSimil,aSKU)
Local cAno       := str(Year(dFimProc),4)
Local cMes       := strzero(month(dFimProc),2)
Local nPosSimil  := 0
Local cCdSimil   := ""
Local cCodiEis   := ""
Local nApanhe_Ano:= 0
Local cTimeIni   := Time()
Local nCount     := Len(aSimil)
Local lGrvLog    := .T.
Local nPosSku    := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 11	 - Gravacao do SB1 / SZA / SZ9")
	GeraAud("")
	GeraAud("Etapa 11 - Inicio do Processamento "+time())
	GeraAud("")
	
	GeraAud("Abaixo estamos demostrando as informacoes que serao gravadas em todas as SKU'S com o ")
	GeraAud("mesmo Simil + Eis ")
	GeraAud("")
	/*
	GeraAud("Produto  -  "+;
	"Classifi - "+;
	"Giro Ano - "+space(9)+;
	"Tmea     - "+space(7)+;
	"Lote Aut - "+SPACE(3)+;      //[20] LoteAut           ProcVetor ()
	"Ponto Pedido - "+;  //[21] Ponto de Pedido   ProcVetor ()
	"Est.Seg. - "+SPACE(4)+; //[22] EstSeg            ProcVetor ()
	"Desvio padrao - "+SPACE(2)+;    //[15] Desvio Padrao    ProcVetor ()
	"Apanhe - "+;        // aSimil[nPosSimil][10]   (Z9_QTDAPA)
	"Qtde Saidas  - "+;  //[03] Quantidade Vendida (Z9_QTDSAI)
	"Custo Medio - "+;  //  Custo Total Medio /  Z9_QTDSAI.
	"Cons.Medio p/ Ocorrencia - "+;
	"Metodo - "+;
	"Cons.Medio Dif0")
	*/
	
Endif


// Este paramentro foi criado em funcao da Multitek
// nao ter Historico anterior do giro.
// Logo o Giro permanecera o Mesmo para todos os
// meses ate a virada do parametro.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )


For nPosSimil := 1 to Len(aSimil)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Atualizando Arquivos " , nCount , cTimeIni , .T. , NIL , 05 )
	
	cChave      := aSimil[nPosSimil][01] + aSimil[nPosSimil][02]
	nApanhe_Ano := aSimil[nPosSimil][10] / ( nPGMPERI / 12)
	
	
	DbSelectArea("SB1")
	DbOrderNickname("B1SIMIL") // Filial+Simil+Eis
	If DbSeek (xFilial("SB1") + cChave )
		
		While !SB1->(EOF()) .and. cChave = SB1->( B1_X_SIMIL + B1_X_EIS01 + B1_X_EIS02+;
			B1_X_EIS03 + B1_X_EIS04 + B1_X_EIS05+B1_X_EIS06 + B1_X_EIS07 + B1_X_EIS08+;
			B1_X_EIS09 + B1_X_EIS10 ) .and. xFilial("SB1") == SB1->B1_FILIAL
			
			
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Adicionando itens a Matriz 1 por Sku dos Saldo em estoque                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nPosSku  := aScan( aSKU , {|x| x[1] == SB1->B1_COD })
			
			if nPosSku = 0
				
				Aviso("ATENCAO", "Foi incluido um novo produto durante o processamento no Cadastro de produtos no "+;
				" SB1 com o codigo "+SB1->B1_COD+" e o mesmo nao sera considerado neste processamento.",{"&Ok"})
				
			Else
				
				// Observacao / Observacao / Observacao / Observacao / Observacao
				// No momento ficou definido que nao seria gravado os campos do padrao
				// correspondentes aos Multitek que sao:
				// MULTITEK                 PADRAO
				// B1_X_EST           (B1_ESTSEG)
				// B1_X_LTAUT         (B1_LM ou B1_LE)
				// B1_X_PTAUT         (B1_EMIN)
				Reclock("SB1",.F.)
				//cCdSimil,;                               //[01] Codigo Simil     (B1_X_SIMIL)
				//cCodiEis,;                               //[02] Codigo Eis       (B1_X_EIS01..B1_X_EIS10)
				//nQuantid,;                               //[03] Qtde Vendida     (SZ9->Z9_QTDSAI)
				SB1->B1_X_TAMLO:=  aSimil[nPosSimil][04]  //[04] Tamanho do Lote  (Z9_QTDSAI / Z9_APANHE)
				//nCstdTot,;                               //[05] Custo Total      (Z9_QTDSAI * Z9_VLRCM)
				//nOcorren,;                               //[07] Ocorrencias      (+1 total de Meses Processados no SZ9)
				//nPerClas,;                               //[08] Perc.Class       ProcVetor ()
				SB1->B1_X_ABC  := aSimil[nPosSimil][09]  //[09] ABC              ProcVetor ()
				SB1->B1_X_PQR  := aSimil[nPosSimil][11]  //[11] PQR              ProcVetor ()
				SB1->B1_X_NEOIL:= aSimil[nPosSimil][12]  //[12] Neoil            ProcVetor ()
				SB1->B1_X_TMEA := aSimil[nPosSimil][13]  //[13] Tmea             ProcVetor ()
				//nSaidPe2,;                               //[14] SomaSaidasPer2   (Z9_QTDSAI * Z9_QTDSAI)
				SB1->B1_X_DESVP:= aSimil[nPosSimil][15]  //[15] Desvio Padrao    ProcVetor ()
				SB1->B1_X_123  := aSimil[nPosSimil][16]  //[16] Class 123        (B1_X_123)
				SB1->B1_X_XYZ  := aSimil[nPosSimil][17]  //[17] Class XYZ        (B1_X_XYZ)
				//cNacimp ,;                                 //[18] Nacimp           (B1_X_NC_IM)
				//SB1->B1_X_LT  :=  aSimil[nPosSimil][19]  //[19] LT               (B1_X_LT)
				SB1->B1_X_LTAUT:=  aSimil[nPosSimil][20]  //[20] LoteAut           ProcVetor ()
				SB1->B1_X_PTAUT:=  aSimil[nPosSimil][21]  //[21] Ponto de Pedido   ProcVetor ()
				SB1->B1_X_ESTSE:=  aSimil[nPosSimil][22]  //[22] EstSeg            ProcVetor ()
				//cMetodo,;                                //[23] Metodo
				//nAcumSai,;                                //[24] Acum. Sai         ??? Posicoes Vazias
				//nSaldo  ,;                                //[25] Saldo             ??? Posicoes Vazias
				//nAcumDif,;                                //[26] Acum.Dif.Dias     ??? Posicoes Vazias
				//nAcumDias,;                               //[27] Acum.Saldo.Dias   ??? Posicoes Vazias
				//nAcumQuad,;                               //[28] Acum.Saldo.Quad   ??? Posicoes Vazias
				//SaldoMalh })                              //[31] Saldo da Malha  (Qatu - Reserva + Salpedi + Qnpt - Qtnp - QpedVen)
				SB1->B1_X_METOD:=  aSimil[nPosSimil][23]  //[23] Metodo Utilizado no Calculo
				SB1->B1_X_CODIF:=  aSimil[nPosSimil][06]   // Consumo Medio Dif de Zero
				SB1->B1_X_CONSM:=  aSimil[nPosSimil][03]/nPgmPeri // Consumo Medio Normal
				SB1->B1_X_TAMLO:=  aSimil[nPosSimil][04]  //  Tamanho do Lote
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ As informacoes abaixo seram utilizadas  durante³
				//³ a geracao da PGMM.                             ³
				//³ Com base nestas informacoes nao sera necessario³
				//³ rodar o SZ9 Historico novamente.               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SB1->B1_X_APN_A   := nApanhe_Ano            // aSimil[nPosSimil][10]   (Z9_QTDAPA)
				SB1->B1_X_VLRCM   := aSimil[nPosSimil][05] // aSimil[nPosSimil][03] // Custo Total Medio /  Z9_QTDSAI.
								
				SB1->B1_X_QTDSK   := aSku[nPosSku][16]       //Consumo da Sku o campo b1_x_qtdsa tras o total por Eis
				SB1->B1_X_QTDSA   := aSimil[nPosSimil][03] // [03] Quantidade Vendida (Z9_QTDSAI)
				
				SB1->B1_X_CUSVA  := (SB1->B1_X_DESVP / SB1->B1_X_CONSM)*100  // Custo de Variacao
				
				If lGravaGiro
					
					// Este parametro Libera a Gracacao do Giro no SB1.
					// Este paramentro foi criado em funcao da Multitek
					// nao ter Historico anterior do giro. Logo o Giro permanecera o Mesmo para todos os
					// meses ate qua apos 6 meses o parametro seja alterado.
					// Na Etapa 5 Saldo em estoque e analizado todos o produtos que estao sem o giro
					// e gravado Qtde de Giro 0 class L (BAIXA), conforme solicitado pelo Mauricio,
					// isto e necessario pois estando o parametro lGravaGiro = .f. a classificacao
					// encontrada nao sera levada para o produto ficando apenas no Historico e por outro lado
					// nao consigremos buscar este produto na arvore de encaminhamento.
					
					SB1->B1_X_GIROQ:= Iif (aSimil[nPosSimil][29]>=99999999.99 , 99999999.99 , aSimil[nPosSimil][29])  //[29] Qtde de Giro no Ano
					SB1->B1_X_LMN  := aSimil[nPosSimil][30]   //[30] ClassGiro
					
				ENDIF
				
				DbSelectArea("SB1")
				SB1->(MsUnlock())
				
				DbSelectArea("SZA")
				DbSetOrder(2)                   // Filial+Ano+Mes+Sku
				If DbSeek( xFilial("SZA") + cAno + cMes + SB1->B1_COD)
					RecLock("SZA",.F.)
					SZA->ZA_GIROQ    := aSimil[nPosSimil][29] //SB1->B1_X_GIROQ
					SZA->ZA_LMN      := aSimil[nPosSimil][30]   //[30] ClassGiro
					SZA->ZA_ABC      := SB1->B1_X_ABC
					SZA->ZA_PQR      := SB1->B1_X_PQR
					SZA->ZA_NEOIL    := SB1->B1_X_NEOIL
					SZA->ZA_123      := SB1->B1_X_123
					SZA->ZA_XYZ      := SB1->B1_X_XYZ
					SZA->ZA_TMEA     := SB1->B1_X_TMEA
					SZA->ZA_DESVP    := SB1->B1_X_DESVP
					SZA->ZA_CODMET   := aSimil[nPosSimil][23]          // SZH - Metodo
					MsUnlock()
				Endif
				
				
			Endif
			
			
			cCdSimil := SB1->B1_X_SIMIL
			cCodiEis := SB1->(B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+;
			B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
			
			
			if	_ChaveAud = cCdSimil+cCodiEis .and. lGrvLog
				
				GeraAud("B1_X_ABC   "+" :=  "+SB1->B1_X_ABC        +space(11)+"	  [09] ABC               	       	")
				GeraAud("B1_X_PQR   "+" :=  "+SB1->B1_X_PQR        +space(11)+" 	  [11] PQR             	   	    	")
				GeraAud("B1_X_NEOIL "+" :=  "+SB1->B1_X_NEOIL      +space(11)+" 	  [12] Neoil           		    	")
				GeraAud("B1_X_123   "+" :=  "+SB1->B1_X_123        +space(11)+"  	  [16] Class 123        	    	")
				GeraAud("B1_X_XYZ   "+" :=  "+SB1->B1_X_XYZ        +space(11)+"  	  [17] Class XYZ           	    	")
				GeraAud("B1_X_LMN   "+" :=  "+SB1->B1_X_LMN        +space(11)+"  	  [30] ClassGiro           	    	")
				GeraAud("B1_X_GIROQ "+" :=  "+STR(SB1->B1_X_GIROQ) +"               [29] Qtde de Giro no Ano      	")
				GeraAud("B1_X_TMEA	"+" :=  "+STR(SB1->B1_X_TMEA)  +space(01)+"     [13] Tmea                 	    	")
				GeraAud("B1_X_LTAUT	"+" :=  "+STR(SB1->B1_X_LTAUT) +"                [20] LoteAut             	    	")
				GeraAud("B1_X_PTAUT	"+" :=  "+STR(SB1->B1_X_PTAUT) +"                [21] Ponto de Pedido Autom        ")
				GeraAud("B1_X_ESTSE	"+" :=  "+STR(SB1->B1_X_ESTSE) +"                [22] EstSeg                       ")
				GeraAud("B1_X_DESVP	"+" :=  "+STR(SB1->B1_X_DESVP) +"                [15] Desvio Padrao                ")
				GeraAud("B1_X_APN_A	"+" :=  "+STR(SB1->B1_X_APN_A) +space(03)+"     [10] Quantidade de Apanhes        ")
				GeraAud("B1_X_QTDSA	"+" :=  "+STR(SB1->B1_X_QTDSA) +space(02)+"     [03] Quantidade Vendida           ")
				GeraAud("B1_X_VLRCM	"+" :=  "+STR(SB1->B1_X_VLRCM) +"                [05] Custo total do Eis no Periodo")
				GeraAud("B1_X_METOD	"+" :=  "+SB1->B1_X_METOD      +space(10)+"      Metodo                                                             ")
				GeraAud("B1_X_CONSM	"+" :=  "+STR(SB1->B1_X_CONSM) +"                Consumo Periodo        (Total Saidas / Parametro )        ")
				GeraAud("B1_X_CODIF	"+" :=  "+STR(SB1->B1_X_CODIF) +"               [06] Consumo Medio Diferente de Zero (Total Saidas / Numero Ocorrencias)")
				GeraAud("B1_X_TAMLO "+" :=  "+STR(SB1->B1_X_TAMLO) +"               [04] Tamanho do Lote                ")
				
				lGrvLog := .F.
				
			Endif
			
			
			DbSelectArea("SB1")
			SB1->(DBSKIP())
			
		Enddo
		
		
		DbSelectArea("SB1")
		DbOrderNickname("B1SIMIL") // Filial+Simil+Eis
		DbSeek (xFilial("SB1") + cChave )
		
		DbSelectArea("SZ9")
		DbSetOrder(2)                   // Filial+Ano+Mes+Simil+Eis
		If DbSeek( xFilial("SZ9") + cAno + cMes + cChave)
			
			RecLock("SZ9",.F.)
			SZ9->Z9_ABC      := SB1->B1_X_ABC
			SZ9->Z9_PQR      := SB1->B1_X_PQR
			SZ9->Z9_NEOIL    := SB1->B1_X_NEOIL
			SZ9->Z9_123      := SB1->B1_X_123
			SZ9->Z9_XYZ      := SB1->B1_X_XYZ
			SZ9->Z9_GIROQ    := aSimil[nPosSimil][29]          // Quantidade de Giro
			SZ9->Z9_LMN      := aSimil[nPosSimil][30]          // ClassGiro
			SZ9->Z9_TMEA     := SB1->B1_X_TMEA
			SZ9->Z9_DESVP    := SB1->B1_X_DESVP
			SZ9->Z9_CODMET   := aSimil[nPosSimil][23]          // SZH - Metodo
			MsUnlock()
			
			
			if	_ChaveAud =  cChave
				
				GeraAud("")
				GeraAud("")
				GeraAud("Gravando o SZ9 - Neste momento estamos gravando informacoes no SZ9 gerado no inicio.")
				GeraAud("")
				
				GeraAud("ANO - "+;
				"MES - "+;
				"SIMIL - "+;
				"EIS - "+SPACE(15)+;
				"CLASSIFI - "+SPACE(6)+;
				"Giro Ano - "+SPACE(9)+;
				"Tmea - "+SPACE(7)+;
				"Desvio Padrao - "+;
				"Metodo ")
				
				
				GeraAud(SZ9->Z9_ANO+" "+space(2)+;
				SZ9->Z9_MES+" "+;
				SZ9->Z9_SIMIL+" "+space(3)+;
				SZ9->Z9_EIS01+;
				SZ9->Z9_EIS02+;
				SZ9->Z9_EIS03+;
				SZ9->Z9_EIS04+;
				SZ9->Z9_EIS05+;
				SZ9->Z9_EIS06+;
				SZ9->Z9_EIS07+;
				SZ9->Z9_EIS08+;
				SZ9->Z9_EIS09+;
				SZ9->Z9_EIS10+" "+;
				SZ9->Z9_ABC  +;
				SZ9->Z9_PQR  +;
				SZ9->Z9_NEOIL +;
				SZ9->Z9_123   +;
				SZ9->Z9_XYZ   +;
				SZ9->Z9_LMN   +" "+;
				str(SZ9->Z9_GIROQ) +" "+;
				str(SZ9->Z9_TMEA)  +" "+;
				str(SZ9->Z9_DESVP) +" "+SPACE(6)+;
				SZ9->Z9_CODMET)
				
			Endif
			
			
		Endif
		
		
	Endif
	
Next

If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Etapa 10 - Finalizacao "+time())
	GeraAud("")
	
Endif


Return

*/
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GeraZ7eZ8 ºAutor  ³                    º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Geracao dos dados para Manutencao                           º±±
±±º          ³                                                            º±±
±±º          ³Neste momento estou aproveitando a Matriz aSimil para       º±±
±±º          ³gravar o SZ8                                                º±±
±±º          ³                                                            º±±
±±º          ³aSKU     // Vetor Sku                                       º±±
±±º          ³[01]     // Codigo da Sku       [*] index                   º±±
±±º          ³[02]     // Malha - Saldo Dispon + PC (Item Nao Compra)     º±±
±±º          ³[03]     // Malha - Saldo Dispon + PC (Item Compra)         º±±
±±º          ³[04]     // Malha - Saldo Empenhado                         º±±
±±º          ³[05]     // Malha - Saldo Disponivel                        º±±
±±º          ³[06]     // Matriz (Disp + PC)                              º±±
±±º          ³[07]     // Filial (Disp + PC)                              º±±
±±º          ³[08]     // Malha  (Em Poder de 3)                          º±±
±±º          ³[09]     // Malha  (3 EM Nosso Poder)                       º±±
±±º          ³[10]     // Malha  (Quantidade reservad                     º±±
±±º          ³[11]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[12]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[13]     // Malha - Saldo em Transito                       º±±
±±º          ³[14]     // Malha - Disponivel  - Item de Compra            º±±
±±º          ³[15]     // Malha - a Classificar                           º±±
±±º          ³                                                            º±±
±±º          ³aSimil   // Vetor Simil + Eis                               º±±
±±º          ³[01]     // Simil               [*] index                   º±±
±±º          ³[02]     // Eis                 [*] index                   º±±
±±º          ³[03]     // Qtde Vendida                                    º±±
±±º          ³[04]     // Tamanho do Lote                                 º±±
±±º          ³[05]     // Custo Total                                     º±±
±±º          ³[06]     // Qtde Media por Saida                            º±±
±±º          ³[07]     // Ocorrencias                                     º±±
±±º          ³[08]     // Perc.Class                                      º±±
±±º          ³[09]     // ABC                                             º±±
±±º          ³[10]     // Qtde de Apanhes                                 º±±
±±º          ³[11]     // PQR                                             º±±
±±º          ³[12]     // Neoil                                           º±±
±±º          ³[13]     // Tmea                                            º±±
±±º          ³[14]     // SomaSaidasPer2                                  º±±
±±º          ³[15]     // Desvio Padrao                                   º±±
±±º          ³[16]     // Class 123                                       º±±
±±º          ³[17]     // Class XYZ                                       º±±
±±º          ³[18]     // Nacimp                                          º±±
±±º          ³[19]     // LT                                              º±±
±±º          ³[20]     // Lote Automatico                                 º±±
±±º          ³[21]     // Ponto de Pedido Automatico                      º±±
±±º          ³[22]     // EstSeg                                          º±±
±±º          ³[23]     // Metodo utilizado                                º±±
±±º          ³[24]     // Acum. Sai                                       º±±
±±º          ³[25]     // Saldo                                           º±±
±±º          ³[26]     // Acum.Dif.Dias                                   º±±
±±º          ³[27]     // Acum.Saldo.Dias                                 º±±
±±º          ³[28]     // Acum.Saldo.Quad                                 º±±
±±º          ³[29]     // Giro                                            º±±
±±º          ³[30]     // ClassGiro                                       º±±
±±º          ³[31]     // Quantidade Lote Praticado                       º±±
±±º          ³[32]     // Malha - Disp + PC (Item de Compra)              º±±
±±º          ³[33]     // Malha - Dipo + PC (Item nao Compra)             º±±
±±º          ³[34]     // Malha - Empenhado                               º±±
±±º          ³[35]     // Malha - Disponivel (Item de Compra)             º±±
±±º          ³[36]     // Matriz (Disp + PC)                              º±±
±±º          ³[37]     // Filial (Disp + PC)                              º±±
±±º          ³[38]     // Malha  (Em Poder de 3)                          º±±
±±º          ³[39]     // Malha  (3 EM Nosso Poder)                       º±±
±±º          ³[40]     // Malha  (Quantidade reservad                     º±±
±±º          ³[41]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[42]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[43]     // Malha - Saldo em Transito                       º±±
±±º          ³[44]     // Malha - Disponivel (Item Nao Compra)            º±±
±±º          ³[45]     // Matriz- (Disponivel - somente itens de compra)  º±±
±±º          ³[46]     // Malha   a Faturar  (Item de Compra)             º±±
±±º          ³[47]     // Matriz  Disponivel (Item Nao Compra)            º±±
±±º          ³[48]     // Matriz  Empenhado  (Item Nao Compra)            º±±
±±º          ³[49]     // Malha   a Faturar  (Item Nao Compra)            º±±
±±º          ³[50]     // Reservado ao Giro - AcmEntr                     º±±
±±º          ³[51]     // Reservado ao Giro - AcmSaida                    º±±
±±º          ³[52]     // Reservado ao Giro - Saldo                       º±±
±±º          ³[53]     // Reservado ao Giro - AcmSld                      º±±
±±º          ³[54]     // Reservado ao Giro - Acm_dDias                   º±±
±±º          ³[55]     // Reservado ao Giro - Dias AcmSld                 º±±
±±º          ³[56]     // Reservado ao Giro - SaldoMedio                  º±±
±±º          ³[57]     // Reservado ao Giro - Giro                        º±±
±±º          ³[58]     // Saldo Fisico do Fechamento base SB9             º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function GeraZ7eZ8(aSimil,aSKU)

Local nPosSimil  := 0
Local cCodiSku   := ""
Local cCdSimil   := ""
Local cCodiEis   := ""

Local nPonto     := 0
Local nLote      := 0
Local nSldMalha  := 0
Local nPosSku    := 0
Local nLtMan     := 0         //  Lote Manual
Local nLtAut     := 0         //  Lote Automatico   ProcVetor ()
Local nPtAut     := 0         //  Ponto Automatico  ProcVetor ()
Local aEis       := {}
Local nS_PedCom  := 0
Local nApanhe_Ano:= 0
Local nCount     := Len(aSimil) * 2
Local cTimeIni   := Time()
Local nPedCom    := 0
Local cChave     := ""
Local nConsMedio := 0
Local cSistema  := ""


//TCSQLEXEC(("UPDATE PZ2010 SET PZ2_NOW='N' WHERE PZ2_NOW='T' " ))
//TCSQLEXEC(("DELETE "+ RetSqlName("PZ1")+" PZ1 " + " WHERE PZ1_ALIAS = '"+_cProcTab+"' and PZ1_DATA < '"+DTOS(dDataBase-10)+"'" ))
//TCSQLEXEC(("UPDATE PZ2010 SET PZ2_NOW='N' WHERE PZ2_NOW='T' " ))

#IFDEF TOP
	TCSQLEXEC("DELETE FROM "+ RetSqlName("SZ7") )
	TCSQLEXEC("DELETE FROM "+ RetSqlName("SZ8") )

#ELSE
	DbSelectArea("SZ7")    // Planilha por Simil + Eis
	DbGotop()
	while !SZ7->(EOF()) .AND. xFilial("SZ7") == SZ7->Z7_FILIAL
		Reclock("SZ7",.F.)
		SZ7->(DbDelete())
		MsUnlock()
		SZ7->(DbSkip())
	Enddo
	DbSelectArea("SZ8")    // Planilha por Sku
	DbGotop()
	while !SZ8->(EOF()).AND. xFilial("SZ8") == SZ8->Z8_FILIAL
		Reclock("SZ8",.F.)
		SZ8->(DbDelete())
		MsUnlock()
		SZ8->(DbSkip())
	Enddo
#ENDIF



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cabecalho Log de Analise de Simil + Eis                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 12 - Geracao da Planilha gravacao do SZ7 / SZ8")
	GeraAud("")
	GeraAud("Etapa 12 - Inicio do Processamento "+time())
	GeraAud("")
	GeraAud("Toda analise das informaceos gravadas durante este processo pode ser efetuada")
	GeraAud("atraves da propria Planilha.")
	GeraAud("")
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicia Processo de Gravacao do SZ7                                        ³
//³Para garantir a Integricade ja que a Matriz veio pronta e nao posso gravar³
//³alguns itens tipo SB1->B1_X_PTMAN < 0  Verifico o SZ8 p/ Continuar        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )

For nPosSimil := 1 to Len(aSimil)
	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Gerando SZ7 " , nCount , cTimeIni , .T. , NIL , 05 )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso o Sistema utulizado seja o Sistema 3 devo recalcular o Lote Automatico
	//³ e regravar a informacao no SB1.                                        |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	DbSelectArea("SZG")              // Metodo
	DbSetOrder(1)                    // Filial + ZG_CODMET
	If DbSeek(xFilial("SZG")+aSimil[nPosSimil][23])
		
		cSistema := SZG->ZG_SISTEMA
		
		DbSelectArea("SZQ")           // Distribuicao Normal
		DbSetOrder(1)                 // Filial + ZQ_CODIGO
		If DbSeek(xFilial("SZQ")+SZG->ZG_CNORM)
			nFatEstS := SZQ->ZQ_FATSEG
		Endif
		
	Endif
	
	
	If  cSistema = "03"
		
		
		// Lote Automatico     =  Ponto de Pedido   - Saldo da Malha (Somente dos Itens de Compra do Simil)
		//                                           - Malha  (      Disponivel        +     PC     - a Faturar )
		//                                           -        (Fisico-Empenho-Reserva) + (SC+PC+OP) - a Faturar )
		//aSimil[nPosSimil][20] := aSimil[nPosSimil][21] - ( aSimil[nPosSimil][32] - aSimil[nPosSimil][46] )
		aSimil[nPosSimil][20] := aSimil[nPosSimil][21] -  aSimil[nPosSimil][32]
		
		// --- Alterado dia 28/12/2005 - Sol. Sr. Milton (Se o sando da Malha for maior que o ponto de Pedido nao calcular.
		if aSimil[nPosSimil][32] >= aSimil[nPosSimil][21]
			
			aSimil[nPosSimil][20] := 0
			
		Endif
		// --- Fim da Alteracao
		
		
		cChave      := aSimil[nPosSimil][01] + aSimil[nPosSimil][02]
		DbSelectArea("SB1")
		DbOrderNickname("B1SIMIL") // Filial+Simil+Eis
		If DbSeek (xFilial("SB1") + cChave )
			While !SB1->(EOF()) .and. cChave = SB1->( B1_X_SIMIL + B1_X_EIS01 + B1_X_EIS02+;
				B1_X_EIS03 + B1_X_EIS04 + B1_X_EIS05+B1_X_EIS06 + B1_X_EIS07 + B1_X_EIS08+;
				B1_X_EIS09 + B1_X_EIS10 ) .and. xFilial("SB1") == SB1->B1_FILIAL
				Reclock("SB1",.F.)
				SB1->B1_X_LTAUT:=aSimil[nPosSimil][20]
				MsUnlock()
				SB1->(DBSKIP())
			Enddo
		Endif
		
		
	Endif
	
	
	
	
	DbSelectArea("SB1")
	DbOrderNickname("B1SIMIL") // Filial+Simil+Eis
	IF DbSeek(xFilial("SB1")+aSimil[nPosSimil][01]+aSimil[nPosSimil][02]) // simil + Eis
		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Dados para processamento                                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cCodiSku      := SB1->B1_COD
		cCdSimil      := SB1->B1_X_SIMIL
		cCodiEis      := SB1->(B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
		nLtMan        := SB1->B1_X_LTMAN          //  Lote Automatico Manual
		cAuxiliar     := SB1->(B1_X_PQR+B1_X_NEOIL+B1_X_XYZ+B1_X_123+B1_X_ABC+B1_X_LMN)
		
		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//|Retorna o codigo Eis concatenado ou as Descricoes de cada Eis             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aEis := U_EisConct(SB1->B1_X_EIS01,SB1->B1_X_EIS02,SB1->B1_X_EIS03,SB1->B1_X_EIS04,SB1->B1_X_EIS05,;
		SB1->B1_X_EIS06,SB1->B1_X_EIS07,SB1->B1_X_EIS08,SB1->B1_X_EIS09,SB1->B1_X_EIS10)
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//|Defino qual sera o consumo Medio utilizado para calculo das Coberturas    ³
		//|dependendo do Metodo que estou utilizando.                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF cSistema $ "02/03"
			
			nConsMedio :=  SB1->B1_X_CODIF  // Consumo Medio Dif de Zero (Tot. Saidas / Ocorrencias)
			
		Else
			
			nConsMedio :=  SB1->B1_X_CONSM  // Consumo Medio Normal     (Tot. Saidas  / Parametro)
			
		Endif
		
		__cUserId // Variável Publica com o ID do Usuário Logado
		cNome := UsrRetName(__cUserId)

		
		DbSelectArea("SZ7")
		RecLock("SZ7",.T.)
		SZ7->Z7_FILIAL	:= xFilial("SZ7")
		SZ7->Z7_SIMIL	:= cCdSimil
		SZ7->Z7_EIS    := cCodiEis
		SZ7->Z7_EIS01	:= SB1->B1_X_EIS01
		SZ7->Z7_EIS02	:= SB1->B1_X_EIS02
		SZ7->Z7_EIS03	:= SB1->B1_X_EIS03
		SZ7->Z7_EIS04	:= SB1->B1_X_EIS04
		SZ7->Z7_EIS05	:= SB1->B1_X_EIS05
		SZ7->Z7_EIS06	:= SB1->B1_X_EIS06
		SZ7->Z7_EIS07	:= SB1->B1_X_EIS07
		SZ7->Z7_EIS08	:= SB1->B1_X_EIS08
		SZ7->Z7_EIS09	:= SB1->B1_X_EIS09
		SZ7->Z7_EIS10	:= SB1->B1_X_EIS10
		SZ7->Z7_PTAUT	:= SB1->B1_X_PTAUT         //[21] Ponto de Pedido Automatico
		SZ7->Z7_PTMAN	:= SB1->B1_X_PTMAN
		SZ7->Z7_LTMAN	:= SB1->B1_X_LTMAN
		SZ7->Z7_LTAUT	:= SB1->B1_X_LTAUT         //[20] Lote Automatico
		SZ7->Z7_DESVPAD:= SB1->B1_X_DESVP         //[15] Desvio Padrao    ProcVetor ()
		SZ7->Z7_ESTSEG	:= SB1->B1_X_ESTSE
		SZ7->Z7_LT_DIAS:= SB1->B1_X_LT            //[19] LT               (B1_X_LT)
		SZ7->Z7_QTDAPAN:= SB1->B1_X_APN_A         //aSimil[nPosSimil][10]  //[10] Qtde de Apanhes  (Z9_QTDAPA)
		SZ7->Z7_TMEA   := SB1->B1_X_TMEA          // Tmea             ProcVetor ()
		SZ7->Z7_GIROANO:= SB1->B1_X_GIROQ        //  Qtde Giro Ano          ProcVetor ()
		SZ7->Z7_PQR    := SB1->B1_X_PQR          // Apenas para auxiliarem nos filtros da PGMM
		SZ7->Z7_ABC    := SB1->B1_X_ABC          // Apenas para auxiliarem nos filtros da PGMM
		SZ7->Z7_LMN    := SB1->B1_X_LMN          //  Giro class  //
		SZ7->Z7_NEOIL  := SB1->B1_X_NEOIL
		SZ7->Z7_CONSMED:= nConsMedio
		
		//SZ7->Z7_CONSPER := SB1->B1_X_CONSM         // Consumo Medio normal       (Total Saidas / Periodo    )
		// --- Alterado dia 28/12/2005 - Sol. Sr. Milton
		SZ7->Z7_CONSPER := SB1->B1_X_QTDSA          // Consumo no Perido e igual ao total de Saidas no periodo de 12 meses por exemplo.
		// --- Fim da Alteracao
		
		SZ7->Z7_TAMLOTE := SB1->B1_X_TAMLO                              // Tamanho do Lote
		SZ7->Z7_AUXILIA := cAuxiliar                                      // ZH_AUXILIAR
		SZ7->Z7_DESCR1  := SZG->ZG_CODIGO +" - "+SZG->ZG_DESCMET        // Metodo usado no Dimencionamento do Estoque.
		SZ7->Z7_DESCR2  := SZG->ZG_SISTEMA+" - "+SZG->ZG_DSCTRAT        // Sistema de Tratamento.
		SZ7->Z7_DESCR3  := aEis[1][2]                                    // Descricao do Eis Concatenada
		
		//  Saldo da Malha   := Fisico + Transito   ( INCLUSIVE ALMOX. CONSIGNADOS)
		//  Saldo Malha  Disp := F - R - E - F       ( INCLUSIVE ALMOX. CONSIGNADOS)
		//  Saldo Matriz Disp := F - R - E - F       ( NAO CONSIDERA  ALMOX. CONSIGNADOS)
		//  Saldo FILIAL Disp := F - R - E - F       ( NAO CONSIDERA  ALMOX. CONSIGNADOS)
		
		SZ7->Z7_SLDMALH := aSimil[nPosSimil][32]+aSimil[nPosSimil][33] // - aSimil[nPosSimil][46]//[32] Saldo da Malha itend de Compra
		SZ7->Z7_PEDCOMP	:= aSimil[nPosSimil][32]                         //  Malha  - IC - Dipo + PC (Item de Compra)
		SZ7->Z7_NAOCOMP	:= aSimil[nPosSimil][33]                         //  Malha  - NC - Dipo + PC (Item nao Compra)
		SZ7->Z7_DISPONI	:= aSimil[nPosSimil][42]                          // Malha  - Fisico
		SZ7->Z7_SLDTRAN := aSimil[nPosSimil][43]                         //  Malha  - PC - Saldo em Transito
		SZ7->Z7_SLRESER := aSimil[nPosSimil][40]                         // Malha - Saldo Reservado
		SZ7->Z7_SLFATUR := aSimil[nPosSimil][46]+aSimil[nPosSimil][49]  // Malha - Saldo a Faturar  (Item de compra + Item nao Compra)
		SZ7->Z7_SLDEMPE	:= aSimil[nPosSimil][34]+aSimil[nPosSimil][48]   // Malha  - Empenhado
		
		
		// ===== Cobertura dos (IC) Itens de Compra
		// (IC) Item de Compra =  (Fisico - Reserva - Empenho - a Faturar + Transico )  / Consumo Medio no Periodo     COBERTURA DA MALHA
		SZ7->Z7_CB_MALH := aSimil[nPosSimil][32]  /  ( nConsMedio  / 30 )
		// (IC) Item de Compra =  (Fisico) /Consumo Medio no Periodo
		SZ7->Z7_CB_DISP := aSimil[nPosSimil][37]  /  ( nConsMedio  / 30 )
		
		// ====== Cobertura dos (NC) Itens Nao Compra
		// (NC) Item de Compra =  (Fisico - Reserva - Empenho - a Faturar + Transico )  / Consumo Medio no Periodo     COBERTURA DA MALHA
		SZ7->Z7_CN_MALH :=  aSimil[nPosSimil][33]  /  ( nConsMedio / 30  )
		// (NC) Item de Compra =  (Fisico) /Consumo Medio no Periodo
		SZ7->Z7_CN_DISP :=  aSimil[nPosSimil][36]  /  ( nConsMedio  / 30 )
		
		
		SZ7->Z7_DATA    := dDataBase
		SZ7->Z7_HORA    := TIME()
		SZ7->Z7_USUARIO := cNome
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//|Retorna a Quantidade a ser comprada por EIS                               ³
		//|Ped_Comp(nLtMan,nLtAut,nPtman,nPtAut,nSldMalha)                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		// O Retorno e rapido apenas faz um calculo.
		nPedCom  := U_PED_COMP(SZ7->Z7_LTMAN,SZ7->Z7_LTAUT,SZ7->Z7_PTMAN,SZ7->Z7_PTAUT,SZ7->Z7_PEDCOMP)
		SZ7->Z7_COMPRAR := nPedCom
		SZ7->Z7_SELEC   := IIF(nPedCom <> 0,"X"," ")
		
		MsUnlock()
		
		
		If	_ChaveAud=SZ7->Z7_SIMIL+SZ7->Z7_EIS
			
			GeraAud("")
			GeraAud("Abaixo algumas gravacoes no SZ7 que envolvem calculos")
			GeraAud("")
			GeraAud("Apenas para relembrar todos os calculos sao efetuados durante a Etapa 9 onde ocorre a classificacao do Vetor durante ")
			GeraAud("o Processo de FECHAMENTO MENSAL DA PLANILHA.")
			GeraAud("Nesta Etapa apenas sera efetuado calculos que dependem do Saldo do Estoque - ou seja sao calculos que devem  ocorrer ")
			GeraAud("durante toda a Geracao da Planilha, pois dependem do Estoque Atual.")
			GeraAud("")
			GeraAud("Estes calculos sao:  - Lote Automatico para Metodo 3 ")
			GeraAud("                     - Cobertura da Malha            ")
			GeraAud("                     - Cobertura do Disponivel       ")
			GeraAud("")
			GeraAud("Para iniciar o processo de Calculos iremos:")
			
			
			If  cSistema = "03"
				
				GeraAud("")
				GeraAud("Definir o Lote Automatico em funcao deste Eis utilizar o Metodo 3.")
				GeraAud("")
				GeraAud("Saldo da Malha (Somente dos Itens de Compra do Simil")
				GeraAud("                 - Malha  (      Disponivel        +     PC   ) ")
				GeraAud("                 -        (Fisico-Empenho-Reserva) + (SC+PC+OP) ")
				GeraAud("")
				GeraAud("Lote Automatico     =  Ponto de Pedido   - Saldo da Malha (Somente dos Itens de Compra do Simil")
				GeraAud("                                         - Malha  (      Disponivel        +     PC     - a Faturar ) ")
				GeraAud("                                         -        (Fisico-Empenho-Reserva) + (SC+PC+OP) - a Faturar ) ")
				GeraAud(" ")
				//GeraAud("Lote Automatico     =  "+str(aSimil[nPosSimil][21])+"  -  ("+str(aSimil[nPosSimil][32])+ " - "+str(aSimil[nPosSimil][46])+")")
				GeraAud("Lote Automatico     =  "+str(aSimil[nPosSimil][21])+"  -  ("+str(aSimil[nPosSimil][32])+")") //+ " - "+str(aSimil[nPosSimil][46])+")")
				GeraAud("Lote Automatico     =  "+str(aSimil[nPosSimil][20]))
				GeraAud(" ")
				GeraAud("Em seguida este lote sera regravado em todo o SB1")
				
			Endif
			
			GeraAud(" ")
			GeraAud("Caso o Sistema  utilizado seja 2 ou 3 utilizaremos o Consumo Medio Difernte de Zero")
			GeraAud("o qual foi gravado no SB1 no campo B1_X_CODIF derivado do calculo de   ")
			GeraAud("Total de Saidas no Periodo / numero de Ocorrencias = "+STR(SB1->B1_X_CODIF))
			GeraAud(" ")
			GeraAud("Para os demais Sistemas utilizaremos Consumo Medio Normal ")
			GeraAud("o qual foi gravado no SB1 no campo B1_X_CONSM derivado do calculo de   ")
			GeraAud("Total de Saidas no Periodo / numero de Meses do Parametro = "+STR(SB1->B1_X_CONSM))
			GeraAud(" ")
			
			GeraAud("Logo o Sistema utilizado e "+cSistema+" e o Consumo sera de "+str(nConsMedio))
			GeraAud("")
			GeraAud(" COBERTURA DA MALHA (IC) Item de Compra =  (Fisico - Reserva - Empenho - a Faturar + Transito)  / Consumo Medio no Periodo ")
			GeraAud(" COBERTURA DA MALHA (IC) Item de Compra =  ("+ str(aSimil[nPosSimil][32])+") / "+str(nConsMedio))
			GeraAud(" COBERTURA DA MALHA (IC) Item de Compra = "+ str(SZ7->Z7_CB_MALH))
			GeraAud("")
			GeraAud(" COBERTURA DO DISPONIVEL (IC) Item de Compra = Fisico  / Consumo Medio no Periodo ")
			GeraAud(" COBERTURA DO DISPONIVEL (IC) Item de Compra = "+str(aSimil[nPosSimil][37])+" / "+str(nConsMedio))
			GeraAud(" COBERTURA DO DISPONIVEL (IC) Item de Compra = "+str(SZ7->Z7_CB_DISP))
			GeraAud("")
			GeraAud(" COBERTURA DA MALHA (NC) Item Nao Compra =  (Fisico - Reserva - Empenho - a Faturar + Transito)  / Consumo Medio no Periodo ")
			GeraAud(" COBERTURA DA MALHA (NC) Item Nao Compra =  ("+ str(aSimil[nPosSimil][33])+") / "+str(nConsMedio))
			GeraAud(" COBERTURA DA MALHA (NC) Item Nao Compra =   "+ str(SZ7->Z7_CN_MALH))
			GeraAud("")
			GeraAud(" COBERTURA DO DISPONIVEL (NC) Item Nao Compra =  Fisico  / Consumo Medio no Periodo ")
			GeraAud(" COBERTURA DO DISPONIVEL (NC) Item Nao Compra =  "+str(aSimil[nPosSimil][36])+" / "+str(nConsMedio))
			GeraAud(" COBERTURA DO DISPONIVEL (NC) Item Nao Compra = "+str(SZ7->Z7_CN_DISP))
			GeraAud("")
			GeraAud("")
			GeraAud("Apenas iremos destacar o processo de calculo da quantidade a ser comprada ")
			GeraAud("")
			GeraAud("//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿")
			GeraAud("//|Importante: Lote Praticado  mudou para  Pedido de Compra                  ³")
			GeraAud("//|            Gatilho         mudou para  Ponto de Pedido Automatico        ³")
			GeraAud("//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ")
			GeraAud("")
			GeraAud("")
			GeraAud("if  nPtman >= 0   // Quanto o Lote Manual e < 0 nao gerar PGMM")
			GeraAud("")
			GeraAud("   	If nLtMan = 0 ")
			GeraAud("")
			GeraAud("				if  nPtman > 0 ")
			GeraAud("")
			GeraAud("						    If nSldMalha < nPtman ")
			GeraAud("")
			GeraAud("   							   nPedCom  := nLtAut")
			GeraAud("")
			GeraAud("   						Endif   ")
			GeraAud("")
			GeraAud("       		 Else  nPtman = 0")
			GeraAud("")
			GeraAud("		    				 If nSldMalha < nPtAut")
			GeraAud("")
			GeraAud("   	    					   nPedCom  := nLtAut")
			GeraAud("")
			GeraAud("          					  Endif")
			GeraAud("")
			GeraAud("      			 Endif")
			GeraAud("")
			GeraAud("       Else nLtMan > 0 ")
			GeraAud("")
			GeraAud("	   			 if  nPtman > 0 ")
			GeraAud("")
			GeraAud("		  			 		 If nSldMalha < nPtman ")
			GeraAud("")
			GeraAud("   			  				  nPedCom  := nLtMan")
			GeraAud("")
			GeraAud("   						Endif   ")
			GeraAud("")
			GeraAud("      			 Else  nPtman = 0")
			GeraAud("")
			GeraAud("		   					If nSldMalha < nPtAut")
			GeraAud("")
			GeraAud("   			  				 nPedCom  := nLtMan")
			GeraAud("")
			GeraAud("           				 Endif")
			GeraAud("")
			GeraAud("       		 Endif")
			GeraAud("")
			GeraAud("  	     Endif")
			GeraAud("")
			GeraAud("Endif")
			
			GeraAud("Para nosso exemplo:")
			GeraAud("")
			
			GeraAud("nLtMan    :="+str(SZ7->Z7_LTMAN))
			GeraAud("nLtAut    :="+str(SZ7->Z7_LTAUT))
			GeraAud("nPtman    :="+str(SZ7->Z7_PTMAN))
			GeraAud("nPtAut    :="+str(SZ7->Z7_PTAUT))
			GeraAud("nSldMalha :="+str(SZ7->Z7_PEDCOMP))
			GeraAud("nPedCom   :="+str(SZ7->Z7_COMPRAR))
			GeraAud("")
			
		Endif
		
		
	Endif
	
Next



For nPosSimil := 1 to Len(aSimil)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Regua 1                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	U_IncPG1T( "Gerando SZ8 " , nCount , cTimeIni , .T. , NIL , 05 )
	
	DbSelectArea("SZ7")      // Garante a Integridade entre Z7 e Z8
	DbSetOrder(1)            // Filial+Simil+Eis
	If  DbSeek(xFilial("SZ7")+aSimil[nPosSimil][01]+aSimil[nPosSimil][02]) // simil + Eis
		
		DbSelectArea("SB1")
		DbOrderNickname("B1SIMIL") // Filial+Simil+Eis
		If DbSeek(xFilial("SB1")+aSimil[nPosSimil][01]+aSimil[nPosSimil][02]) // simil + Eis
			
			nS_PedCom := 0
			
			While !SB1->(EOF()) .and. aSimil[nPosSimil][01]+aSimil[nPosSimil][02] = ;
				( SB1->B1_X_SIMIL +  SB1->(B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10));
				.AND. xFilial("SB1") == SB1->B1_FILIAL
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Dados para processamento                                               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cCodiSku      := SB1->B1_COD
				cCdSimil      := SB1->B1_X_SIMIL
				cCodiEis      := SB1->(B1_X_EIS01+B1_X_EIS02+B1_X_EIS03+B1_X_EIS04+B1_X_EIS05+B1_X_EIS06+B1_X_EIS07+B1_X_EIS08+B1_X_EIS09+B1_X_EIS10)
				nPtMan        := SB1->B1_X_PTMAN          //  Ponto de Pedido Manual
				nLtMan        := SB1->B1_X_LTMAN          //  Lote Automatico Manual
				cAuxiliar     := SB1->(B1_X_LMN+B1_X_PQR+B1_X_NEOIL+B1_X_XYZ+B1_X_123+B1_X_ABC)
				
				nPedcom       := INT((SZ7->Z7_COMPRAR * SB1->B1_X_SHARE) / 100)
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Posicionando aScan[Sku]                                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nPosSku  := aScan( aSKU , {|x| x[1] == cCodiSku })
				
				
				if nPosSku = 0
					
					Aviso("ATENCAO", "Foi incluido um novo produto durante o processamento no SB1 com o codigo "+SB1->B1_COD+;
					" e o mesmo nao sera considerado neste processamento.",{"&Ok"})
					
				Else
					
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Inicia Processo de Gravacao do SZ8 - Por Sku                              ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					
					DbSelectArea("SZ8")
					Reclock("SZ8",.T.)
					SZ8->Z8_FILIAL	:= xFilial("SZ8")           // C	2
					SZ8->Z8_SIMIL	:= SB1->B1_X_SIMIL          //C	6
					//SZ8->Z8_SBSIM 	:= SB1->B1_X_SBSIM          //C	6
					SZ8->Z8_SELEC   := IIF(nPedCom <> 0,"X"," ")
					SZ8->Z8_EIS     := cCodiEis
					SZ8->Z8_EIS01	:= SB1->B1_X_EIS01          //C	2
					SZ8->Z8_EIS02	:= SB1->B1_X_EIS02          //C	2
					SZ8->Z8_EIS03	:= SB1->B1_X_EIS03          // 	C	2
					SZ8->Z8_EIS04	:= SB1->B1_X_EIS04          // 	C	2
					SZ8->Z8_EIS05	:= SB1->B1_X_EIS05          // 	C	2
					SZ8->Z8_EIS06	:= SB1->B1_X_EIS06          // 	C	2
					SZ8->Z8_EIS07	:= SB1->B1_X_EIS07          // 	C	2
					SZ8->Z8_EIS08	:= SB1->B1_X_EIS08          // 	C	2
					SZ8->Z8_EIS09	:= SB1->B1_X_EIS09          // 	C	2
					SZ8->Z8_EIS10	:= SB1->B1_X_EIS10          // 	C	2
					SZ8->Z8_SKU		:= SB1->B1_COD              // C	15
					SZ8->Z8_REFER	:= SB1->B1_X_REFER          // 	C	17
					SZ8->Z8_SUFIXO	:= SB1->B1_X_SUFIX          // 	C	10
					SZ8->Z8_MARCA	:= SB1->B1_X_MARCA          // 	C	4
					SZ8->Z8_CDTR	:= SB1->B1_ORIGEM           //SB1->B1_X_ITCPR          //SB1->B1_ORIGEM  //   B1_X_NC_IM
					SZ8->Z8_SHARE  := SB1->B1_X_SHARE
					SZ8->Z8_ITCPR 	:= SB1->B1_X_ITCPR
					SZ8->Z8_CONSPER:= SB1->B1_X_QTDSK          // Consumo da Sku o campo b1_x_qtdsa tras o total por Eis
					SZ8->Z8_CUSMED := SZ7->Z7_CONSMED	        // Custo Padrao Medio      ++(Z9_QTDSAI * SZ9->Z9_VLRCM) / ++Z9_QTDSAI
					SZ8->Z8_LMN    := SZ7->Z7_LMN              //  Giro class  //
					
					SZ8->Z8_SLDMALH := aSKU[nPosSku][06]
					SZ8->Z8_PEDCOMP := aSKU[nPosSku][02]    // Malha - Saldo Disponivel + PC) - Item nao Compra
					SZ8->Z8_NAOCOMP := aSKU[nPosSku][03]    // Malha - Saldo Disponivel + PC) - Item Compra
					SZ8->Z8_DISPONI := aSKU[nPosSku][05]    // Malha - Disponivel
					SZ8->Z8_SLDTRAN := aSKU[nPosSku][11]    // Malha - Transito (sc+pc+op)
					SZ8->Z8_RESERVA := aSKU[nPosSku][10]    // Malha - Reserva
					SZ8->Z8_AFATURA := aSKU[nPosSku][12]    // Malha - a Faturar
					SZ8->Z8_SLDEMPE := aSKU[nPosSku][04]    // Malha - Empenhado
					SZ8->Z8_ACLASS	 := aSKU[nPosSku][15]    // Malha - a Classificar
					
					SZ8->Z8_COMPRAR := nPedcom
					
					MsUnlock()
					
					nS_PedCom += SZ8->Z8_COMPRAR
					
				Endif
				
				DbSelectArea("SB1")
				SB1->(DBSKIP())
				
			Enddo
			
			
			
			If nS_PedCom = 0  .and. SZ7->Z7_COMPRAR <> 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Nao Conseguiu Lancar em nenhuma SKU a quantidade a comprar                |
				//³este fato esta ligado ao share que nao deve estar preenchido              |
				//³para nehum produto deste simil + eis                                      |
				//³Logo estou zerando tambem a quandide por simil + eis e gerando log.       |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				GeraLog("Para o Simil/Eis "+SZ7->Z7_SIMIL+"/"+SZ7->Z7_EIS+" nao existe nenhum produto com SHARE desta forma a quantidade "+str(SZ7->Z7_COMPRAR)+" nao foi associada a nenhum produto.")
				
				DbSelectArea("SZ7")
				(Reclock("SZ7",.F.))
				SZ7->Z7_COMPRAR := nS_PedCom
				SZ7->Z7_SELEC   := IIF(nS_PedCom <> 0,"X"," ")
				(MSUNLOCK())
				
			Else
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Analisa se durante o processo acima ocorreu alguma divergencia durante    |
				//³o rateamento da quantidade a comprar por SKU.                             |
				//³Caso tenha ocorrido lanca a diferenca no primeiro item que tiver          |
				//³Z8_COMPRAR diferente de ZERO.                                             |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				if SZ7->Z7_COMPRAR - nS_PedCom  <> 0
					DbSelectArea("SZ8")
					DbSetOrder(1)       // Filial + Simil + Eis + Sku
					If DbSeek(xFilial("SZ8")+aSimil[nPosSimil][01]+aSimil[nPosSimil][02])
						While SZ8->(EOF()) .and. aSimil[nPosSimil][01]+aSimil[nPosSimil][02] == SZ8->(Z8_SIMIL + Z8_EIS);
							.AND. xFilial("SZ8") == SZ8->Z8_FILIAL
							If Z8_COMPRAR  <> 0
								Reclock("SZ8",.F.)
								SZ8->Z8_COMPRAR := SZ8->Z8_COMPRAR + (SZ7->Z7_COMPRAR - nS_PedCom)
								MsUnLock()
								EXIT
							Endif
							SZ8->(DBSKIP())
						Enddo
					Endif
				Endif
				
			Endif
			
		Endif
		
	Endif
	
Next


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza parametro c/ ultima Geracao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SETMV("MV_DTGPLAN",dDataBase)

If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Etapa 11 - Finalizacao "+time())
	GeraAud("")
	
Endif


Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ Ped_Comp º Autor ³                    º Data ³  18/02/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Retorna a quantidade a ser comprada por EIS                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Multitek                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
User Function Ped_Comp(nLtMan,nLtAut,nPtman,nPtAut,nSldMalha)
Local  nPedCom := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//|Importante: Lote Praticado  mudou para  Pedido de Compra                  ³
//|            Gatilho         mudou para  Ponto de Pedido Automatico        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// Com base na Logica abaixo o
// Lote Praticado pode ser 0(zero) quando o Saldo da Malha
// for maior que o Ponto de Pedido Automatico e
// Saldo da Malha for maior que o Ponto de Pedido Manual


if  nPtman >= 0   // Quanto o Lote Manual e < 0 nao gerar PGMM
	
	If nLtMan = 0
		
		if  nPtman > 0
			
			If nSldMalha < nPtman
				nPedCom  := nLtAut
			Endif
			
		ElseIf  nPtman = 0
			
			If nSldMalha < nPtAut
				nPedCom  := nLtAut
			Endif
			
		Endif
		
	ElseIf nLtMan > 0
		
		if  nPtman > 0
			
			If nSldMalha < nPtman
				nPedCom  := nLtMan
			Endif
			
		ElseIf  nPtman = 0
			
			If nSldMalha < nPtAut
				nPedCom  := nLtMan
			Endif
			
		Endif
		
	Endif
	
Endif


Return(nPedCom)



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ EisConct º Autor ³                    º Data ³  18/02/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Concatena o codigo Eis                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Multitek                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
User Function EisConct(cEisCod1,cEisCod2,cEisCod3,cEisCod4,cEisCod5,;
cEisCod6,cEisCod7,cEisCod8,cEisCod9,cEisCod10)

Local aResult   := {}
Local cEisDes1  := ""
Local cEisDes2  := ""
Local cEisDes3  := ""
Local cEisDes4  := ""
Local cEisDes5  := ""
Local cEisDes6  := ""
Local cEisDes7  := ""
Local cEisDes8  := ""
Local cEisDes9  := ""
Local cEisDes10 := ""
Local cEis      := ""
Local cCodEIS  := cEisCod1+cEisCod2+cEisCod3+cEisCod4+cEisCod5+;
cEisCod6+cEisCod7+cEisCod8+cEisCod9+cEisCod10


DbSelectArea("Z01")
If Dbseek(xFilial("Z01")+cEisCod1)
	cEisDes1 := alltrim(Z01->Z01_DESC01)+space(1)
Endif

DbSelectArea("Z02")
If Dbseek(xFilial("Z02")+cEisCod1+cEisCod2)
	cEisDes2 := alltrim(Z02->Z02_DESC02)+space(1)
Endif

DbSelectArea("Z03")
If Dbseek(xFilial("Z03")+cEisCod1+cEisCod2+cEisCod3)
	cEisDes3 := alltrim(Z03->Z03_DESC03)+space(1)
Endif

DbSelectArea("Z04")
If Dbseek(xFilial("Z04")+cEisCod1+cEisCod2+cEisCod3+cEisCod4)
	cEisDes4 := alltrim(Z04->Z04_DESC04)+space(1)
Endif

DbSelectArea("Z05")
If Dbseek(xFilial("Z05")+cEisCod1+cEisCod2+cEisCod3+cEisCod4+cEisCod5)
	cEisDes5 := alltrim(Z05->Z05_DESC05)+space(1)
Endif

DbSelectArea("Z06")
If Dbseek(xFilial("Z06")+cEisCod1+cEisCod2+cEisCod3+cEisCod4+cEisCod5+cEisCod6)
	cEisDes6 := alltrim(Z06->Z06_DESC06)+space(1)
Endif

DbSelectArea("Z07")
If Dbseek(xFilial("Z07")+cEisCod1+cEisCod2+cEisCod3+cEisCod4+cEisCod5+cEisCod6+cEisCod7)
	cEisDes7 := alltrim(Z07->Z07_DESC07)+space(1)
Endif

DbSelectArea("Z08")
If Dbseek(xFilial("Z08")+cEisCod1+cEisCod2+cEisCod3+cEisCod4+cEisCod5+cEisCod6+cEisCod7+cEisCod8)
	cEisDes8 := alltrim(Z08->Z08_DESC08)+space(1)
Endif

DbSelectArea("Z09")
If Dbseek(xFilial("Z09")+cEisCod1+cEisCod2+cEisCod3+cEisCod4+cEisCod5+cEisCod6+cEisCod7+cEisCod8+cEisCod9)
	cEisDes9 := alltrim(Z09->Z09_DESC09)+space(1)
Endif

DbSelectArea("Z10")
If Dbseek(xFilial("Z10")+cEisCod1+cEisCod2+cEisCod3+cEisCod4+cEisCod5+cEisCod6+cEisCod7+cEisCod8+cEisCod9+cEisCod10)
	cEisDes10 := alltrim(Z10->Z10_DESC10)+space(1)
Endif

cEis := cEisDes1+" "+cEisDes2+" "+cEisDes3+" "+cEisDes4+" "+cEisDes5+" "+;
cEisDes6+" "+cEisDes7+" "+cEisDes8+" "+cEisDes9+" "+cEisDes10

AADD(aResult,{cCodEIS,cEis})

Return(aResult)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ AjustaSX1    ³Autor ³  Alice Y Yamamoto    ³Data³ 22.11.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Ajusta perguntas do SX1                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AjustaSX1()

Local aPerg := {}
Local cPerg := "PLANI1"+SPACE(4), nI, nPerg


//aadd(aPerg,{"01","Mes            ?","Mes            ?","Mes            ?","mv_ch1","N",2,0,0,"G","U_VALMES(MV_PAR01)","MV_PAR01","","","","","","","","","","","","","","","","","","","","","","","","","",""})
//aadd(aPerg,{"02","Ano            ?","Ano            ?","Ano            ?","mv_ch2","N",4,0,0,"G","U_VALANO(MV_PAR02)","MV_PAR02","","","","","","","","","","","","","","","","","","","","","","","","","",""})

aadd(aPerg,{"01","Processar      ?","Processar      ?","Processar      ?","mv_ch1","N",1,0,0,"C","","MV_PAR01","Fechamento     ","Fechamento     ","Fechamento     ","","Reprocessamento","Reprocessamento","Reprocessamento","","","","","","","","","","","","","","","","","","",""})
aadd(aPerg,{"02","Analisar Simil ?","Processar      ?","Processar      ?","mv_ch2","C",06,0,0,"G","","MV_PAR02","","","","","","","","","","","","","","","","","","","","","","","","","",""})
aadd(aPerg,{"03","Analisar Eis   ?","Processar      ?","Processar      ?","mv_ch3","C",20,0,0,"G","","MV_PAR03","","","","","","","","","","","","","","","","","","","","","","","","","",""})

nPerg := Len(aPerg)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso nao exista a Pergunta a mesma sera criada.         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

dbSelectArea("SX1")
dbSetOrder(1)
For nI := 1 To nPerg
	If ! dbSeek(cPerg+aPerg[nI,1])
		RecLock("SX1",.T.)
		Replace X1_GRUPO	With cPerg
		Replace X1_ORDEM	With aPerg[nI,01]
		Replace X1_PERGUNT	With aPerg[nI,02]
		Replace X1_PERSPA	With aPerg[nI,03]
		Replace X1_PERENG	With aPerg[nI,04]
		Replace X1_VARIAVL	With aPerg[nI,05]
		Replace X1_TIPO		With aPerg[nI,06]
		Replace X1_TAMANHO	With aPerg[nI,07]
		Replace X1_DECIMAL  With aPerg[nI,08]
		Replace X1_PRESEL   With aPerg[nI,09]
		Replace X1_GSC		With aPerg[nI,10]
		Replace X1_VALID    With aPerg[nI,11]
		Replace X1_VAR01	With aPerg[nI,12]
		Replace X1_DEF01	With aPerg[nI,13]
		Replace X1_DEFSPA1	With aPerg[nI,14]
		Replace X1_DEFENG1	With aPerg[nI,15]
		Replace X1_CNT01	With aPerg[nI,16]
		Replace X1_DEF02	With aPerg[nI,17]
		Replace X1_DEFSPA2	With aPerg[nI,18]
		Replace X1_DEFENG2	With aPerg[nI,19]
		MsUnlock()
	EndIf
Next

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ DataFecha    ³Autor ³                      ³Data³ 05.07.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Visa determinar as datas validas para Processamento baseado³±±
±±³          ³ no SZ9      (Historico por Simil + Eis)                    ³±±
±±³          ³    Index 2  (SZ9->Z9_FILIAL+SZ9->Z9_ANO+SZ9->Z9_MES)       ³±±
±±³          ³                                                            ³±±
±±³Retorna   ³ Matriz com duas datas validas para processamento           ³±±
±±³          ³                                                            ³±±
±±³          ³ [1]   Esta posicao e exclusiva para as datas do Reprocessam³±±
±±³          ³       (Reprocessamento ultimo Mes)                         ³±±
±±³          ³ [1][1]Data Final do Reprocessamento;                       ³±±
±±³          ³ [1][2]Data Inicio do Mes para Fechamento.                  ³±±
±±³          ³ [1][3]Data Inicio do Historico para Fechamento.            ³±±
±±³          ³ [1][4]Data Inicio consulta do Giro com base na             ³±±
±±³          ³       data de Reprocessamento;                             ³±±
±±³          ³                                                            ³±±
±±³          ³ [2]   Esta posicao e exclusiva para as datas do Fechamento ³±±
±±³          ³       (Novo Fechamento)                                    ³±±
±±³          ³ [2][1]Data Final do Fechamento;                            ³±±
±±³          ³ [2][2]Data Inicio do Mes para Fechamento.                  ³±±
±±³          ³ [2][3]Data Inicio do Historico para Fechamento.            ³±±
±±³          ³ [2][4]Data Inicio consulta do Giro com base na             ³±±
±±³          ³       data de Fechamento;                                  ³±±
±±³          ³                                                            ³±±
±±³          ³ [3]   Datas Informativas                                   ³±±
±±³          ³ [3][1]Data do Ultimo Fechamento   (Dia/Mes/Ano)            ³±±
±±³          ³ [3][2]Data novo Fechamento        (Dia/Mes/Ano)+Reprocess. ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function DataFecha()
Local nPgmPeri := GETMV("MV_PGMPERI") // Pediodo de Fechamento p/ Leitura dos Historicos.
Local nPgmGiro := GETMV("MV_PGMGIRO") // Pediodo de Fechamento p/ Leitura dos Historicos.

Local cAno1    := ""
Local cMes1    := ""
Local dPer1    := CTOD("")   // Data Inicial do Reprocessamento

Local cAno2    := ""
Local cMes2    := ""

Local dIni_Mes := CTOD("")
Local dIni_Hist:= Ctod("")
Local dIni_Giro:= Ctod("")
Local dFim     := Ctod("")
Local dDtProc2 := Ctod("")
Local dDtGiro2 := Ctod("")
Local dDataFech:= Ctod("")

Local aMatriz  := {}


DbselectArea("SZ9")   // Historico por Simil + Eis
DbSetOrder(2)
DbGobottom()

cAno1  :=  SUBSTR(SZ9->Z9_ANO,3,2)  // (4 DIGITOS)
cMes1  :=  SZ9->Z9_MES               // (2 DIGITOS)

If EmptY(cAno1)                            // Apenas para teste quando base estiver vazia
	cAno1 := "2004"
	cMes1 := "12"
	cDia1 := "01"
Endif


//
// REPROCESSAMENTO
//

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Adiciona a matriz posicao [1] dados do Reprocessamento³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// Define o Primeiro dia do Mes
dIni_Mes   := CTOD("01"+"/"+cMes1+"/"+cAno1)   // Data Inicial do Reprocessamento
// do Mes ( Reprocessamento )
// Define o Ultimo dia do Mes para processamento
dFim       := LastDay(Ctod("01/"+cMes1+"/"+cAno1))
// Define data Inicial para processamento do Historico (com base no Reprocessamento)
dDtProc2   := dFim - (nPgmPeri * 30)
dIni_Hist  := Ctod("01/"+STRZERO(Month(dDtProc2),2)+"/"+STR(Year(dDtProc2),4))
// Define data Inicial para processamento do Giro      (com base no Reprocessamento)
dDtGiro2   := dFim - (nPgmGiro * 30)
dIni_Giro  := Ctod("01/"+STRZERO(Month(dDtGiro2),2)+"/"+STR(Year(dDtGiro2),4))


aadd(aMatriz,{dFim,dIni_Mes,dIni_Hist,dIni_Giro})         // Reprocessamento



//
//  DATA DO NOVO FECHAMENTO
//

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Adiciona a matriz posicao [2] dados novo Fechamento   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
if Val(cMes1) = 12
	cAno2 := str(Val(cAno1)+1,4)
	cMes2 := "01"
Else
	cAno2 := cAno1
	cMes2 := strzero(Val(cMes1)+1,2)
Endif


// Define o Primeiro dia do Mes
dIni_Mes:= CTOD("01"+"/"+cMes2+"/"+cAno2) // Data Inicial do Processamento
// do Mes ( Processamento )

// Define o Mes para processamento
dFim       := LastDay(Ctod("01/"+cMes2+"/"+cAno2))

// Define data Inicial para processamento do Historico
dDtProc2   := dFim - (nPgmPeri * 30)
dIni_Hist  := Ctod("01/"+STRZERO(Month(dDtProc2),2)+"/"+STR(Year(dDtProc2),4))

// Define data Inicial para processamento do Giro
dDtGiro2   := dFim - (nPgmGiro * 30)
dIni_Giro   := Ctod("01/"+STRZERO(Month(dDtGiro2),2)+"/"+STR(Year(dDtGiro2),4))

aadd(aMatriz,{dFim,dIni_Mes,dIni_Hist,dIni_Giro})         // Fechamento


// Data da Ultima Geracao da Planilha
dFim       := GetMV("MV_DTGPLAN")
// Data novo Fechamento
dIni_Mes   := dFim  + GetMV("MV_TMPREPR")

aadd(aMatriz,{dFim,dIni_Mes,dIni_Hist,dIni_Giro})         // Fechamento

Return(aMatriz)







/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³_fGiroGrvZ9 ºAutor  ³                  º Data ³  05/07/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Encaminhando/Dimensionando os Estoques (Ponto de Pedido e   º±±
±±º          ³Lote Automatico)                                            º±±
±±º          ³                                                            º±±
±±º          ³aSimil   // Vetor Simil + Eis                               º±±
±±º          ³[01]     // Simil               [*] index                   º±±
±±º          ³[02]     // Eis                 [*] index                   º±±
±±º          ³[03]     // Qtde Vendida                                    º±±
±±º          ³[04]     // Tamanho do Lote                                 º±±
±±º          ³[05]     // Custo Total                                     º±±
±±º          ³[06]     // Qtde Media por Saida                            º±±
±±º          ³[07]     // Ocorrencias                                     º±±
±±º          ³[08]     // Perc.Class                                      º±±
±±º          ³[09]     // ABC                                             º±±
±±º          ³[10]     // Qtde de Apanhes                                 º±±
±±º          ³[11]     // PQR                                             º±±
±±º          ³[12]     // Neoil                                           º±±
±±º          ³[13]     // Tmea                                            º±±
±±º          ³[14]     // SomaSaidasPer2                                  º±±
±±º          ³[15]     // Desvio Padrao                                   º±±
±±º          ³[16]     // Class 123                                       º±±
±±º          ³[17]     // Class XYZ                                       º±±
±±º          ³[18]     // Nacimp                                          º±±
±±º          ³[19]     // LT                                              º±±
±±º          ³[20]     // LoteAut                                         º±±
±±º          ³[21]     // Ponto de Pedido                                 º±±
±±º          ³[22]     // EstSeg                                          º±±
±±º          ³[23]     // Metodo utilizado                                º±±
±±º          ³[24]     // Acum. Sai                                       º±±
±±º          ³[25]     // Saldo                                           º±±
±±º          ³[26]     // Acum.Dif.Dias                                   º±±
±±º          ³[27]     // Acum.Saldo.Dias                                 º±±
±±º          ³[28]     // Acum.Saldo.Quad                                 º±±
±±º          ³[29]     // Giro                                            º±±
±±º          ³[30]     // ClassGiro                                       º±±
±±º          ³[31]     // Quantidade Lote Praticado                       º±±
±±º          ³[32]     // Malha - Disp + PC (Item de Compra)              º±±
±±º          ³[33]     // Malha - Dipo + PC (Item nao Compra)             º±±
±±º          ³[34]     // Malha - Empenhado                               º±±
±±º          ³[35]     // Malha - Disponivel (Item de Compra)             º±±
±±º          ³[36]     // Matriz (Disp + PC)                              º±±
±±º          ³[37]     // Filial (Disp + PC)                              º±±
±±º          ³[38]     // Malha  (Em Poder de 3)                          º±±
±±º          ³[39]     // Malha  (3 EM Nosso Poder)                       º±±
±±º          ³[40]     // Malha  (Quantidade reservad                     º±±
±±º          ³[41]     // Malha  (Prevista entrar no est.via Compras ou Opº±±
±±º          ³[42]     // Malha  (Quant.de Ped. de Venda nao Lib.p/Faturarº±±
±±º          ³[43]     // Malha - Saldo em Transito                       º±±
±±º          ³[44]     // Malha - Disponivel (Item Nao Compra)            º±±
±±º          ³[45]     // Matriz- (Disponivel - somente itens de compra)  º±±
±±º          ³[46]     // Malha   a Faturar  (Item de Compra)             º±±
±±º          ³[47]     // Matriz  Disponivel (Item Nao Compra)            º±±
±±º          ³[48]     // Matriz  Empenhado  (Item Nao Compra)            º±±
±±º          ³[49]     // Malha   a Faturar  (Item Nao Compra)            º±±
±±º          ³[50]     // Reservado ao Giro - AcmEntr                     º±±
±±º          ³[51]     // Reservado ao Giro - AcmSaida                    º±±
±±º          ³[52]     // Reservado ao Giro - Saldo                       º±±
±±º          ³[53]     // Reservado ao Giro - AcmSld                      º±±
±±º          ³[54]     // Reservado ao Giro - Acm_dDias                   º±±
±±º          ³[55]     // Reservado ao Giro - Dias AcmSld                 º±±
±±º          ³[56]     // Reservado ao Giro - SaldoMedio                  º±±
±±º          ³[57]     // Reservado ao Giro - Giro                        º±±
±±º          ³[58]     // Saldo Fisico do Fechamento base SB9             º±±
±±º          ³                                                            º±±
±±º          ³Desenvolvimento conf. Documento PGMM0001                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³Multitek                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function _fGiroGrvZ9(aSimil,aSku)

Local _nI          := 0
Local _aArea       := GetArea()
Local _aRetVetor   := {}
Local _nAcm_Dias   := 0
Local _nDias       := 0
Local _cAno        := ""
Local _cMes        := ""
Local cTimeIni  := Time()


//-> Variaveis referente a chamada do Giro
Local __cCodigo    := ""
Local __cIdent     := "E"
Local __dDataIni   := dIniMes
Local __dDataFim   := dFimProc
Local __lRegua     := .f.
Local __aSerieM    := {}
Local __aSerieD    := {}
Local __lRetVetorG := .t.
Local nCount       :=0
Local cChave       := ""
Local cQuery       := ""
Local lQuery       :=.T.
Local cAliasSZ9    := ""
Local aStruSD2     := {}
Local cCdSimil     := ""
Local cCodiEis     := ""


_cAno := PadL(Year(__dDataIni),4,"0")
_cMes := PadL(Month(__dDataIni),2,"0")

If !Empty(_ChaveAud)
	GeraAud("")
	GeraAud("Etapa 6 - Gravacao do Giro Mensal no SZ9 apos analise do Mes")
	GeraAud("")
	GeraAud("Etapa 6 - Inicio do Processamento "+time())
	GeraAud("")
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Start a Regua 1                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
U_BarG1Set( nCount )

cChave := xFilial("SZ9") + _cAno + _cMes


U__fPGMMGiro(__dDataIni, __dDataFim , __lRegua, __aSerieM,__aSerieD,__lRetVetorG ,aSimil,aSku)


For _nK := 1 To Len(aSimil)
	
	cCdSimil  :=  aSimil[_nK][01]
	cCodiEis  :=  aSimil[_nK][02]
	
	_nDias       := aSimil[_nK][54]
	_nAcm_Dias   := aSimil[_nK][55]
	
	cChave := xFilial("SZ9") + _cAno + _cMes
	
	DbSelectArea("SZ9")
	DbSetOrder(2)                   // Filial+Ano+Mes+Simil+Eis
	If DbSeek(cChave+cCdSimil+cCodiEis)
		RecLock("SZ9",.f.)
		SZ9->Z9_AC_S_D   := _nAcm_Dias    //-> Acumuladores Saldo x Dia
		SZ9->Z9_ACMDDIA  := _nDias        //-> Qtd de Dias no Mes
		SZ9->( MsUnlock() )
	EndIf
	
	If _ChaveAud == cCdSimil+cCodiEis
		GeraAud("")
		GeraAud("Alimentando os campos ACUMULADORES:")
		GeraAud("SZ9->Z9_AC_S_D   := "+Str(_nAcm_Dias)+" ")
		GeraAud("SZ9->Z9_ACMDDIA  := "+Str(_nDias) + " " )
		GeraAud("")
	Endif
	
Next _nK



RestArea(_aArea)


If !Empty(_ChaveAud)
	
	GeraAud("")
	GeraAud("Etapa 06 - Finalizacao "+time())
	GeraAud("")
	
Endif

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ RetString  ³ autor ³                     ³ Data ³ 01/07/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Retorna a String correta dos Almox. para uso nos Select.   ³±±
±±³ÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ³±±
±±³Parametro ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function RetString( cAlmox )

Local _cStrAlmox:= ""
Local _uString  := _cParAlmox:= cAlmox
Local aElem     := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Trata o parametro para poder ser utilizado pelas Query's               ³
//³o conteudo fica quardado na variavel _cStrAlmox                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While Len(_uString) > 0             // necessario extrair outras formas ja esta
	AADD(aElem,U_Parse(@_uString))    // pronto.
End
_cStrAlmox := ""
For nY := 1 to len(aElem)
	_cStrAlmox := _cStrAlmox + "'" + aElem[nY] + "'"
	If nY <> Len(aElem)
		_cStrAlmox := _cStrAlmox + ","
	Endif
Next

IF _cStrAlmox = ""
	_cStrAlmox := " "
Endif

Return (_cStrAlmox)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ Parse      ³ autor ³                     ³ Data ³ 01/07/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Tratamento utilizado para os preparar Armazens             ´±±
±±³          ³ para serem inseridos na Query.                             ´±±
±±³ÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ³±±
±±³Parametro ³                                                            ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function Parse(_uString)
Local nPos
Local xRet
Local cVar
Local cExecuta := ""

iF  AT(";",_uString) = 0
	cExecuta := substr(alltrim(_uString),1,2)
	_uString := ""
Else
	iF  AT(";",_uString) > 0
		nPos := AT(";",_uString)
		If  nPos > 0
			cExecuta := SubStr(_uString,1,nPos-1)
			_uString := If(Len(_uString)>nPos,SubStr(_uString,nPos+1,Len(_uString)-nPos),"")
		EndIf
	Else
		cExecuta := _uString
		_uString := ""
	Endif
Endif
Return(cExecuta)




/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ GeraLog  ³ Autor ³ Edelcio Cano          ³ Data ³ 10/08/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Funcao que efetuara a gravacao do arquivo de LOG           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Multi-Tek                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function GeraLog(_cString1)

AADD(_aLog,_cString1)

Return




/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ _Imprime ³ Autor ³ Edelcio Cano          ³ Data ³ 10/08/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Impressao do LOG de ocorrencias na importacao              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Multi-Tek                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function _Imprime()

Private titulo    := ""
Private cDesc1    := ""
Private cDesc2    := ""
Private cDesc3    := PADC("                                       ",74)
Private tamanho   := Iif ( EmptY(_ChaveAud),"P","G")
Private limite    := 80
Private cString   := "SZ9"
Private aReturn   := { "Zebrado", 1,"Administracao", 1, 2, 1, "",1 }
Private nomeprog  := "I_SZ9"
Private nLastKey  := 0
//            0       10       20       30       40       50       60       70
//            .12345679.12345679.12345679.12345679.12345679.12345679.12345679.123456789.
Private cabec1    := ""
Private cabec2    := ""




//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para Impressao dos Cabecalhos e Rodape  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private cbtxt   := Space(10)
Private cbcont  := 00
Private li      := 80
Private m_pag   := 01

Private wnrel := "I_SZ9"

If lFechament
	titulo    := " Ocorrencias durante o FECHAMENTO MENSAL DA PLANILHA."
	cabec1    := " Ocorrencias durante o FECHAMENTO MENSAL DA PLANILHA."
	cDesc1    := PADC("Emisso do relatorio com as ocorrencias",74)
	cDesc2    := PADC("durante o FECHAMENTO MENSAL DA PLANILHA",74)
Else
	cabec1    := " Ocorrencias durante a GERACAO DA PLANILHA."
	titulo    := " Ocorrencias durante a GERACAO DA PLANILHA."
	cDesc1    := PADC("Emisso do relatorio com as ocorrencias",74)
	cDesc2    := PADC("durante a GERACAO DA PLANILHA",74)
Endif


wnrel := SetPrint(cString,wnrel,,titulo,cDesc1,cDesc2,cDesc3,.F.,"")

If nLastKey == 27
	Set Filter to
	Return
Endif

SetDefault(aReturn,cString)

If nLastKey == 27
	Set Filter to
	Return
Endif

PROCESSA({|| _ImpNow()},"Processando o relatorio")

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ GeraAud  ³ Autor ³ Edelcio Cano          ³ Data ³ 10/08/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Auditoria de um Simil + Eis                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Multi-Tek                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function GeraAud(_cString1)

AADD(_aAud,_cString1)

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funo    ³ _ImpNow  ³ Autor ³ Edelcio Cano          ³ Data ³ 10/08/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descrio ³ Inicio da Impressao (Para funcionamento da REUGA)          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Multi-Tek                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function _ImpNow()

Local _i:=0

Private nTipo     := IF(aReturn[4]==1,15,18)

procregua(Len(_aLog)+Len(_aAud))

For _i := 1 to Len(_aLog)
	
	IncProc("Imprimindo, aguarde ...")
	
	If li > 59
		cabec(titulo,cabec1,cabec2,nomeprog,tamanho,nTipo)
		li := prow() + 1
	EndIf
	
	@ li, 000 PSAY _aLog[_i]
	
	li := li + 1
Next

eject

For _i := 1 to Len(_aAud)
	
	IncProc("Imprimindo, aguarde ...")
	
	If li > 59
		cabec(titulo,cabec1,cabec2,nomeprog,tamanho,nTipo)
		li := prow() + 1
	EndIf
	
	@ li, 000 PSAY _aAud[_i]
	
	li := li + 1
Next


Roda(0,"","P")

Set device to Screen
If aReturn[5] == 1
	Set Printer TO
	dbcommitAll()
	ourspool(wnrel)
Endif

Ms_Flush()

Return



